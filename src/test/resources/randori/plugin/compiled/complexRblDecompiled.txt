
[native(cls="UIntVectorClass",gc="exact",instance="UIntVectorObject",methods="auto")]
__AS3__$vec final dynamic class Vector$uint extends Object
{
  native public function Vector$uint(length:uint = 0,fixed:Boolean = false):*;
  native AS3 function shift():uint;
  native AS3 function some(checker:*,thisObj:Object = null):Boolean;
  native AS3 function reverse():Vector$uint;

  native AS3 function unshift(... rest):uint;
  native public function set length(value:uint):*;
  native AS3 function indexOf(value:uint,from:Number = 0):Number;
  native AS3 function pop():uint;
  native AS3 function slice(start:Number = 0,end:Number = 2147483647):Vector$uint;

  native private function _slice(start:Number = 0,end:Number = 2147483647):*;
  native AS3 function concat(... rest):Vector$uint;
  native private function _filter(callback:Function,thisObject:*):*;
  native AS3 function push(... rest):uint;
  native AS3 function every(checker:Function,thisObj:Object = null):Boolean;

  native AS3 function map(mapper:Function,thisObj:Object = null):*;
  native private function _map(callback:Function,thisObject:*):*;
  native AS3 function sort(comparefn:*):Vector$uint;
  native private function _splice(start:*,deleteCount:*,items:Array):*;
  native private function _reverse():void;

  native public function get length():uint;
  native public function set fixed(f:Boolean):*;
  native private function _spliceHelper(insertpoint:uint,insertcount:uint,deleteCount:uint,args:Object,offset:uint):void;
  native AS3 function forEach(eacher:Function,thisObj:Object = null):void;
  native AS3 function lastIndexOf(value:uint,from:Number = 2147483647):Number;

  native AS3 function toString():String;
  native AS3 function toLocaleString():String;
  native AS3 function join(separator:String = ","):String;
  native private function _concat(items:Array):*;
  native public function get fixed():Boolean;

  native private function newThisType():Vector$uint;
  native private function clamp(val:Number,len:uint):uint;
  native AS3 function splice(start:Number,deleteCount:Number,... rest):Vector$uint;
  native AS3 function filter(checker:Function,thisObj:Object = null):Vector$uint;
  static native private final function castToThisType(item:*):Vector$uint;

  static native private final function _forEach(o:*,callback:Function,thisObject:*):void;
  static native private final function _every(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _some(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _sort(o:*,args:Array):*;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

native public const avmplus.INCLUDE_METADATA:uint = 64;

[native(cls="BooleanClass",classgc="exact",instance="bool",methods="auto",customconstruct="true")]
public final class Boolean extends Object
{
  native public function Boolean(value:* = null):*;
  native AS3 function valueOf():Boolean;
  native AS3 function toString():String;
  static native public const length:int = 1;

  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

[native(cls="MethodClosureClass",gc="exact",instance="MethodClosure",methods="auto",customconstruct="true")]
private final class MethodClosure extends Function
{
  native private function MethodClosure():*;
  native public override function get prototype():*;
  native public override function set prototype(p:*):*;
}
[native("DescribeTypeClass::describeTypeJSON")]
native public function avmplus.describeTypeJSON(o:*,flags:uint):Object;

native public const avmplus.FLASH10_FLAGS:uint;
native public function avmplus.describeMetadata(x:XML,metadata:Array):void;
[native("Toplevel::encodeURIComponent")]
native public function encodeURIComponent(uri:String = undefined):String;
native public const avmplus.INCLUDE_BASES:uint = 2;

[native(cls="IntVectorClass",gc="exact",instance="IntVectorObject",methods="auto")]
__AS3__$vec final dynamic class Vector$int extends Object
{
  native public function Vector$int(length:uint = 0,fixed:Boolean = false):*;

  native AS3 function shift():int;
  native AS3 function some(checker:*,thisObj:Object = null):Boolean;
  native AS3 function reverse():Vector$int;
  native AS3 function unshift(... rest):uint;
  native public function set length(value:uint):*;

  native AS3 function indexOf(value:int,from:Number = 0):Number;
  native AS3 function pop():int;
  native AS3 function slice(start:Number = 0,end:Number = 2147483647):Vector$int;
  native private function _slice(start:Number = 0,end:Number = 2147483647):*;
  native AS3 function concat(... rest):Vector$int;

  native private function _filter(callback:Function,thisObject:*):*;
  native AS3 function push(... rest):uint;
  native AS3 function every(checker:Function,thisObj:Object = null):Boolean;
  native AS3 function map(mapper:Function,thisObj:Object = null):*;
  native private function _map(callback:Function,thisObject:*):*;

  native AS3 function sort(comparefn:*):Vector$int;
  native private function _splice(start:*,deleteCount:*,items:Array):*;
  native private function _reverse():void;
  native public function get length():uint;
  native public function set fixed(f:Boolean):*;

  native private function _spliceHelper(insertpoint:uint,insertcount:uint,deleteCount:uint,args:Object,offset:uint):void;
  native AS3 function forEach(eacher:Function,thisObj:Object = null):void;
  native AS3 function lastIndexOf(value:int,from:Number = 2147483647):Number;
  native AS3 function toString():String;
  native AS3 function toLocaleString():String;

  native AS3 function join(separator:String = ","):String;
  native private function _concat(items:Array):*;
  native public function get fixed():Boolean;
  native private function newThisType():Vector$int;
  native private function clamp(val:Number,len:uint):uint;

  native AS3 function splice(start:Number,deleteCount:Number,... rest):Vector$int;
  native AS3 function filter(checker:Function,thisObj:Object = null):Vector$int;
  static native private final function castToThisType(item:*):Vector$int;
  static native private final function _forEach(o:*,callback:Function,thisObject:*):void;
  static native private final function _every(o:*,callback:Function,thisObject:*):Boolean;

  static native private final function _some(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _sort(o:*,args:Array):*;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

[native(cls="StringClass",classgc="exact",instance="String",methods="auto",customconstruct="true")]
public final class String extends Object
{
  native public function String(value:* = ""):*;
  native AS3 function match(p:* = null):Array;

  native AS3 function indexOf(s:String = undefined,i:Number = 0):int;
  native private function _indexOf(s:String,i:int = 0):int;
  native private function _substr(start:int = 0,end:int = 2147483647):String;
  native AS3 function substring(start:Number = 0,end:Number = 2147483647):String;
  native AS3 function slice(start:Number = 0,end:Number = 2147483647):String;

  native AS3 function lastIndexOf(s:String = undefined,i:Number = 2147483647):int;
  native private function _lastIndexOf(s:String,i:int = 2147483647):int;
  native AS3 function toLowerCase():String;
  native private function _substring(start:int = 0,end:int = 2147483647):String;
  native AS3 function split(delim:* = null,limit:* = NaN):Array;

  native AS3 function concat(... rest):String;
  native AS3 function toLocaleLowerCase():String;
  native private function _slice(start:int = 0,end:int = 2147483647):String;
  native public function get length():int;
  native AS3 function search(p:* = null):int;

  native AS3 function charAt(i:Number = 0):String;
  native AS3 function localeCompare(other:* = null):int;
  native AS3 function toString():String;
  native AS3 function valueOf():String;
  native AS3 function substr(start:Number = 0,len:Number = 2147483647):String;

  native AS3 function replace(p:* = null,repl:* = null):String;
  native AS3 function charCodeAt(i:Number = 0):Number;
  native AS3 function toUpperCase():String;
  native AS3 function toLocaleUpperCase():String;
  static native private final function _replace(s:String,p:*,repl:*):String;

  static native public const length:int = 1;
  static native private final function _match(s:String,p:*):Array;
  static native private final function _search(s:String,p:*):int;
  static native private final function _split(s:String,delim:*,limit:uint):Array;
  static native AS3 final function fromCharCode(... rest):String;

  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

[native(cls="DoubleVectorClass",gc="exact",instance="DoubleVectorObject",methods="auto")]
__AS3__$vec final dynamic class Vector$double extends Object
{
  native public function Vector$double(length:uint = 0,fixed:Boolean = false):*;
  native AS3 function shift():Number;
  native AS3 function some(checker:*,thisObj:Object = null):Boolean;
  native AS3 function reverse():Vector$double;

  native AS3 function unshift(... rest):uint;
  native public function set length(value:uint):*;
  native AS3 function indexOf(value:Number,from:Number = 0):Number;
  native AS3 function pop():Number;
  native AS3 function slice(start:Number = 0,end:Number = 2147483647):Vector$double;

  native private function _slice(start:Number = 0,end:Number = 2147483647):*;
  native AS3 function concat(... rest):Vector$double;
  native private function _filter(callback:Function,thisObject:*):*;
  native AS3 function push(... rest):uint;
  native AS3 function every(checker:Function,thisObj:Object = null):Boolean;

  native AS3 function map(mapper:Function,thisObj:Object = null):*;
  native private function _map(callback:Function,thisObject:*):*;
  native AS3 function sort(comparefn:*):Vector$double;
  native private function _splice(start:*,deleteCount:*,items:Array):*;
  native private function _reverse():void;

  native public function get length():uint;
  native public function set fixed(f:Boolean):*;
  native private function _spliceHelper(insertpoint:uint,insertcount:uint,deleteCount:uint,args:Object,offset:uint):void;
  native AS3 function forEach(eacher:Function,thisObj:Object = null):void;
  native AS3 function lastIndexOf(value:Number,from:Number = 2147483647):Number;

  native AS3 function toString():String;
  native AS3 function toLocaleString():String;
  native AS3 function join(separator:String = ","):String;
  native private function _concat(items:Array):*;
  native public function get fixed():Boolean;

  native private function newThisType():Vector$double;
  native private function clamp(val:Number,len:uint):uint;
  native AS3 function splice(start:Number,deleteCount:Number,... rest):Vector$double;
  native AS3 function filter(checker:Function,thisObj:Object = null):Vector$double;
  static native private final function castToThisType(item:*):Vector$double;

  static native private final function _forEach(o:*,callback:Function,thisObject:*):void;
  static native private final function _every(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _some(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _sort(o:*,args:Array):*;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

native public function avmplus.describeParams(x:XML,parameters:Object):void;

[native(cls="ArrayClass",gc="exact",instance="ArrayObject",methods="auto")]
public dynamic class Array extends Object
{
  native public function Array(... rest):*;
  native AS3 function reverse():Array;
  native AS3 function map(callback:Function,thisObject:* = null):Array;
  native AS3 function shift():*;

  native public function get length():uint;
  native AS3 function unshift(... rest):uint;
  native AS3 function join(sep:* = null):String;
  native AS3 function lastIndexOf(searchElement:*,fromIndex:* = 2147483647):int;
  native public function set length(newLength:uint):*;

  native AS3 function indexOf(searchElement:*,fromIndex:* = 0):int;
  native AS3 function pop():*;
  native AS3 function slice(A:* = 0,B:* = NaN):Array;
  native AS3 function concat(... rest):Array;
  native AS3 function some(callback:Function,thisObject:* = null):Boolean;

  native AS3 function filter(callback:Function,thisObject:* = null):Array;
  native AS3 function forEach(callback:Function,thisObject:* = null):void;
  native AS3 function push(... rest):uint;
  native AS3 function every(callback:Function,thisObject:* = null):Boolean;
  native AS3 function splice(... rest):*;

  native AS3 function sortOn(names:*,options:* = 0,... rest):*;
  native AS3 function sort(... rest):*;
  static native public const CASEINSENSITIVE:uint = 1;
  static native private final function _shift(o:*):*;
  static native private final function _join(o:*,sep:*):String;

  static native private final function _unshift(o:*,args:Array):uint;
  static native private final function _indexOf(o:*,searchElement:*,fromIndex:int):int;
  static native private final function _pop(o:*):*;
  static native private final function _slice(o:*,A:Number,B:Number):Array;
  static native private final function _lastIndexOf(o:*,searchElement:*,fromIndex:int = 0):int;

  static native private final function _filter(o:*,callback:Function,thisObject:*):Array;
  static native private final function _splice(o:*,args:Array):Array;
  static native private final function _every(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _map(o:*,callback:Function,thisObject:*):Array;
  static native private final function _reverse(o:*):*;

  static native public const length:int = 1;
  static native private final function _forEach(o:*,callback:Function,thisObject:*):void;
  static native public const NUMERIC:uint = 16;
  static native public const UNIQUESORT:uint = 4;
  static native private final function _concat(o:*,args:Array):Array;

  static native private final function _some(o:*,callback:Function,thisObject:*):Boolean;
  static native public const RETURNINDEXEDARRAY:uint = 8;
  static native private final function _sortOn(o:*,names:*,options:*):*;
  static native private final function _sort(o:*,args:Array):*;
  static native public const DESCENDING:uint = 2;

  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

[native(cls="NamespaceClass",classgc="exact",instance="Namespace",methods="auto",customconstruct="true")]
public final class Namespace extends Object
{
  native public function Namespace(prefix:* = null,uri:* = null):*;
  native AS3 function valueOf():String;
  native public function get prefix():*;
  native AS3 function toString():String;

  native public function get uri():String;
  static native public const length:* = 2;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}
[native("Toplevel::parseInt")]
native public function parseInt(s:String = NaN,radix:int = 0):Number;
native public const AS3:* = "http://adobe.com/AS3/2006/builtin";

native public const avmplus.implementsXml:XML;
native public const Infinity:Number = Infinity;
native public const undefined:*;
native public const avmplus.accessorXml:XML;

[native(cls="ClassClass",gc="exact",instance="ClassClosure",methods="auto",customconstruct="true")]
public dynamic class Class extends Object
{
  native public function Class():*;

  native public final function get prototype():*;
  static native public const length:int = 1;
}
[API("675")]
[native("Toplevel::bugzilla")]
native public function bugzilla(n:int):Boolean;

[native(cls="ObjectClass",classgc="exact",methods="auto",customconstruct="true")]
public dynamic class Object
{
  native public function Object():*;
  native AS3 function hasOwnProperty(V:* = null):Boolean;

  native AS3 function propertyIsEnumerable(V:* = null):Boolean;
  native AS3 function isPrototypeOf(V:* = null):Boolean;
  static native private final function _hasOwnProperty(o:*,V:String):Boolean;
  static native protected final function _dontEnumPrototype(proto:Object):void;
  static native private final function _propertyIsEnumerable(o:*,V:String):Boolean;

  static native private final function _isPrototypeOf(o:*,V:*):Boolean;
  static native protected final function _setPropertyIsEnumerable(o:*,V:String,enumerable:Boolean):void;
  static native private final function _toString(o:*):String;
  static native public const length:int = 1;
  [API("675")]
  static native public final function _init():*;

  static native public final function init():*;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}
native public const avmplus.INCLUDE_VARIABLES:uint = 8;

[native(cls="UIntClass",classgc="exact",instance="uint32_t",methods="auto",customconstruct="true")]
public final class uint extends Object
{
  native public function uint(value:* = 0):*;
  native AS3 function toPrecision(p:* = 0):String;

  native AS3 function valueOf():uint;
  native AS3 function toFixed(p:* = 0):String;
  native AS3 function toExponential(p:* = 0):String;
  native AS3 function toString(radix:* = 10):String;
  static native public const MIN_VALUE:uint = 0;

  static native public const length:int = 1;
  static native public const MAX_VALUE:uint = NaN;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

[native(cls="VectorClass",gc="exact",instance="ObjectVectorObject",methods="auto")]
__AS3__$vec final dynamic class Vector extends Object
{
  native public function Vector():*;
}
native public const avmplus.metadataXml:XML;

[native("Toplevel::unescape")]
native public function unescape(s:String = undefined):String;
[native("Toplevel::parseFloat")]
native public function parseFloat(str:String = NaN):Number;
native public const avmplus.INCLUDE_INTERFACES:uint = 4;
native public const avmplus.methodXml:XML;
[native("Toplevel::isFinite")]
native public function isFinite(n:Number = 0):Boolean;

native public const avmplus.typeXml:XML;
[native("Toplevel::isNaN")]
native public function isNaN(n:Number = 0):Boolean;
[native("Toplevel::escape")]
native public function escape(s:String = undefined):String;
native public const avmplus.HIDE_NSURI_METHODS:uint = 1;

[native(cls="NumberClass",classgc="exact",instance="double",methods="auto",customconstruct="true")]
public final class Number extends Object
{
  native public function Number(value:* = 0):*;

  native AS3 function toPrecision(p:* = 0):String;
  native AS3 function valueOf():Number;
  native AS3 function toFixed(p:* = 0):String;
  native AS3 function toExponential(p:* = 0):String;
  native AS3 function toString(radix:* = 10):String;

  static native private final function _convert(n:Number,precision:int,mode:int):String;
  static native public const MIN_VALUE:Number;
  static native public const length:int = 1;
  static native private const DTOSTR_FIXED:int = 1;
  static native public const POSITIVE_INFINITY:Number = Infinity;

  static native private const DTOSTR_PRECISION:int = 2;
  static native public const NEGATIVE_INFINITY:Number = -Infinity;
  static native private final function _numberToString(n:Number,radix:int):String;
  static native public const MAX_VALUE:Number = NaN;
  static native private const DTOSTR_EXPONENTIAL:int = 3;

  static native public const NaN:Number = NaN;
  static native private final function _minValue():Number;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}
native public function avmplus.finish(e:XML,i:Object):void;
[native("DescribeTypeClass::getQualifiedSuperclassName")]
native public function avmplus.getQualifiedSuperclassName(value:*):String;

[native("Toplevel::encodeURI")]
native public function encodeURI(uri:String = undefined):String;
[native("Toplevel::decodeURI")]
native public function decodeURI(uri:String = undefined):String;

[native(cls="ObjectVectorClass",gc="exact",instance="ObjectVectorObject",methods="auto")]
__AS3__$vec final dynamic class Vector$object extends Object
{
  native public function Vector$object(length:uint = 0,fixed:Boolean = false):*;
  native AS3 function shift():*;
  native AS3 function some(checker:*,thisObj:Object = null):Boolean;

  native AS3 function reverse():Vector$object;
  native AS3 function unshift(... rest):uint;
  native public function set length(value:uint):*;
  native AS3 function indexOf(value:Object,from:Number = 0):Number;
  native AS3 function pop():*;

  native AS3 function slice(start:Number = 0,end:Number = 2147483647):Vector$object;
  native private function _slice(start:Number = 0,end:Number = 2147483647):*;
  native AS3 function concat(... rest):Vector$object;
  native private function _filter(callback:Function,thisObject:*):*;
  native AS3 function push(... rest):uint;

  native AS3 function every(checker:Function,thisObj:Object = null):Boolean;
  native AS3 function map(mapper:Function,thisObj:Object = null):*;
  native private function _map(callback:Function,thisObject:*):*;
  native AS3 function sort(comparefn:*):Vector$object;
  native private function _splice(start:*,deleteCount:*,items:Array):*;

  native private function _reverse():void;
  native public function get length():uint;
  native public function set fixed(f:Boolean):*;
  native private function _spliceHelper(insertpoint:uint,insertcount:uint,deleteCount:uint,args:Object,offset:uint):void;
  native AS3 function forEach(eacher:Function,thisObj:Object = null):void;

  native AS3 function lastIndexOf(value:Object,from:Number = 2147483647):Number;
  native AS3 function toString():String;
  native AS3 function toLocaleString():String;
  native AS3 function join(separator:String = ","):String;
  native private function _concat(items:Array):*;

  native public function get fixed():Boolean;
  native private function newThisType():Vector$object;
  native private function clamp(val:Number,len:uint):uint;
  native AS3 function splice(start:Number,deleteCount:Number,... rest):Vector$object;
  native AS3 function filter(checker:Function,thisObj:Object = null):Vector$object;

  static native private final function castToThisType(item:*):Vector$object;
  static native private final function _forEach(o:*,callback:Function,thisObject:*):void;
  static native private final function _every(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _some(o:*,callback:Function,thisObject:*):Boolean;
  static native private final function _sort(o:*,args:Array):*;

  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}
native public const avmplus.INCLUDE_CONSTRUCTOR:uint = 128;
native public function avmplus.describeType(value:*,flags:uint):XML;
native public const avmplus.factoryXml:XML;
native public const avmplus.parameterXml:XML;

[native("Toplevel::isXMLName")]
native public function isXMLName(str:* = null):Boolean;
native public const avmplus.INCLUDE_TRAITS:uint = 256;
native public const avmplus.constructorXml:XML;
native public const avmplus.extendsXml:XML;
native public const avmplus.constantXml:XML;

native public const avmplus.USE_ITRAITS:uint = 512;
native public function avmplus.describeTraits(x:XML,traits:Object):void;
native public const NaN:Number = NaN;
native public const avmplus.HIDE_OBJECT:uint = 1024;
[native("DescribeTypeClass::getQualifiedClassName")]
native public function avmplus.getQualifiedClassName(value:*):String;

native public const avmplus.argXml:XML;

[native(cls="IntClass",classgc="exact",instance="int32_t",methods="auto",customconstruct="true")]
public final class int extends Object
{
  native public function int(value:* = 0):*;
  native AS3 function toPrecision(p:* = 0):String;
  native AS3 function valueOf():int;
  native AS3 function toFixed(p:* = 0):String;

  native AS3 function toExponential(p:* = 0):String;
  native AS3 function toString(radix:* = 10):String;
  static native public const MIN_VALUE:int = -2147483648;
  static native public const length:int = 1;
  static native public const MAX_VALUE:int = 2147483647;

  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}
native public const avmplus.INCLUDE_METHODS:uint = 32;
native public const avmplus.INCLUDE_ACCESSORS:uint = 16;

[native(cls="FunctionClass",gc="exact",instance="FunctionObject",methods="auto",customconstruct="true")]
public dynamic class Function extends Object
{
  native public function Function():*;
  native public function get prototype():*;

  native public function set prototype(p:*):*;
  native AS3 function call(thisArg:* = null,... rest):*;
  native public function get length():int;
  native AS3 function apply(thisArg:* = null,argArray:* = null):*;
  static native private final function emptyCtor():*;

  static native public const length:int = 1;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}
native public const avmplus.variableXml:XML;
[native("Toplevel::decodeURIComponent")]
native public function decodeURIComponent(uri:String = undefined):String;


public class randori.styles.StyleExtensionMapEntry extends Object
{
  native public function StyleExtensionMapEntry():*;

  native private var hashMap:Object;
  native public function addExtensionType(extensionType:String,extensionValue:String):void;
  native public function hasExtensionType(extensionType:String):Object;
  native public function getExtensionValue(extensionType:String):String;
  native public function clone():StyleExtensionMapEntry;

  native public function mergeTo(entry:StyleExtensionMapEntry):void;
}


[JavaScript(export="false",name="Object",mode="json")]
public class randori.i18n.Translation extends Object
{
  native public function Translation():*;
  native public var key:String;
  native public var value:*;
}


public class randori.behaviors.AbstractBehavior extends Object
{
  native public function AbstractBehavior():*;

  native protected var viewElementIDMap:Object;
  native protected var viableInjectionPoints:Object;
  native protected var decoratedElement:randori.webkit.html.HTMLElement;
  native protected var decoratedNode:randori.jquery.JQuery;
  native protected var injectedPoints:Array;

  native public function hide():void;
  native public function show():void;
  native protected function getViewElementByID(id:String):Object;
  native protected function onPreRegister():void;
  native protected function onRegister():void;

  native protected function onDeregister():void;
  native public function injectPotentialNode(id:String,node:Object):void;
  native public function provideDecoratedElement(element:randori.webkit.html.HTMLElement):void;
  native public function verifyAndRegister():void;
  native public function removeAndCleanup():void;

  native private function getBehaviorInjectionPoints():Object;
}


public class randori.behaviors.AbstractRenderer extends randori.behaviors.AbstractBehavior
{
  native public function AbstractRenderer():*;
  native public function setData(data:Object):void;
}


public class randori.bus.AbstractEventBus extends Object
{
  native public function AbstractEventBus():*;
}


public class randori.i18n.AbstractTranslator extends Object
{
  native public function AbstractTranslator(translationResult:randori.signal.SimpleSignal):*;

  native public var translationResult:randori.signal.SimpleSignal;
  native public function synchronousTranslate(domain:String,keys:Vector.<String>):Vector.<randori.i18n.Translation>;
  native public function translate(domain:String,keys:Vector.<String>):void;
}


public class randori.behaviors.template.TemplateRenderer extends randori.behaviors.AbstractBehavior
{
  native public function TemplateRenderer(domWalker:randori.dom.DomWalker,templateBuilder:randori.template.TemplateBuilder):*;
  native private var domWalker:randori.dom.DomWalker;

  native private var templateBuilder:randori.template.TemplateBuilder;
  native protected var _data:Object;
  native public function get data():Object;
  native public function set data(value:Object):void;
  native protected override function onPreRegister():void;

  native protected function renderMessage():void;
  native protected override function onDeregister():void;
}


public class randori.dom.ExternalBehaviorFactory extends Object
{
  native public function ExternalBehaviorFactory():*;
  native public function createExternalBehavior(element:randori.webkit.html.HTMLElement,behaviorClassName:String,constructorFunction:Function):randori.behaviors.AbstractBehavior;
}


public class randori.startup.RandoriBootstrap extends Object
{
  native public function RandoriBootstrap(rootNode:randori.webkit.dom.Node):*;

  native private var rootNode:randori.webkit.dom.Node;
  native public function launch(debugMode:Boolean = false,dynamicClassBaseUrl:String = "generated/"):void;
}


public class randori.behaviors.SimpleList extends randori.behaviors.AbstractBehavior
{
  native public function SimpleList(domWalker:randori.dom.DomWalker):*;
  native private var domWalker:randori.dom.DomWalker;
  [View(required="false")]
  native public var template:randori.jquery.JQuery;

  [Inject]
  native public var templateBuilder:randori.template.TemplateBuilder;
  native protected var _renderFunction:Function;
  native public function get renderFunction():Function;
  native public function set renderFunction(value:Function):void;
  native protected var _data:Array;

  native public function get data():Array;
  native public function set data(value:Array):void;
  native public function renderList():void;
  native protected override function onPreRegister():void;
  native protected override function onRegister():void;

  native protected override function onDeregister():void;
  native public function showLoading():void;
  native private function showNoResults(visible:Boolean = true):void;
}


public class randori.i18n.PropertyFileTranslator extends randori.i18n.AbstractTranslator
{
  native public function PropertyFileTranslator(translationResult:randori.signal.SimpleSignal,url:String,xmlHttpRequest:randori.webkit.xml.XMLHttpRequest,urlRewriter:guice.loader.URLRewriterBase):*;
  native private var url:String;

  native private var keyValuePairs:Object;
  native private var fileLoaded:Boolean = false;
  native private var xmlHttpRequest:randori.webkit.xml.XMLHttpRequest;
  native private var urlRewriter:guice.loader.URLRewriterBase;
  native public override function synchronousTranslate(domain:String,keys:Vector.<String>):Vector.<randori.i18n.Translation>;

  native public override function translate(domain:String,keys:Vector.<String>):void;
  native private function provideTranslations(domain:String,keys:Vector.<String>):Vector.<randori.i18n.Translation>;
  native private function makeSynchronousRequest(url:String):void;
  native private function makeAsynchronousRequest(url:String,fileLoaded:Function):void;
  native private function parseResult(responseText:String):void;

  native private function parseLine(line:String):void;
}


public class randori.i18n.LocalizationProvider extends Object
{
  native public function LocalizationProvider(translator:randori.i18n.AbstractTranslator):*;
  native private var internationalKey:RegExp;
  native private var translator:randori.i18n.AbstractTranslator;
  native private var pendingTranslations:Object;

  native private var timer:randori.timer.Timer;
  native private function getElementLocalizationComponents(textNode:randori.webkit.dom.Node):Array;
  native public function translateKeysSynchronously(domain:String,keys:Vector.<String>):Vector.<randori.i18n.Translation>;
  native public function investigateTextNode(textNode:randori.webkit.dom.Node):void;
  native private function requestTranslation(expression:String,textNode:randori.webkit.dom.Node):void;

  native private function scheduleTranslation():void;
  native private function sendTranslationRequest(timer:randori.timer.Timer):void;
  native private function provideTranslation(domain:String,translations:Vector.<randori.i18n.Translation>):void;
  native private function applyTranslation(node:randori.webkit.dom.Node,expression:String,translation:String):void;
}


public class randori.template.TemplateBuilder extends Object
{
  native public function TemplateBuilder():*;

  native private var templateAsString:String;
  native public var validTemplate:Boolean = false;
  native public function captureAndEmptyTemplateContents(rootTemplateNode:randori.jquery.JQuery):void;
  native private function returnFieldName(token:String):String;
  native public function renderTemplateClone(data:Object):randori.jquery.JQuery;

  native private function resolveComplexName(root:Object,name:String):Object;
}


public class randori.async.Promise extends Object
{
  native public function Promise():*;
  native private var thenContracts:Array;
  native private var state:int = 0;
  native public var value:*;

  native public var reason:Object;
  native private function isFunction(obj:*):Boolean;
  native public function then(onFulfilled:Function = null,onRejected:Function = null):Promise;
  native public function resolve(response:*):void;
  native private function fullfill(response:*):void;

  native public function reject(reason:Object):void;
  native private function internalReject(reason:Object):void;
  static native public const PENDING:int = 0;
  static native public const REJECTED:int = 1;
  static native public const FULLFILLED:int = 2;
}

[JavaScript(export="false",name="Object",mode="json")]
private class ThenContract extends Object
{

  native private function ThenContract(fullfilledHandler:Function,rejectedHandler:Function,promise:randori.async.Promise):*;
  native public var fullfilledHandler:Function;
  native public var rejectedHandler:Function;
  native public var promise:randori.async.Promise;
}


public class randori.data.HashMap extends Object
{
  native public function HashMap():*;

  native private var entries:Object;
  native private function getEntry(key:Object):Entry;
  native public function get(key:Object):*;
  native public function put(key:Object,value:*):void;
}

[JavaScript(export="false",name="Object",mode="json")]
private class Entry extends Object
{
  native private function Entry(key:Object,value:*):*;

  native public var key:Object;
  native public var value:*;
}


public class randori.styles.StyleExtensionManager extends Object
{
  native public function StyleExtensionManager(map:randori.styles.StyleExtensionMap,serviceFactory:randori.service.XMLHttpRequestProvider,urlRewriter:guice.loader.URLRewriterBase):*;
  native private var map:randori.styles.StyleExtensionMap;
  native private var serviceFactory:randori.service.XMLHttpRequestProvider;

  native private var urlRewriter:guice.loader.URLRewriterBase;
  native public function getExtensionsForFragment(element:randori.webkit.html.HTMLElement):randori.data.HashMap;
  native public function parsingNeeded(link:randori.webkit.html.HTMLLinkElement):Boolean;
  native private function resetLinkAndReturnURL(link:randori.webkit.html.HTMLLinkElement):String;
  native private function resolveSheet(url:String):void;

  native private function parseAndPersistBehaviors(sheet:String):void;
  native public function parseAndReleaseLinkElement(element:randori.webkit.html.HTMLLinkElement):void;
}


public class randori.timer.Timer extends Object
{
  native public function Timer(delay:int,repeatCount:int = 0):*;
  native public var timerTick:randori.signal.SimpleSignal;
  native public var timerComplete:randori.signal.SimpleSignal;

  native private var _delay:int;
  native private var _repeatCount:int;
  native private var _currentCount:int;
  native private var intervalID:int;
  native public function get delay():int;

  native public function get repeatCount():int;
  native public function get currentCount():int;
  native protected function onTimerTick():void;
  native public function start():void;
  native public function stop():void;

  native public function reset():void;
}


[JavaScript(mode="global")]
public class randori.utilities.PolyFill extends Object
{
  native public function PolyFill():*;
  [JavaScriptCode(file="_console.js")]
  static native public function fillConsoleForIE():void;
}


public class randori.behaviors.viewStack.ViewChangeAnimator extends Object
{
  native public function ViewChangeAnimator():*;
}


public class randori.service.AbstractService extends Object
{
  native public function AbstractService(xmlHttpRequest:randori.webkit.xml.XMLHttpRequest):*;

  [Inject]
  native public var urlRewriter:guice.loader.URLRewriterBase;
  native protected var xmlHttpRequest:randori.webkit.xml.XMLHttpRequest;
  native protected function createUri(protocol:String,host:String,port:String,path:String):String;
  native protected function modifyHeaders(request:randori.webkit.xml.XMLHttpRequest):void;
  native protected function sendRequest(verb:String,uri:String):randori.async.Promise;

  native protected function sendRequestFull(verb:String,protocol:String,host:String,port:String,path:String):randori.async.Promise;
}


public class randori.content.ContentLoader extends randori.service.AbstractService
{
  native public function ContentLoader(contentCache:randori.content.ContentCache,xmlHttpRequest:randori.webkit.xml.XMLHttpRequest,urlRewriter:guice.loader.URLRewriterBase):*;
  native private var urlRewriter:guice.loader.URLRewriterBase;
  native private var contentCache:randori.content.ContentCache;
  native public function synchronousFragmentLoad(fragmentURL:String):String;

  native public function asynchronousLoad(fragmentURL:String):randori.async.Promise;
}


public class randori.dom.DomWalker extends Object
{
  native public function DomWalker(domExtensionFactory:randori.dom.DomExtensionFactory,classBuilder:guice.InjectionClassBuilder,elementDescriptorFactory:randori.dom.ElementDescriptorFactory,styleExtensionManager:randori.styles.StyleExtensionManager,localizationProvider:randori.i18n.LocalizationProvider):*;
  native private var domExtensionFactory:randori.dom.DomExtensionFactory;
  native private var classBuilder:guice.InjectionClassBuilder;
  native private var elementDescriptorFactory:randori.dom.ElementDescriptorFactory;

  native private var styleExtensionManager:randori.styles.StyleExtensionManager;
  native private var localizationProvider:randori.i18n.LocalizationProvider;
  native private var extensionsToBeApplied:randori.data.HashMap;
  native private var entryElement:randori.webkit.html.HTMLElement;
  native private function investigateLinkElement(element:randori.webkit.html.HTMLLinkElement):void;

  native private function investigateDomElement(element:randori.webkit.html.HTMLElement,parentBehavior:randori.behaviors.AbstractBehavior):void;
  native private function investigateNode(node:randori.webkit.dom.Node,parentBehavior:randori.behaviors.AbstractBehavior):void;
  native private function walkChildren(parentNode:randori.webkit.dom.Node,parentBehavior:randori.behaviors.AbstractBehavior = null):void;
  native public function walkDomChildren(parentNode:randori.webkit.dom.Node,parentBehavior:randori.behaviors.AbstractBehavior = null):void;
  native public function walkDomFragment(node:randori.webkit.dom.Node,parentBehavior:randori.behaviors.AbstractBehavior = null):void;
}


public class randori.behaviors.List extends randori.behaviors.SimpleList
{

  native public function List(walker:randori.dom.DomWalker):*;
  native protected var _selectedItem:Object;
  native protected var _selectedIndex:int;
  native public var listChanged:randori.signal.SimpleSignal;
  native public function get selectedItem():Object;

  native public function set selectedItem(value:Object):void;
  native public function get selectedIndex():int;
  native public function set selectedIndex(value:int):void;
  native protected override function onRegister():void;
  native public override function renderList():void;

  native protected function onItemClick(e:randori.webkit.dom.DomEvent):void;
}


public class randori.utilities.BehaviorDecorator extends Object
{
  native public function BehaviorDecorator():*;
  native public function decorateObject(behavior:*):void;
  static native private function verifyAndRegister():void;
  static native private function removeAndCleanup():void;

  static native private function provideDecoratedElement(element:randori.webkit.html.HTMLElement):void;
  static native private function injectPotentialNode(id:String,node:Object):void;
}

[JavaScript(export="false")]
private class FutureBehavior extends Object
{
  native private function FutureBehavior():*;
  native public var verifyAndRegister:Function;
  native public var removeAndCleanup:Function;

  native public var provideDecoratedElement:Function;
  native public var injectPotentialNode:Function;
}


public class randori.dom.DomExtensionFactory extends Object
{
  native public function DomExtensionFactory(contentLoader:randori.content.ContentLoader,classResolver:guice.resolver.ClassResolver,externalBehaviorFactory:randori.dom.ExternalBehaviorFactory):*;
  native private var contentLoader:randori.content.ContentLoader;
  native private var classResolver:guice.resolver.ClassResolver;

  native private var externalBehaviorFactory:randori.dom.ExternalBehaviorFactory;
  native public function buildBehavior(classBuilder:guice.InjectionClassBuilder,element:randori.webkit.html.HTMLElement,behaviorClassName:String):randori.behaviors.AbstractBehavior;
  native public function buildNewContent(element:randori.webkit.html.HTMLElement,fragmentURL:String):void;
  native public function buildChildClassBuilder(classBuilder:guice.InjectionClassBuilder,element:randori.webkit.html.HTMLElement,contextClassName:String):guice.InjectionClassBuilder;
}


public class randori.service.parser.AbstractParser extends Object
{
  native public function AbstractParser():*;
}


public class randori.dom.ElementDescriptorFactory extends Object
{

  native public function ElementDescriptorFactory(styleExtensionManager:randori.styles.StyleExtensionManager):*;
  native private var styleExtensionManager:randori.styles.StyleExtensionManager;
  native public function describeElement(element:randori.webkit.html.HTMLElement,possibleExtensions:randori.data.HashMap):randori.dom.ElementDescriptor;
}


public class randori.behaviors.AbstractMediator extends randori.behaviors.AbstractBehavior
{
  native public function AbstractMediator():*;
  native public function setViewData(viewData:Object):void;
}


public class guice.loader.URLRewriterBase extends Object
{

  native public function URLRewriterBase(debugMode:Boolean = false):*;
  native public function rewriteURL(url:String):String;
}


public class randori.service.url.URLCacheBuster extends guice.loader.URLRewriterBase
{
  native public function URLCacheBuster(debugMode:Boolean = false):*;
  native public override function rewriteURL(url:String):String;
}


public class randori.content.ContentCache extends Object
{
  native public function ContentCache():*;

  native public function hasCachedFile(key:String):Boolean;
  native public function getCachedFileList():Array;
  native public function getCachedHtmlForUri(key:String):String;
  static native public var htmlMergedFiles:Object;
}


public class randori.signal.SimpleSignal extends Object
{
  native public function SimpleSignal():*;

  native private var permanent:Array;
  native private var once:Array;
  native private function findIndex(listener:Function,array:Array):int;
  native public function add(listener:Function):void;
  native public function addOnce(listener:Function):void;

  native public function remove(listener:Function):void;
  native public function has(listener:Function):Boolean;
  native public function dispatch(... rest):void;
}


public class randori.behaviors.viewStack.MediatorCapturer extends randori.behaviors.AbstractBehavior
{
  native public function MediatorCapturer():*;
  native private var _mediator:randori.behaviors.AbstractMediator;

  native public function get mediator():randori.behaviors.AbstractMediator;
  native protected override function onDeregister():void;
  native public override function injectPotentialNode(id:String,node:Object):void;
}


public class guice.binding.provider.AbstractProvider extends Object
{
  native public function AbstractProvider():*;
  native public function get():*;
}


public class randori.service.XMLHttpRequestProvider extends guice.binding.provider.AbstractProvider
{

  native public function XMLHttpRequestProvider():*;
  native public override function get():*;
}


public class randori.service.ServiceConfig extends Object
{
  native public function ServiceConfig():*;
  native public var protocol:String = null;
  native public var host:String = null;

  native public var port:String = null;
  native public var debugMode:Boolean = true;
}


[JavaScript(export="false",name="Object",mode="json")]
public class randori.dom.ElementDescriptor extends Object
{
  native public function ElementDescriptor(context:String,behavior:String,fragment:String,formatter:String,validator:String):*;
  native public var context:String;
  native public var behavior:String;

  native public var fragment:String;
  native public var formatter:String;
  native public var validator:String;
}


public class randori.behaviors.list.DataRendererProvider extends randori.behaviors.AbstractBehavior
{
  native public function DataRendererProvider(data:Object):*;
  native private var data:Object;

  native protected override function onDeregister():void;
  native public override function injectPotentialNode(id:String,node:Object):void;
}


public class guice.GuiceModule extends Object
{
  native public function GuiceModule():*;
  native public function configure(binder:guice.binding.Binder):void;
}


public class randori.startup.RandoriModule extends guice.GuiceModule
{
  native public function RandoriModule(urlRewriter:guice.loader.URLRewriterBase):*;

  native private var urlRewriter:guice.loader.URLRewriterBase;
  native public override function configure(binder:guice.binding.Binder):void;
}


public class randori.content.ContentParser extends Object
{
  native public function ContentParser():*;
  native public function parse(content:String):String;
}


public class randori.behaviors.ViewStack extends randori.behaviors.AbstractBehavior
{
  native public function ViewStack(contentLoader:randori.content.ContentLoader,contentParser:randori.content.ContentParser,domWalker:randori.dom.DomWalker,viewChangeAnimator:randori.behaviors.viewStack.ViewChangeAnimator):*;

  native private var contentLoader:randori.content.ContentLoader;
  native private var contentParser:randori.content.ContentParser;
  native private var viewChangeAnimator:randori.behaviors.viewStack.ViewChangeAnimator;
  native private var domWalker:randori.dom.DomWalker;
  native private var _currentView:randori.jquery.JQuery;

  native private var viewFragmentStack:Vector.<randori.jquery.JQuery>;
  native private var mediators:Object;
  native public function get currentViewUrl():String;
  native public function hasView(url:String):Boolean;
  native public function pushView(url:String):randori.async.Promise;

  native public function popView():void;
  native public function selectView(url:String):void;
  native private function showView(oldFragment:randori.jquery.JQuery,newFragment:randori.jquery.JQuery):void;
  native private function transitionViews(arrivingView:randori.jquery.JQuery,departingView:randori.jquery.JQuery,data:Object = null):randori.jquery.JQuery;
  native protected override function onRegister():void;

  native protected override function onDeregister():void;
}


public class randori.styles.StyleExtensionMap extends Object
{
  native public function StyleExtensionMap():*;
  native private var hashMap:Object;
  native public function addCSSEntry(cssSelector:String,extensionType:String,extensionValue:String):void;
  native public function hasBehaviorEntry(cssSelector:String):Boolean;

  native public function getExtensionEntry(cssSelector:String):randori.styles.StyleExtensionMapEntry;
  native public function getAllRandoriSelectorEntries():Vector.<String>;
}


public class randori.content.ContentResolver extends Object
{
  native public function ContentResolver(map:randori.styles.StyleExtensionMap):*;
  native private var map:randori.styles.StyleExtensionMap;
  native public function resolveContent(element:randori.webkit.html.HTMLElement):void;
}


public class randori.i18n.NoOpTranslator extends randori.i18n.AbstractTranslator
{

  native public function NoOpTranslator(translationResult:randori.signal.SimpleSignal):*;
  native public override function synchronousTranslate(domain:String,keys:Vector.<String>):Vector.<randori.i18n.Translation>;
  native public override function translate(domain:String,keys:Vector.<String>):void;
}


[JavaScript(export="false",name="Object",mode="json")]
public class randori.i18n.Domains extends Object
{
  native public function Domains():*;
  static native public const LABELS:int = 0;

  static native public const MESSAGES:int = 1;
  static native public const REFERENCES:int = 2;
}


public class guice.binding.Binder extends Object
{
  native public function Binder(hashMap:guice.binding.utility.BindingHashMap):*;
  native private var hashMap:guice.binding.utility.BindingHashMap;
  native public function getBinding(typeDefinition:guice.reflection.TypeDefinition):guice.binding.AbstractBinding;

  native public function addBinding(abstractBinding:guice.binding.AbstractBinding):void;
  native public function bind(type:Class):guice.binding.BindingFactory;
}


public class guice.InjectionClassBuilder extends Object
{
  native public function InjectionClassBuilder(injector:guice.Injector,classResolver:guice.resolver.ClassResolver):*;
  native private var injector:guice.Injector;
  native private var classResolver:guice.resolver.ClassResolver;

  native public function buildClass(className:String):Object;
}


public class guice.Injector extends Object
{
  native public function Injector(binder:guice.binding.Binder,classResolver:guice.resolver.ClassResolver):*;
  native protected var binder:guice.binding.Binder;
  native protected var classResolver:guice.resolver.ClassResolver;
  native public function getInstance(dependency:Class):Object;

  native public function getInstanceByDefinition(dependencyTypeDefinition:guice.reflection.TypeDefinition):Object;
  native internal function getBinding(typeDefinition:guice.reflection.TypeDefinition):guice.binding.AbstractBinding;
  native public function buildClass(typeDefinition:guice.reflection.TypeDefinition):Object;
  native public function injectMembers(instance:*):void;
  native private function buildFromInjectionInfo(dependencyTypeDefinition:guice.reflection.TypeDefinition,constructorPoints:Vector.<guice.reflection.InjectionPoint>):Object;

  native private function injectMemberPropertiesFromInjectionInfo(instance:*,fieldPoints:Vector.<guice.reflection.InjectionPoint>):void;
  native private function injectMembersMethodsFromInjectionInfo(instance:*,methodPoints:Vector.<guice.reflection.MethodInjectionPoint>):void;
  native private function resolveDependency(typeDefinition:guice.reflection.TypeDefinition):Object;
}


public class guice.ChildInjector extends guice.Injector
{
  native public function ChildInjector(binder:guice.binding.Binder,classResolver:guice.resolver.ClassResolver,parentInjector:guice.Injector):*;
  native private var parentInjector:guice.Injector;

  native internal function configureBinder(module:guice.GuiceModule):void;
  native internal override function getBinding(typeDefinition:guice.reflection.TypeDefinition):guice.binding.AbstractBinding;
}


[JavaScript(export="false",name="Object",mode="json")]
public class guice.reflection.InjectionPoint extends Object
{
  native public function InjectionPoint():*;
  native public var n:String;
  native public var t:String;

  native public var r:int;
  native public var v:*;
}


public class guice.binding.Scope extends Object
{
  native public function Scope():*;
  static native public const Instance:int = 0;
  static native public const Singleton:int = 1;

  static native public const Context:int = 2;
}


public class guice.loader.SynchronousClassLoader extends Object
{
  native public function SynchronousClassLoader(xmlHttpRequest:randori.webkit.xml.XMLHttpRequest,urlRewriter:guice.loader.URLRewriterBase,dynamicClassBaseUrl:String):*;
  native private var xmlHttpRequest:randori.webkit.xml.XMLHttpRequest;
  native private var dynamicClassBaseUrl:String;
  native private var urlRewriter:guice.loader.URLRewriterBase;

  native public function loadClass(qualifiedClassName:String):String;
}


[JavaScript(export="false")]
public class randori.jquery.JQuery extends Object
{
  native public function JQuery():*;
  native public var context:randori.webkit.dom.Element;
  native public var jquery:String;
  native public var length:Number;

  native public var selector:String;
  [JavaScriptMethod(name="add")]
  native public function add1(selector:String):JQuery;
  [JavaScriptMethod(name="add")]
  native public function add2(elements:Vector.<randori.webkit.dom.Element>):JQuery;
  [JavaScriptMethod(name="add")]
  native public function add3(html:randori.webkit.dom.Element):JQuery;
  [JavaScriptMethod(name="add")]
  native public function add4(jQueryobject:JQuery):JQuery;

  [JavaScriptMethod(name="add")]
  native public function add5(selector:String,context:randori.webkit.dom.Element):JQuery;
  native public function addBack(selector:String = ""):JQuery;
  [JavaScriptMethod(name="addClass")]
  native public function addClass1(className:String):JQuery;
  [JavaScriptMethod(name="addClass")]
  native public function addClass2(callBack:Function):JQuery;
  [JavaScriptMethod(name="after")]
  native public function after1(content1:*,content2:* = null):JQuery;

  [JavaScriptMethod(name="after")]
  native public function after2(callBack:Function):JQuery;
  native public function ajaxComplete(callBack:Function):JQuery;
  native public function ajaxError(callBack:Function):JQuery;
  native public function ajaxSend(callBack:Function):JQuery;
  native public function ajaxStart(callBack:Function):JQuery;

  native public function ajaxStop(callBack:Function):JQuery;
  native public function ajaxSuccess(callBack:Function):JQuery;
  native public function andSelf():JQuery;
  [JavaScriptMethod(name="animate")]
  native public function animate1(properties:*):JQuery;
  [JavaScriptMethod(name="animate")]
  native public function animate2(properties:randori.jquery.OptionsArgument):JQuery;

  [JavaScriptMethod(name="append")]
  native public function append1(content1:*,content2:* = null):JQuery;
  [JavaScriptMethod(name="append")]
  native public function append2(callBack:Function):JQuery;
  native public function appendTo(target:*):JQuery;
  [JavaScriptMethod(name="attr")]
  native public function attr1(attributeName:String):String;
  [JavaScriptMethod(name="attr")]
  native public function attr2(attributeName:String,value:*):JQuery;

  [JavaScriptMethod(name="attr")]
  native public function attr3(attributes:Object):JQuery;
  [JavaScriptMethod(name="attr")]
  native public function attr4(attributeName:String,callBack:Function):JQuery;
  [JavaScriptMethod(name="before")]
  native public function before1(content1:*,content2:* = null):JQuery;
  [JavaScriptMethod(name="before")]
  native public function before2(callBack:Function):JQuery;
  [JavaScriptMethod(name="bind")]
  native public function bind1(eventType:String,eventData:Object = null,callBack:Function = null):JQuery;

  [JavaScriptMethod(name="bind")]
  native public function bind2(eventType:String,eventData:Object = null,preventBubble:Boolean = false):JQuery;
  [JavaScriptMethod(name="bind")]
  native public function bind3(events:Object):JQuery;
  [JavaScriptMethod(name="blur")]
  native public function blur1(callBack:Function):JQuery;
  [JavaScriptMethod(name="blur")]
  native public function blur2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="blur")]
  native public function blur3():JQuery;

  [JavaScriptMethod(name="change")]
  native public function change1(callBack:Function):JQuery;
  [JavaScriptMethod(name="change")]
  native public function change2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="change")]
  native public function change3():JQuery;
  native public function children(selector:String = ""):JQuery;
  native public function clearQueue(queueName:String = ""):JQuery;

  [JavaScriptMethod(name="click")]
  native public function click1(callBack:Function):JQuery;
  [JavaScriptMethod(name="click")]
  native public function click2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="click")]
  native public function click3():JQuery;
  [JavaScriptMethod(name="clone")]
  native public function clone1(withDataAndEvents:Boolean = false):JQuery;
  [JavaScriptMethod(name="clone")]
  native public function clone2(withDataAndEvents:Boolean = false,deepWithDataAndEvents:Boolean = false):JQuery;

  [JavaScriptMethod(name="closest")]
  native public function closest1(selector:String):JQuery;
  [JavaScriptMethod(name="closest")]
  native public function closest2(selector:String,context:randori.webkit.dom.Element = null):JQuery;
  [JavaScriptMethod(name="closest")]
  native public function closest3(jQueryobject:JQuery):JQuery;
  [JavaScriptMethod(name="closest")]
  native public function closest4(element:randori.webkit.dom.Element):JQuery;
  [JavaScriptMethod(name="closest")]
  native public function closest5(selectors:Array,context:randori.webkit.dom.Element = null):Array;

  native public function contents():JQuery;
  [JavaScriptMethod(name="css")]
  native public function css1(propertyName:String):String;
  [JavaScriptMethod(name="css")]
  native public function css2(propertyNames:Array):String;
  [JavaScriptMethod(name="css")]
  native public function css3(propertyName:String,value:*):JQuery;
  [JavaScriptMethod(name="css")]
  native public function css4(propertyName:String,callBack:Function):JQuery;

  [JavaScriptMethod(name="css")]
  native public function css5(properties:Object):JQuery;
  [JavaScriptMethod(name="data")]
  native public function data1(key:String,value:Object):JQuery;
  [JavaScriptMethod(name="data")]
  native public function data2(obj:Object):JQuery;
  [JavaScriptMethod(name="data")]
  native public function data3(key:String):Object;
  [JavaScriptMethod(name="data")]
  native public function data4():Object;

  [JavaScriptMethod(name="dblclick")]
  native public function dblclick1(callBack:Function):JQuery;
  [JavaScriptMethod(name="dblclick")]
  native public function dblclick2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="dblclick")]
  native public function dblclick3():JQuery;
  native public function delay(duration:int,queueName:String = ""):JQuery;
  [JavaScriptMethod(name="delegate")]
  native public function delegate1(selector:String,eventType:String,callBack:Function):JQuery;

  [JavaScriptMethod(name="delegate")]
  native public function delegate2(selector:String,eventType:String,eventData:Object,callBack:Function):JQuery;
  [JavaScriptMethod(name="delegate")]
  native public function delegate3(selector:String,events:Object):JQuery;
  native public function dequeue(queueName:String = ""):JQuery;
  native public function detach(selector:String = ""):JQuery;
  [JavaScriptMethod(name="die")]
  native public function die1():JQuery;

  [JavaScriptMethod(name="die")]
  native public function die2(eventType:String,handler:String = ""):JQuery;
  [JavaScriptMethod(name="die")]
  native public function die3(events:Object):JQuery;
  native public function each(callBack:Function):JQuery;
  native public function empty():JQuery;
  native public function end():JQuery;

  [JavaScriptMethod(name="eq")]
  native public function eq1(index:int):JQuery;
  [JavaScriptMethod(name="eq")]
  native public function eq2(index:int):JQuery;
  [JavaScriptMethod(name="error")]
  native public function error1(callBack:Function):JQuery;
  [JavaScriptMethod(name="error")]
  native public function error2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="fadeIn")]
  native public function fadeIn1(duration:* = null,complete:Function = null):JQuery;

  [JavaScriptMethod(name="fadeIn")]
  native public function fadeIn2(options:randori.jquery.OptionsArgument):JQuery;
  [JavaScriptMethod(name="fadeIn")]
  native public function fadeIn3(duration:* = null,easing:String = "",complete:Function = null):JQuery;
  [JavaScriptMethod(name="fadeOut")]
  native public function fadeOut1(duration:* = null,complete:Function = null):JQuery;
  [JavaScriptMethod(name="fadeOut")]
  native public function fadeOut2(options:randori.jquery.OptionsArgument):JQuery;
  [JavaScriptMethod(name="fadeOut")]
  native public function fadeOut3(duration:* = null,easing:String = "",complete:Function = null):JQuery;

  [JavaScriptMethod(name="fadeTo")]
  native public function fadeTo1(duration:*,opacity:Number,complete:Function = null):JQuery;
  [JavaScriptMethod(name="fadeTo")]
  native public function fadeTo2(duration:*,opacity:Number,easing:String = "",complete:Function = null):JQuery;
  [JavaScriptMethod(name="fadeToggle")]
  native public function fadeToggle1(duration:* = null,easing:String = "",complete:Function = null):JQuery;
  [JavaScriptMethod(name="fadeToggle")]
  native public function fadeToggle2(options:randori.jquery.OptionsArgument):JQuery;
  [JavaScriptMethod(name="filter")]
  native public function filter1(selector:String):JQuery;

  [JavaScriptMethod(name="filter")]
  native public function filter2(callBack:Function):JQuery;
  [JavaScriptMethod(name="filter")]
  native public function filter3(element:randori.webkit.dom.Element):JQuery;
  [JavaScriptMethod(name="filter")]
  native public function filter4(jQueryobject:Object):JQuery;
  [JavaScriptMethod(name="find")]
  native public function find1(selector:String):JQuery;
  [JavaScriptMethod(name="find")]
  native public function find2(jQueryobject:Object):JQuery;

  [JavaScriptMethod(name="find")]
  native public function find3(element:randori.webkit.dom.Element):JQuery;
  native public function finish(queue:String = ""):JQuery;
  native public function first():JQuery;
  [JavaScriptMethod(name="focus")]
  native public function focus1(callBack:Function):JQuery;
  [JavaScriptMethod(name="focus")]
  native public function focus2(eventData:Object = null,callBack:Function = null):JQuery;

  [JavaScriptMethod(name="focus")]
  native public function focus3():JQuery;
  [JavaScriptMethod(name="focusin")]
  native public function focusin1(callBack:Function):JQuery;
  [JavaScriptMethod(name="focusin")]
  native public function focusin2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="focusout")]
  native public function focusout1(callBack:Function):JQuery;
  [JavaScriptMethod(name="focusout")]
  native public function focusout2(eventData:Object = null,callBack:Function = null):JQuery;

  native public function get(index:Number = 0):Object;
  [JavaScriptMethod(name="has")]
  native public function has1(selector:String):JQuery;
  [JavaScriptMethod(name="has")]
  native public function has2(contained:randori.webkit.dom.Element):JQuery;
  native public function hasClass(className:String):Boolean;
  [JavaScriptMethod(name="height")]
  native public function height1():int;

  [JavaScriptMethod(name="height")]
  native public function height2(value:*):JQuery;
  [JavaScriptMethod(name="height")]
  native public function height3(callBack:Function):JQuery;
  [JavaScriptMethod(name="hide")]
  native public function hide1():JQuery;
  [JavaScriptMethod(name="hide")]
  native public function hide2(duration:* = null,complete:Function = null):JQuery;
  [JavaScriptMethod(name="hide")]
  native public function hide3(options:randori.jquery.OptionsArgument):JQuery;

  [JavaScriptMethod(name="hide")]
  native public function hide4(duration:* = null,easing:String = "",complete:Function = null):JQuery;
  [JavaScriptMethod(name="hover")]
  native public function hover1(callBack1:Function,callBack2:Function):JQuery;
  [JavaScriptMethod(name="hover")]
  native public function hover2(callBack:Function):JQuery;
  [JavaScriptMethod(name="html")]
  native public function html1():String;
  [JavaScriptMethod(name="html")]
  native public function html2(htmlString:String):JQuery;

  [JavaScriptMethod(name="html")]
  native public function html3(callBack:Function):JQuery;
  [JavaScriptMethod(name="index")]
  native public function index1():Number;
  [JavaScriptMethod(name="index")]
  native public function index2(selector:String):Number;
  [JavaScriptMethod(name="index")]
  native public function index3(element:*):Number;
  native public function innerHeight():int;

  native public function innerWidth():int;
  native public function insertAfter(target:*):JQuery;
  native public function insertBefore(target:*):JQuery;
  [JavaScriptMethod(name="is")]
  native public function is1(selector:String):Boolean;
  [JavaScriptMethod(name="is")]
  native public function is2(callBack:Function):Boolean;

  [JavaScriptMethod(name="is")]
  native public function is3(jQueryobject:Object):Boolean;
  [JavaScriptMethod(name="is")]
  native public function is4(element:randori.webkit.dom.Element):Boolean;
  [JavaScriptMethod(name="jQuery")]
  native public function jQuery1(selector:String,context:* = null):JQuery;
  [JavaScriptMethod(name="jQuery")]
  native public function jQuery2(element:randori.webkit.dom.Element):JQuery;
  [JavaScriptMethod(name="jQuery")]
  native public function jQuery3(elementArray:Array):JQuery;

  [JavaScriptMethod(name="jQuery")]
  native public function jQuery4(object:Object):JQuery;
  [JavaScriptMethod(name="jQuery")]
  native public function jQuery5(jQueryobject:Object):JQuery;
  [JavaScriptMethod(name="jQuery")]
  native public function jQuery6():JQuery;
  [JavaScriptMethod(name="jQuery")]
  native public function jQuery7(html:String,ownerDocument:randori.webkit.dom.Document = null):JQuery;
  [JavaScriptMethod(name="jQuery")]
  native public function jQuery8(html:String,attributes:Object):JQuery;

  [JavaScriptMethod(name="jQuery")]
  native public function jQuery9(callback:Function):JQuery;
  [JavaScriptMethod(name="keydown")]
  native public function keydown1(callBack:Function):JQuery;
  [JavaScriptMethod(name="keydown")]
  native public function keydown2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="keydown")]
  native public function keydown3():JQuery;
  [JavaScriptMethod(name="keypress")]
  native public function keypress1(callBack:Function):JQuery;

  [JavaScriptMethod(name="keypress")]
  native public function keypress2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="keypress")]
  native public function keypress3():JQuery;
  [JavaScriptMethod(name="keyup")]
  native public function keyup1(callBack:Function):JQuery;
  [JavaScriptMethod(name="keyup")]
  native public function keyup2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="keyup")]
  native public function keyup3():JQuery;

  native public function last():JQuery;
  [JavaScriptMethod(name="live")]
  native public function live1(events:String,callBack:Function):JQuery;
  [JavaScriptMethod(name="live")]
  native public function live2(events:String,data:Object,callBack:Function):JQuery;
  [JavaScriptMethod(name="live")]
  native public function live3(events:Object):JQuery;
  [JavaScriptMethod(name="load")]
  native public function load1(callBack:Function):JQuery;

  [JavaScriptMethod(name="load")]
  native public function load2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="load")]
  native public function load3(url:String,data:* = null,callBack:Function = null):JQuery;
  native public function map(callBack:Function):JQuery;
  [JavaScriptMethod(name="mousedown")]
  native public function mousedown1(callBack:Function):JQuery;
  [JavaScriptMethod(name="mousedown")]
  native public function mousedown2(eventData:Object = null,callBack:Function = null):JQuery;

  [JavaScriptMethod(name="mousedown")]
  native public function mousedown3():JQuery;
  [JavaScriptMethod(name="mouseenter")]
  native public function mouseenter1(callBack:Function):JQuery;
  [JavaScriptMethod(name="mouseenter")]
  native public function mouseenter2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="mouseenter")]
  native public function mouseenter3():JQuery;
  [JavaScriptMethod(name="mouseleave")]
  native public function mouseleave1(callBack:Function):JQuery;

  [JavaScriptMethod(name="mouseleave")]
  native public function mouseleave2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="mouseleave")]
  native public function mouseleave3():JQuery;
  [JavaScriptMethod(name="mousemove")]
  native public function mousemove1(callBack:Function):JQuery;
  [JavaScriptMethod(name="mousemove")]
  native public function mousemove2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="mousemove")]
  native public function mousemove3():JQuery;

  [JavaScriptMethod(name="mouseout")]
  native public function mouseout1(callBack:Function):JQuery;
  [JavaScriptMethod(name="mouseout")]
  native public function mouseout2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="mouseout")]
  native public function mouseout3():JQuery;
  [JavaScriptMethod(name="mouseover")]
  native public function mouseover1(callBack:Function):JQuery;
  [JavaScriptMethod(name="mouseover")]
  native public function mouseover2(eventData:Object = null,callBack:Function = null):JQuery;

  [JavaScriptMethod(name="mouseover")]
  native public function mouseover3():JQuery;
  [JavaScriptMethod(name="mouseup")]
  native public function mouseup1(callBack:Function):JQuery;
  [JavaScriptMethod(name="mouseup")]
  native public function mouseup2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="mouseup")]
  native public function mouseup3():JQuery;
  native public function next(selector:String = ""):JQuery;

  native public function nextAll(selector:String = ""):JQuery;
  [JavaScriptMethod(name="nextUntil")]
  native public function nextUntil1(selector:String = "",filter:String = ""):JQuery;
  [JavaScriptMethod(name="nextUntil")]
  native public function nextUntil2(element:randori.webkit.dom.Element = null,filter:String = ""):JQuery;
  [JavaScriptMethod(name="not")]
  native public function not1(selector:String):JQuery;
  [JavaScriptMethod(name="not")]
  native public function not2(elements:Vector.<randori.webkit.dom.Element>):JQuery;

  [JavaScriptMethod(name="not")]
  native public function not3(callBack:Function):JQuery;
  [JavaScriptMethod(name="not")]
  native public function not4(jQueryobject:Object):JQuery;
  [JavaScriptMethod(name="off")]
  native public function off1(events:String,selector:String = "",callBack:Function = null):JQuery;
  [JavaScriptMethod(name="off")]
  native public function off2(events:Object,selector:String = ""):JQuery;
  [JavaScriptMethod(name="offset")]
  native public function offset1():Object;

  [JavaScriptMethod(name="offset")]
  native public function offset2(coordinates:Object):JQuery;
  [JavaScriptMethod(name="offset")]
  native public function offset3(callBack:Function):JQuery;
  native public function offsetParent():JQuery;
  [JavaScriptMethod(name="on")]
  native public function on1(events:String,selector:String = "",data:* = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="on")]
  native public function on2(events:Object,selector:String = "",data:* = null):JQuery;

  [JavaScriptMethod(name="one")]
  native public function one1(events:String,data:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="one")]
  native public function one2(events:String,selector:String = "",data:* = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="one")]
  native public function one3(events:Object,selector:String = "",data:* = null):JQuery;
  native public function outerHeight(includeMargin:Boolean = false):int;
  native public function outerWidth(includeMargin:Boolean = false):int;

  native public function parent(selector:String = ""):JQuery;
  native public function parents(selector:String = ""):JQuery;
  [JavaScriptMethod(name="parentsUntil")]
  native public function parentsUntil1(selector:String = "",filter:String = ""):JQuery;
  [JavaScriptMethod(name="parentsUntil")]
  native public function parentsUntil2(element:randori.webkit.dom.Element = null,filter:String = ""):JQuery;
  native public function position():Object;

  [JavaScriptMethod(name="prepend")]
  native public function prepend1(content1:*,content2:* = null):JQuery;
  [JavaScriptMethod(name="prepend")]
  native public function prepend2(callBack:Function):JQuery;
  native public function prependTo(target:*):JQuery;
  native public function prev(selector:String = ""):JQuery;
  native public function prevAll(selector:String = ""):JQuery;

  [JavaScriptMethod(name="prevUntil")]
  native public function prevUntil1(selector:String = "",filter:String = ""):JQuery;
  [JavaScriptMethod(name="prevUntil")]
  native public function prevUntil2(element:randori.webkit.dom.Element = null,filter:String = ""):JQuery;
  [JavaScriptMethod(name="prop")]
  native public function prop1(propertyName:String):String;
  [JavaScriptMethod(name="prop")]
  native public function prop2(propertyName:String,value:*):JQuery;
  [JavaScriptMethod(name="prop")]
  native public function prop3(properties:Object):JQuery;

  [JavaScriptMethod(name="prop")]
  native public function prop4(propertyName:String,callBack:Function):JQuery;
  [JavaScriptMethod(name="pushStack")]
  native public function pushStack1(elements:Array):JQuery;
  [JavaScriptMethod(name="pushStack")]
  native public function pushStack2(elements:Array,name:String,arguments:Array):JQuery;
  [JavaScriptMethod(name="queue")]
  native public function queue1(queueName:String = ""):Array;
  [JavaScriptMethod(name="queue")]
  native public function queue2(queueName:String = "",newQueue:Array = null):JQuery;

  [JavaScriptMethod(name="queue")]
  native public function queue3(queueName:String = "",callBack:Function = null):JQuery;
  native public function ready(handler:Function):JQuery;
  native public function remove(selector:String = ""):JQuery;
  native public function removeAttr(attributeName:String):JQuery;
  [JavaScriptMethod(name="removeClass")]
  native public function removeClass1(className:String = ""):JQuery;

  [JavaScriptMethod(name="removeClass")]
  native public function removeClass2(callBack:Function):JQuery;
  [JavaScriptMethod(name="removeData")]
  native public function removeData1(name:String = ""):JQuery;
  [JavaScriptMethod(name="removeData")]
  native public function removeData2(list:* = null):JQuery;
  native public function removeProp(propertyName:String):JQuery;
  native public function replaceAll(target:String):JQuery;

  [JavaScriptMethod(name="replaceWith")]
  native public function replaceWith1(newContent:*):JQuery;
  [JavaScriptMethod(name="replaceWith")]
  native public function replaceWith2(callBack:Function):JQuery;
  [JavaScriptMethod(name="resize")]
  native public function resize1(callBack:Function):JQuery;
  [JavaScriptMethod(name="resize")]
  native public function resize2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="resize")]
  native public function resize3():JQuery;

  [JavaScriptMethod(name="scroll")]
  native public function scroll1(callBack:Function):JQuery;
  [JavaScriptMethod(name="scroll")]
  native public function scroll2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="scroll")]
  native public function scroll3():JQuery;
  [JavaScriptMethod(name="scrollLeft")]
  native public function scrollLeft1():int;
  [JavaScriptMethod(name="scrollLeft")]
  native public function scrollLeft2(value:Number):JQuery;

  [JavaScriptMethod(name="scrollTop")]
  native public function scrollTop1():int;
  [JavaScriptMethod(name="scrollTop")]
  native public function scrollTop2(value:Number):JQuery;
  [JavaScriptMethod(name="select")]
  native public function select1(callBack:Function):JQuery;
  [JavaScriptMethod(name="select")]
  native public function select2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="select")]
  native public function select3():JQuery;

  native public function serialize():String;
  native public function serializeArray():Array;
  [JavaScriptMethod(name="show")]
  native public function show1():JQuery;
  [JavaScriptMethod(name="show")]
  native public function show2(duration:* = null,complete:Function = null):JQuery;
  [JavaScriptMethod(name="show")]
  native public function show3(options:randori.jquery.OptionsArgument):JQuery;

  [JavaScriptMethod(name="show")]
  native public function show4(duration:* = null,easing:String = "",complete:Function = null):JQuery;
  native public function siblings(selector:String = ""):JQuery;
  native public function size():Number;
  native public function slice(start:int,end:int = 0):JQuery;
  [JavaScriptMethod(name="slideDown")]
  native public function slideDown1(duration:* = null,complete:Function = null):JQuery;

  [JavaScriptMethod(name="slideDown")]
  native public function slideDown2(options:randori.jquery.OptionsArgument):JQuery;
  [JavaScriptMethod(name="slideDown")]
  native public function slideDown3(duration:* = null,easing:String = "",complete:Function = null):JQuery;
  [JavaScriptMethod(name="slideToggle")]
  native public function slideToggle1(duration:* = null,complete:Function = null):JQuery;
  [JavaScriptMethod(name="slideToggle")]
  native public function slideToggle2(options:randori.jquery.OptionsArgument):JQuery;
  [JavaScriptMethod(name="slideToggle")]
  native public function slideToggle3(duration:* = null,easing:String = "",complete:Function = null):JQuery;

  [JavaScriptMethod(name="slideUp")]
  native public function slideUp1(duration:* = null,complete:Function = null):JQuery;
  [JavaScriptMethod(name="slideUp")]
  native public function slideUp2(options:randori.jquery.OptionsArgument):JQuery;
  [JavaScriptMethod(name="slideUp")]
  native public function slideUp3(duration:* = null,easing:String = "",complete:Function = null):JQuery;
  [JavaScriptMethod(name="stop")]
  native public function stop1(clearQueue:Boolean = false,jumpToEnd:Boolean = false):JQuery;
  [JavaScriptMethod(name="stop")]
  native public function stop2(queue:String = "",clearQueue:Boolean = false,jumpToEnd:Boolean = false):JQuery;

  [JavaScriptMethod(name="submit")]
  native public function submit1(callBack:Function):JQuery;
  [JavaScriptMethod(name="submit")]
  native public function submit2(eventData:Object = null,callBack:Function = null):JQuery;
  [JavaScriptMethod(name="submit")]
  native public function submit3():JQuery;
  [JavaScriptMethod(name="text")]
  native public function text1():String;
  [JavaScriptMethod(name="text")]
  native public function text2(textString:String):JQuery;

  [JavaScriptMethod(name="text")]
  native public function text3(callBack:Function):JQuery;
  native public function toArray():Array;
  [JavaScriptMethod(name="toggle")]
  native public function toggle1(callBack1:Function,callBack2:Function,callBack3:Function = null):JQuery;
  [JavaScriptMethod(name="toggle")]
  native public function toggle2(duration:* = null,complete:Function = null):JQuery;
  [JavaScriptMethod(name="toggle")]
  native public function toggle3(options:randori.jquery.OptionsArgument):JQuery;

  [JavaScriptMethod(name="toggle")]
  native public function toggle4(duration:* = null,easing:String = "",complete:Function = null):JQuery;
  [JavaScriptMethod(name="toggle")]
  native public function toggle5(showOrHide:Boolean):JQuery;
  [JavaScriptMethod(name="toggleClass")]
  native public function toggleClass1(className:String):JQuery;
  [JavaScriptMethod(name="toggleClass")]
  native public function toggleClass2(className:String,switch_:Boolean):JQuery;
  [JavaScriptMethod(name="toggleClass")]
  native public function toggleClass3(switch_:Boolean = false):JQuery;

  [JavaScriptMethod(name="toggleClass")]
  native public function toggleClass4(callBack:Function,switch_:Boolean = false):JQuery;
  [JavaScriptMethod(name="trigger")]
  native public function trigger1(eventType:String,extraParameters:* = null):JQuery;
  [JavaScriptMethod(name="trigger")]
  native public function trigger2(event:randori.jquery.Event):JQuery;
  native public function triggerHandler(eventType:String,extraParameters:Array = null):Object;
  [JavaScriptMethod(name="unbind")]
  native public function unbind1(eventType:String = "",callBack:Function = null):JQuery;

  [JavaScriptMethod(name="unbind")]
  native public function unbind2(eventType:String,false_:Boolean):JQuery;
  [JavaScriptMethod(name="unbind")]
  native public function unbind3(event:Object):JQuery;
  [JavaScriptMethod(name="undelegate")]
  native public function undelegate1():JQuery;
  [JavaScriptMethod(name="undelegate")]
  native public function undelegate2(selector:String,eventType:String):JQuery;
  [JavaScriptMethod(name="undelegate")]
  native public function undelegate3(selector:String,eventType:String,callBack:Function):JQuery;

  [JavaScriptMethod(name="undelegate")]
  native public function undelegate4(selector:String,events:Object):JQuery;
  [JavaScriptMethod(name="undelegate")]
  native public function undelegate5(namespace_:String):JQuery;
  [JavaScriptMethod(name="unload")]
  native public function unload1(callBack:Function):JQuery;
  [JavaScriptMethod(name="unload")]
  native public function unload2(eventData:Object = null,callBack:Function = null):JQuery;
  native public function unwrap():JQuery;

  [JavaScriptMethod(name="val")]
  native public function val1():Object;
  [JavaScriptMethod(name="val")]
  native public function val2(value:*):JQuery;
  [JavaScriptMethod(name="val")]
  native public function val3(callBack:Function):JQuery;
  [JavaScriptMethod(name="width")]
  native public function width1():int;
  [JavaScriptMethod(name="width")]
  native public function width2(value:*):JQuery;

  [JavaScriptMethod(name="width")]
  native public function width3(callBack:Function):JQuery;
  [JavaScriptMethod(name="wrap")]
  native public function wrap1(wrappingElement:*):JQuery;
  [JavaScriptMethod(name="wrap")]
  native public function wrap2(callBack:Function):JQuery;
  native public function wrapAll(wrappingElement:*):JQuery;
  [JavaScriptMethod(name="wrapInner")]
  native public function wrapInner1(wrappingElement:String):JQuery;

  [JavaScriptMethod(name="wrapInner")]
  native public function wrapInner2(callBack:Function):JQuery;
  native public function add(... rest):*;
  native public function addClass(... rest):*;
  native public function after(... rest):*;
  native public function animate(... rest):*;

  native public function append(... rest):*;
  native public function attr(... rest):*;
  native public function before(... rest):*;
  native public function bind(... rest):*;
  native public function blur(... rest):*;

  native public function change(... rest):*;
  native public function click(... rest):*;
  native public function clone(... rest):*;
  native public function closest(... rest):*;
  native public function css(... rest):*;

  native public function data(... rest):*;
  native public function dblclick(... rest):*;
  native public function delegate(... rest):*;
  native public function die(... rest):*;
  native public function eq(... rest):*;

  native public function error(... rest):*;
  native public function fadeIn(... rest):*;
  native public function fadeOut(... rest):*;
  native public function fadeTo(... rest):*;
  native public function fadeToggle(... rest):*;

  native public function filter(... rest):*;
  native public function find(... rest):*;
  native public function focus(... rest):*;
  native public function focusin(... rest):*;
  native public function focusout(... rest):*;

  native public function has(... rest):*;
  native public function height(... rest):*;
  native public function hide(... rest):*;
  native public function hover(... rest):*;
  native public function html(... rest):*;

  native public function index(... rest):*;
  native public function is_(... rest):*;
  native public function jQuery(... rest):*;
  native public function keydown(... rest):*;
  native public function keypress(... rest):*;

  native public function keyup(... rest):*;
  native public function live(... rest):*;
  native public function load(... rest):*;
  native public function mousedown(... rest):*;
  native public function mouseenter(... rest):*;

  native public function mouseleave(... rest):*;
  native public function mousemove(... rest):*;
  native public function mouseout(... rest):*;
  native public function mouseover(... rest):*;
  native public function mouseup(... rest):*;

  native public function nextUntil(... rest):*;
  native public function not(... rest):*;
  native public function off(... rest):*;
  native public function offset(... rest):*;
  native public function on(... rest):*;

  native public function one(... rest):*;
  native public function parentsUntil(... rest):*;
  native public function prepend(... rest):*;
  native public function prevUntil(... rest):*;
  native public function prop(... rest):*;

  native public function pushStack(... rest):*;
  native public function queue(... rest):*;
  native public function removeClass(... rest):*;
  native public function removeData(... rest):*;
  native public function replaceWith(... rest):*;

  native public function resize(... rest):*;
  native public function scroll(... rest):*;
  native public function scrollLeft(... rest):*;
  native public function scrollTop(... rest):*;
  native public function select(... rest):*;

  native public function show(... rest):*;
  native public function slideDown(... rest):*;
  native public function slideToggle(... rest):*;
  native public function slideUp(... rest):*;
  native public function stop(... rest):*;

  native public function submit(... rest):*;
  native public function text(... rest):*;
  native public function toggle(... rest):*;
  native public function toggleClass(... rest):*;
  native public function trigger(... rest):*;

  native public function unbind(... rest):*;
  native public function undelegate(... rest):*;
  native public function unload(... rest):*;
  native public function val(... rest):*;
  native public function width(... rest):*;

  native public function wrap(... rest):*;
  native public function wrapInner(... rest):*;
}


[JavaScript(export="false",name="JQuery")]
public final class randori.jquery.JQueryStatic extends Object
{
  native public function JQueryStatic():*;
  static native public var boxModel:Boolean;
  static native public var browser:Object;

  static native public var version:String;
  static native public var cssHooks:Object;
  static native public var interval:Number;
  static native public var off:Boolean;
  static native public var support:Object;

  [JavaScriptMethod(name="ajax")]
  static native public function ajax1(url:String,settings:Object = null):randori.webkit.xml.XMLHttpRequest;
  [JavaScriptMethod(name="ajax")]
  static native public function ajax2(settings:randori.jquery.SettingsObject = null):randori.webkit.xml.XMLHttpRequest;
  static native public function ajaxPrefilter(dataTypes:String = "",callBack:Function = null):void;
  static native public function ajaxSetup(options:Object):void;
  static native public function ajaxTransport(dataType:String,callBack:Function):void;

  [JavaScriptMethod(name="Callbacks")]
  static native public function callbacks(flags:String):randori.jquery.Callbacks;
  static native public function contains(container:randori.webkit.dom.Element,contained:randori.webkit.dom.Element):Boolean;
  [JavaScriptMethod(name="data")]
  static native public function data1(element:randori.webkit.dom.Element,key:String,value:Object):Object;
  [JavaScriptMethod(name="data")]
  static native public function data2(element:randori.webkit.dom.Element,key:String):Object;
  [JavaScriptMethod(name="data")]
  static native public function data3(element:randori.webkit.dom.Element):Object;

  [JavaScriptMethod(name="Deferred")]
  static native public function deferred(beforeStart:Function = null):randori.jquery.Deferred;
  static native public function dequeue(element:randori.webkit.dom.Element,queueName:String = ""):void;
  static native public function each(collection:Object,callBack:Function):Object;
  static native public function error(message:String):void;
  [JavaScriptMethod(name="extend")]
  static native public function extend1(target:Object,object1:Object = null,objectN:Object = null):Object;

  [JavaScriptMethod(name="extend")]
  static native public function extend2(deep:Boolean = false,target:Object = null,object1:Object = null,objectN:Object = null):Object;
  static native public function get(url:String,data:* = null,callBack:Function = null,dataType:String = ""):randori.webkit.xml.XMLHttpRequest;
  static native public function getJSON(url:String,data:Object = null,callBack:Function = null):randori.webkit.xml.XMLHttpRequest;
  static native public function getScript(url:String,callBack:Function = null):randori.webkit.xml.XMLHttpRequest;
  static native public function globalEval(code:String):void;

  static native public function grep(array:Array,callBack:Function,invert:Boolean = false):Array;
  static native public function hasData(element:randori.webkit.dom.Element):Boolean;
  static native public function holdReady(hold:Boolean):void;
  static native public function inArray(value:*,array:Array,fromIndex:Number = 0):Number;
  static native public function isArray(obj:Object):Boolean;

  static native public function isEmptyObject(object:Object):Boolean;
  static native public function isFunction(obj:Object):Boolean;
  static native public function isNumeric(value:Object):Boolean;
  static native public function isPlainObject(object:Object):Boolean;
  static native public function isWindow(obj:Object):Boolean;

  static native public function isXMLDoc(node:randori.webkit.dom.Element):Boolean;
  static native public function makeArray(obj:Object):Array;
  [JavaScriptMethod(name="map")]
  static native public function map1(array:Array,callBack:Function):Array;
  [JavaScriptMethod(name="map")]
  static native public function map2(arrayOrObject:*,callBack:Function):Array;
  static native public function merge(first:Array,second:Array):Array;

  static native public function noConflict(removeAll:Boolean = false):Object;
  static native public function noop():void;
  static native public function now():Number;
  [JavaScriptMethod(name="param")]
  static native public function param1(obj:*):String;
  [JavaScriptMethod(name="param")]
  static native public function param2(obj:*,traditional:Boolean):String;

  static native public function parseHTML(data:String,context:randori.webkit.dom.Element = null,keepScripts:Boolean = false):Array;
  static native public function parseJSON(json:String):Object;
  static native public function parseXML(data:String):randori.webkit.dom.Element;
  static native public function post(url:String,data:* = null,callBack:Function = null,dataType:String = ""):randori.webkit.xml.XMLHttpRequest;
  [JavaScriptMethod(name="proxy")]
  static native public function proxy1(callBack:Function,context:Object):Function;

  [JavaScriptMethod(name="proxy")]
  static native public function proxy2(context:Object,name:String):Function;
  [JavaScriptMethod(name="proxy")]
  static native public function proxy3(callBack:Function,context:Object,additionalArguments:* = null):Function;
  [JavaScriptMethod(name="proxy")]
  static native public function proxy4(context:Object,name:String,additionalArguments:* = null):Function;
  [JavaScriptMethod(name="queue")]
  static native public function queue1(element:randori.webkit.dom.Element,queueName:String = ""):Array;
  [JavaScriptMethod(name="queue")]
  static native public function queue2(element:randori.webkit.dom.Element,queueName:String,newQueue:Array):randori.jquery.JQuery;

  [JavaScriptMethod(name="queue")]
  static native public function queue3(element:randori.webkit.dom.Element,queueName:String,callBack:Function):randori.jquery.JQuery;
  static native public function removeData(element:randori.webkit.dom.Element,name:String = ""):randori.jquery.JQuery;
  static native public function sub():randori.jquery.JQuery;
  static native public function trim(str:String):String;
  static native public function type(obj:Object):String;

  static native public function unique(array:Array):Array;
  static native public function when(deferreds:randori.jquery.Deferred):randori.jquery.Promise;
  static native public function ajax(... rest):*;
  static native public function data(... rest):*;
  static native public function extend(... rest):*;

  static native public function map(... rest):*;
  static native public function param(... rest):*;
  static native public function proxy(... rest):*;
  static native public function queue(... rest):*;
  [JavaScriptMethod(name="")]
  static native public function J(... rest):randori.jquery.JQuery;
}


[JavaScript(export="false",name="Event")]
public class randori.webkit.dom.DomEvent extends Object
{

  native public function DomEvent():*;
  native public function get type():String;
  native public function get target():randori.webkit.dom.EventTarget;
  native public function get currentTarget():randori.webkit.dom.EventTarget;
  native public function get eventPhase():uint;

  native public function get bubbles():Boolean;
  native public function get cancelable():Boolean;
  native public function get timeStamp():Object;
  native public function stopPropagation():void;
  native public function preventDefault():void;

  native public function initEvent(eventTypeArg:String = "",canBubbleArg:Boolean = null,cancelableArg:Boolean = null):void;
  native public function get defaultPrevented():Boolean;
  native public function stopImmediatePropagation():void;
  native public function get srcElement():randori.webkit.dom.EventTarget;
  native public function get returnValue():Boolean;

  native public function set returnValue(value:Boolean):void;
  native public function get cancelBubble():Boolean;
  native public function set cancelBubble(value:Boolean):void;
  native public function get clipboardData():randori.webkit.dom.Clipboard;
  static native public const NONE:uint = 0;

  static native public const CAPTURING_PHASE:uint = 1;
  static native public const AT_TARGET:uint = 2;
  static native public const BUBBLING_PHASE:uint = 3;
  static native public const MOUSEDOWN:uint = 1;
  static native public const MOUSEUP:uint = 2;

  static native public const MOUSEOVER:uint = 4;
  static native public const MOUSEOUT:uint = 8;
  static native public const MOUSEMOVE:uint = 16;
  static native public const MOUSEDRAG:uint = 32;
  static native public const CLICK:uint = 64;

  static native public const DBLCLICK:uint = 128;
  static native public const KEYDOWN:uint = 256;
  static native public const KEYUP:uint = 512;
  static native public const KEYPRESS:uint = 1024;
  static native public const DRAGDROP:uint = 2048;

  static native public const FOCUS:uint = 4096;
  static native public const BLUR:uint = 8192;
  static native public const SELECT:uint = 16384;
  static native public const CHANGE:uint = 32768;
}


[JavaScript(export="false",name="Node")]
public class randori.webkit.dom.Node extends Object
{
  native public function Node():*;

  native public function get nodeName():String;
  native public function get nodeValue():String;
  native public function set nodeValue(value:String):void;
  native public function get nodeType():uint;
  native public function get parentNode():Node;

  native public function get childNodes():randori.webkit.dom.NodeList;
  native public function get firstChild():Node;
  native public function get lastChild():Node;
  native public function get previousSibling():Node;
  native public function get nextSibling():Node;

  native public function get ownerDocument():randori.webkit.dom.Document;
  native public function insertBefore(newChild:Node,refChild:Node):Node;
  native public function replaceChild(newChild:Node,oldChild:Node):Node;
  native public function removeChild(oldChild:Node):Node;
  native public function appendChild(newChild:Node):Node;

  native public function hasChildNodes():Boolean;
  native public function cloneNode(deep:Boolean = null):Node;
  native public function normalize():void;
  native public function isSupported(feature:String = "",version:String = ""):Boolean;
  native public function get namespaceURI():String;

  native public function get prefix():String;
  native public function set prefix(value:String):void;
  native public function get localName():String;
  native public function get baseURI():String;
  native public function get textContent():String;

  native public function set textContent(value:String):void;
  native public function isSameNode(other:Node = null):Boolean;
  native public function isEqualNode(other:Node = null):Boolean;
  native public function lookupPrefix(namespaceURI:String = ""):String;
  native public function isDefaultNamespace(namespaceURI:String = ""):Boolean;

  native public function lookupNamespaceURI(prefix:String = ""):String;
  native public function compareDocumentPosition(other:Node = null):uint;
  native public function contains(other:Node = null):Boolean;
  native public function get parentElement():randori.webkit.dom.Element;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;

  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(event:randori.webkit.dom.DomEvent):Boolean;
  static native public const ELEMENT_NODE:uint = 1;
  static native public const ATTRIBUTE_NODE:uint = 2;
  static native public const TEXT_NODE:uint = 3;

  static native public const CDATA_SECTION_NODE:uint = 4;
  static native public const ENTITY_REFERENCE_NODE:uint = 5;
  static native public const ENTITY_NODE:uint = 6;
  static native public const PROCESSING_INSTRUCTION_NODE:uint = 7;
  static native public const COMMENT_NODE:uint = 8;

  static native public const DOCUMENT_NODE:uint = 9;
  static native public const DOCUMENT_TYPE_NODE:uint = 10;
  static native public const DOCUMENT_FRAGMENT_NODE:uint = 11;
  static native public const NOTATION_NODE:uint = 12;
  static native public const DOCUMENT_POSITION_DISCONNECTED:uint = 1;

  static native public const DOCUMENT_POSITION_PRECEDING:uint = 2;
  static native public const DOCUMENT_POSITION_FOLLOWING:uint = 4;
  static native public const DOCUMENT_POSITION_CONTAINS:uint = 8;
  static native public const DOCUMENT_POSITION_CONTAINED_BY:uint = 16;
  static native public const DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC:uint = 32;
}


[JavaScript(export="false",name="Element")]
public class randori.webkit.dom.Element extends randori.webkit.dom.Node
{

  native public function Element():*;
  native public function get tagName():String;
  native public function getAttribute(name:String = ""):String;
  native public function setAttribute(name:String = "",value:String = ""):void;
  native public function removeAttribute(name:String = ""):void;

  native public function getAttributeNode(name:String = ""):randori.webkit.dom.Attr;
  native public function setAttributeNode(newAttr:randori.webkit.dom.Attr = null):randori.webkit.dom.Attr;
  native public function removeAttributeNode(oldAttr:randori.webkit.dom.Attr = null):randori.webkit.dom.Attr;
  native public function getElementsByTagName(name:String = ""):randori.webkit.dom.NodeList;
  native public function get attributes():randori.webkit.dom.NamedNodeMap;

  native public function hasAttributes():Boolean;
  native public function getAttributeNS(namespaceURI:String = "",localName:String = ""):String;
  native public function setAttributeNS(namespaceURI:String = "",qualifiedName:String = "",value:String = ""):void;
  native public function removeAttributeNS(namespaceURI:String,localName:String):void;
  native public function getElementsByTagNameNS(namespaceURI:String = "",localName:String = ""):randori.webkit.dom.NodeList;

  native public function getAttributeNodeNS(namespaceURI:String = "",localName:String = ""):randori.webkit.dom.Attr;
  native public function setAttributeNodeNS(newAttr:randori.webkit.dom.Attr = null):randori.webkit.dom.Attr;
  native public function hasAttribute(name:String):Boolean;
  native public function hasAttributeNS(namespaceURI:String = "",localName:String = ""):Boolean;
  native public function get style():randori.webkit.css.CSSStyleDeclaration;

  native public function get offsetLeft():uint;
  native public function get offsetTop():uint;
  native public function get offsetWidth():uint;
  native public function get offsetHeight():uint;
  native public function get offsetParent():Element;

  native public function get clientLeft():uint;
  native public function get clientTop():uint;
  native public function get clientWidth():uint;
  native public function get clientHeight():uint;
  native public function get scrollLeft():uint;

  native public function set scrollLeft(value:uint):void;
  native public function get scrollTop():uint;
  native public function set scrollTop(value:uint):void;
  native public function get scrollWidth():uint;
  native public function get scrollHeight():uint;

  native public function focus():void;
  native public function blur():void;
  native public function scrollIntoView(alignWithTop:Boolean = false):void;
  native public function scrollIntoViewIfNeeded(centerIfNeeded:Boolean = false):void;
  native public function scrollByLines(lines:uint = null):void;

  native public function scrollByPages(pages:uint = null):void;
  native public function getElementsByClassName(name:String = ""):randori.webkit.dom.NodeList;
  native public function get className():String;
  native public function set className(value:String):void;
  native public function get classList():randori.webkit.html.DOMTokenList;

  native public function get dataset():randori.webkit.dom.DOMStringMap;
  native public function querySelector(selectors:String):Element;
  native public function querySelectorAll(selectors:String):randori.webkit.dom.NodeList;
  native public function get firstElementChild():Element;
  native public function get lastElementChild():Element;

  native public function get previousElementSibling():Element;
  native public function get nextElementSibling():Element;
  native public function get childElementCount():uint;
  native public function remove():void;
  native public function getClientRects():randori.webkit.dom.ClientRectList;

  native public function getBoundingClientRect():randori.webkit.dom.ClientRect;
  native public function get onabort():Function;
  native public function set onabort(value:Function):void;
  native public function get onblur():Function;
  native public function set onblur(value:Function):void;

  native public function get onchange():Function;
  native public function set onchange(value:Function):void;
  native public function get onclick():Function;
  native public function set onclick(value:Function):void;
  native public function get oncontextmenu():Function;

  native public function set oncontextmenu(value:Function):void;
  native public function get ondblclick():Function;
  native public function set ondblclick(value:Function):void;
  native public function get ondrag():Function;
  native public function set ondrag(value:Function):void;

  native public function get ondragend():Function;
  native public function set ondragend(value:Function):void;
  native public function get ondragenter():Function;
  native public function set ondragenter(value:Function):void;
  native public function get ondragleave():Function;

  native public function set ondragleave(value:Function):void;
  native public function get ondragover():Function;
  native public function set ondragover(value:Function):void;
  native public function get ondragstart():Function;
  native public function set ondragstart(value:Function):void;

  native public function get ondrop():Function;
  native public function set ondrop(value:Function):void;
  native public function get onerror():Function;
  native public function set onerror(value:Function):void;
  native public function get onfocus():Function;

  native public function set onfocus(value:Function):void;
  native public function get oninput():Function;
  native public function set oninput(value:Function):void;
  native public function get oninvalid():Function;
  native public function set oninvalid(value:Function):void;

  native public function get onkeydown():Function;
  native public function set onkeydown(value:Function):void;
  native public function get onkeypress():Function;
  native public function set onkeypress(value:Function):void;
  native public function get onkeyup():Function;

  native public function set onkeyup(value:Function):void;
  native public function get onload():Function;
  native public function set onload(value:Function):void;
  native public function get onmousedown():Function;
  native public function set onmousedown(value:Function):void;

  native public function get onmousemove():Function;
  native public function set onmousemove(value:Function):void;
  native public function get onmouseout():Function;
  native public function set onmouseout(value:Function):void;
  native public function get onmouseover():Function;

  native public function set onmouseover(value:Function):void;
  native public function get onmouseup():Function;
  native public function set onmouseup(value:Function):void;
  native public function get onmousewheel():Function;
  native public function set onmousewheel(value:Function):void;

  native public function get onscroll():Function;
  native public function set onscroll(value:Function):void;
  native public function get onselect():Function;
  native public function set onselect(value:Function):void;
  native public function get onsubmit():Function;

  native public function set onsubmit(value:Function):void;
  native public function get onbeforecut():Function;
  native public function set onbeforecut(value:Function):void;
  native public function get oncut():Function;
  native public function set oncut(value:Function):void;

  native public function get onbeforecopy():Function;
  native public function set onbeforecopy(value:Function):void;
  native public function get oncopy():Function;
  native public function set oncopy(value:Function):void;
  native public function get onbeforepaste():Function;

  native public function set onbeforepaste(value:Function):void;
  native public function get onpaste():Function;
  native public function set onpaste(value:Function):void;
  native public function get onreset():Function;
  native public function set onreset(value:Function):void;

  native public function get onsearch():Function;
  native public function set onsearch(value:Function):void;
  native public function get onselectstart():Function;
  native public function set onselectstart(value:Function):void;
  native public function get ontouchstart():Function;

  native public function set ontouchstart(value:Function):void;
  native public function get ontouchmove():Function;
  native public function set ontouchmove(value:Function):void;
  native public function get ontouchend():Function;
  native public function set ontouchend(value:Function):void;

  native public function get ontouchcancel():Function;
  native public function set ontouchcancel(value:Function):void;
}


[JavaScript(export="false",name="HTMLElement")]
public class randori.webkit.html.HTMLElement extends randori.webkit.dom.Element
{
  native public function HTMLElement():*;
  native public function get id():String;
  native public function set id(value:String):void;

  native public function get title():String;
  native public function set title(value:String):void;
  native public function get lang():String;
  native public function set lang(value:String):void;
  native public function get translate():Boolean;

  native public function set translate(value:Boolean):void;
  native public function get dir():String;
  native public function set dir(value:String):void;
  native public function get tabIndex():uint;
  native public function set tabIndex(value:uint):void;

  native public function get draggable():Boolean;
  native public function set draggable(value:Boolean):void;
  native public function get hidden():Boolean;
  native public function set hidden(value:Boolean):void;
  native public function get accessKey():String;

  native public function set accessKey(value:String):void;
  native public function get innerHTML():String;
  native public function set innerHTML(value:String):void;
  native public function get innerText():String;
  native public function set innerText(value:String):void;

  native public function get outerHTML():String;
  native public function set outerHTML(value:String):void;
  native public function get outerText():String;
  native public function set outerText(value:String):void;
  native public function insertAdjacentElement(where:String = "",element:randori.webkit.dom.Element = null):randori.webkit.dom.Element;

  native public function insertAdjacentHTML(where:String = "",html:String = ""):void;
  native public function insertAdjacentText(where:String = "",text:String = ""):void;
  native public function get children():randori.webkit.html.HTMLCollection;
  native public function get contentEditable():String;
  native public function set contentEditable(value:String):void;

  native public function get isContentEditable():Boolean;
  native public function get spellcheck():Boolean;
  native public function set spellcheck(value:Boolean):void;
  native public function get itemScope():Boolean;
  native public function set itemScope(value:Boolean):void;

  native public function get itemType():randori.webkit.html.DOMSettableTokenList;
  native public function get itemId():String;
  native public function set itemId(value:String):void;
  native public function get itemRef():randori.webkit.html.DOMSettableTokenList;
  native public function get itemProp():randori.webkit.html.DOMSettableTokenList;

  native public function get itemValue():*;
  native public function set itemValue(value:*):void;
  native public function click():void;
}


[JavaScript(export="false",name="HTMLDivElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('div')")]
public class randori.webkit.html.HTMLDivElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLDivElement():*;
  native public function get align():String;

  native public function set align(value:String):void;
}


[JavaScript(export="false",name="HTMLLinkElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('link')")]
public class randori.webkit.html.HTMLLinkElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLLinkElement():*;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;
  native public function get charset():String;

  native public function set charset(value:String):void;
  native public function get href():String;
  native public function set href(value:String):void;
  native public function get hreflang():String;
  native public function set hreflang(value:String):void;

  native public function get media():String;
  native public function set media(value:String):void;
  native public function get rel():String;
  native public function set rel(value:String):void;
  native public function get rev():String;

  native public function set rev(value:String):void;
  native public function get sizes():randori.webkit.html.DOMSettableTokenList;
  native public function set sizes(value:randori.webkit.html.DOMSettableTokenList):void;
  native public function get target():String;
  native public function set target(value:String):void;

  native public function get type():String;
  native public function set type(value:String):void;
  native public function get sheet():randori.webkit.css.StyleSheet;
}


[JavaScript(mode="global",export="false",name="Window")]
public class randori.webkit.page.Window extends Object
{
  native public function Window():*;
  static native public function get screen():randori.webkit.page.Screen;

  static native public function get history():randori.webkit.page.History;
  static native public function get locationbar():randori.webkit.page.BarInfo;
  static native public function get menubar():randori.webkit.page.BarInfo;
  static native public function get personalbar():randori.webkit.page.BarInfo;
  static native public function get scrollbars():randori.webkit.page.BarInfo;

  static native public function get statusbar():randori.webkit.page.BarInfo;
  static native public function get toolbar():randori.webkit.page.BarInfo;
  static native public function get navigator():randori.webkit.page.Navigator;
  static native public function get clientInformation():randori.webkit.page.Navigator;
  static native public function get crypto():randori.webkit.page.Crypto;

  static native public function get location():randori.webkit.page.Location;
  static native public function set location(value:randori.webkit.page.Location):void;
  [JavaScriptProperty(name="location")]
  static native public function set locationString(value:String):void;
  static native public function get event():randori.webkit.dom.DomEvent;
  static native public function getSelection():randori.webkit.page.Selection;

  static native public function get frameElement():randori.webkit.dom.Element;
  static native public function focus():void;
  static native public function blur():void;
  static native public function close():void;
  static native public function print():void;

  static native public function stop():void;
  static native public function open(url:String,name:String,options:String = ""):Window;
  static native public function showModalDialog(url:String,dialogArgs:* = null,featureArgs:String = ""):*;
  static native public function alert(message:String = ""):void;
  static native public function confirm(message:String = ""):Boolean;

  static native public function prompt(message:String = "",defaultValue:String = ""):String;
  static native public function find(string:String = "",caseSensitive:Boolean = null,backwards:Boolean = null,wrap:Boolean = null,wholeWord:Boolean = null,searchInFrames:Boolean = null,showDialog:Boolean = null):Boolean;
  static native public function get offscreenBuffering():Boolean;
  static native public function get outerHeight():uint;
  static native public function get outerWidth():uint;

  static native public function get innerHeight():uint;
  static native public function get innerWidth():uint;
  static native public function get screenX():uint;
  static native public function get screenY():uint;
  static native public function get screenLeft():uint;

  static native public function get screenTop():uint;
  static native public function get scrollX():uint;
  static native public function get scrollY():uint;
  static native public function get pageXOffset():uint;
  static native public function get pageYOffset():uint;

  static native public function scrollBy(x:uint = null,y:uint = null):void;
  static native public function scrollTo(x:uint = null,y:uint = null):void;
  static native public function scroll(x:uint = null,y:uint = null):void;
  static native public function moveBy(x:Number = 0,y:Number = 0):void;
  static native public function moveTo(x:Number = 0,y:Number = 0):void;

  static native public function resizeBy(x:Number = 0,y:Number = 0):void;
  static native public function resizeTo(width:Number = 0,height:Number = 0):void;
  static native public function get closed():Boolean;
  static native public function get length():uint;
  static native public function get name():String;

  static native public function set name(value:String):void;
  static native public function get status():String;
  static native public function set status(value:String):void;
  static native public function get defaultStatus():String;
  static native public function set defaultStatus(value:String):void;

  static native public function get defaultstatus():String;
  static native public function set defaultstatus(value:String):void;
  static native public function get self():Window;
  static native public function get window():Window;
  static native public function get frames():Window;

  static native public function get opener():Window;
  static native public function get parent():Window;
  static native public function get top():Window;
  static native public function get document():randori.webkit.dom.Document;
  static native public function matchMedia(query:String):randori.webkit.css.MediaQueryList;

  static native public function get styleMedia():randori.webkit.css.StyleMedia;
  static native public function getComputedStyle(element:randori.webkit.dom.Element = null,pseudoElement:String = ""):randori.webkit.css.CSSStyleDeclaration;
  static native public function getMatchedCSSRules(element:randori.webkit.dom.Element = null,pseudoElement:String = ""):randori.webkit.css.CSSRuleList;
  static native public function get devicePixelRatio():Number;
  static native public function get applicationCache():randori.webkit.loader.appcache.DOMApplicationCache;

  static native public function get sessionStorage():randori.webkit.storage.Storage;
  static native public function get localStorage():randori.webkit.storage.Storage;
  static native public function get console():randori.webkit.page.Console;
  static native public function postMessage(message:Object,targetOrigin:String,messagePorts:Array = null):void;
  static native public function setTimeout(handler:*,timeout:uint = null):uint;

  static native public function clearTimeout(handle:uint = null):void;
  static native public function setInterval(handler:*,timeout:uint = null):uint;
  static native public function clearInterval(handle:uint = null):void;
  static native public function atob(string:String = ""):String;
  static native public function btoa(string:String = ""):String;

  [JavaScriptProperty(name="CSS")]
  static native public function get CSS_():randori.webkit.css.CSS;
  static native public function set CSS_(value:randori.webkit.css.CSS):void;
  static native public function get onabort():Function;
  static native public function set onabort(value:Function):void;
  static native public function get onbeforeunload():Function;

  static native public function set onbeforeunload(value:Function):void;
  static native public function get onblur():Function;
  static native public function set onblur(value:Function):void;
  static native public function get oncanplay():Function;
  static native public function set oncanplay(value:Function):void;

  static native public function get oncanplaythrough():Function;
  static native public function set oncanplaythrough(value:Function):void;
  static native public function get onchange():Function;
  static native public function set onchange(value:Function):void;
  static native public function get onclick():Function;

  static native public function set onclick(value:Function):void;
  static native public function get oncontextmenu():Function;
  static native public function set oncontextmenu(value:Function):void;
  static native public function get ondblclick():Function;
  static native public function set ondblclick(value:Function):void;

  static native public function get ondrag():Function;
  static native public function set ondrag(value:Function):void;
  static native public function get ondragend():Function;
  static native public function set ondragend(value:Function):void;
  static native public function get ondragenter():Function;

  static native public function set ondragenter(value:Function):void;
  static native public function get ondragleave():Function;
  static native public function set ondragleave(value:Function):void;
  static native public function get ondragover():Function;
  static native public function set ondragover(value:Function):void;

  static native public function get ondragstart():Function;
  static native public function set ondragstart(value:Function):void;
  static native public function get ondrop():Function;
  static native public function set ondrop(value:Function):void;
  static native public function get ondurationchange():Function;

  static native public function set ondurationchange(value:Function):void;
  static native public function get onemptied():Function;
  static native public function set onemptied(value:Function):void;
  static native public function get onended():Function;
  static native public function set onended(value:Function):void;

  static native public function get onerror():Function;
  static native public function set onerror(value:Function):void;
  static native public function get onfocus():Function;
  static native public function set onfocus(value:Function):void;
  static native public function get onhashchange():Function;

  static native public function set onhashchange(value:Function):void;
  static native public function get oninput():Function;
  static native public function set oninput(value:Function):void;
  static native public function get oninvalid():Function;
  static native public function set oninvalid(value:Function):void;

  static native public function get onkeydown():Function;
  static native public function set onkeydown(value:Function):void;
  static native public function get onkeypress():Function;
  static native public function set onkeypress(value:Function):void;
  static native public function get onkeyup():Function;

  static native public function set onkeyup(value:Function):void;
  static native public function get onload():Function;
  static native public function set onload(value:Function):void;
  static native public function get onloadeddata():Function;
  static native public function set onloadeddata(value:Function):void;

  static native public function get onloadedmetadata():Function;
  static native public function set onloadedmetadata(value:Function):void;
  static native public function get onloadstart():Function;
  static native public function set onloadstart(value:Function):void;
  static native public function get onmessage():Function;

  static native public function set onmessage(value:Function):void;
  static native public function get onmousedown():Function;
  static native public function set onmousedown(value:Function):void;
  static native public function get onmousemove():Function;
  static native public function set onmousemove(value:Function):void;

  static native public function get onmouseout():Function;
  static native public function set onmouseout(value:Function):void;
  static native public function get onmouseover():Function;
  static native public function set onmouseover(value:Function):void;
  static native public function get onmouseup():Function;

  static native public function set onmouseup(value:Function):void;
  static native public function get onmousewheel():Function;
  static native public function set onmousewheel(value:Function):void;
  static native public function get onoffline():Function;
  static native public function set onoffline(value:Function):void;

  static native public function get ononline():Function;
  static native public function set ononline(value:Function):void;
  static native public function get onpagehide():Function;
  static native public function set onpagehide(value:Function):void;
  static native public function get onpageshow():Function;

  static native public function set onpageshow(value:Function):void;
  static native public function get onpause():Function;
  static native public function set onpause(value:Function):void;
  static native public function get onplay():Function;
  static native public function set onplay(value:Function):void;

  static native public function get onplaying():Function;
  static native public function set onplaying(value:Function):void;
  static native public function get onpopstate():Function;
  static native public function set onpopstate(value:Function):void;
  static native public function get onprogress():Function;

  static native public function set onprogress(value:Function):void;
  static native public function get onratechange():Function;
  static native public function set onratechange(value:Function):void;
  static native public function get onresize():Function;
  static native public function set onresize(value:Function):void;

  static native public function get onscroll():Function;
  static native public function set onscroll(value:Function):void;
  static native public function get onseeked():Function;
  static native public function set onseeked(value:Function):void;
  static native public function get onseeking():Function;

  static native public function set onseeking(value:Function):void;
  static native public function get onselect():Function;
  static native public function set onselect(value:Function):void;
  static native public function get onstalled():Function;
  static native public function set onstalled(value:Function):void;

  static native public function get onstorage():Function;
  static native public function set onstorage(value:Function):void;
  static native public function get onsubmit():Function;
  static native public function set onsubmit(value:Function):void;
  static native public function get onsuspend():Function;

  static native public function set onsuspend(value:Function):void;
  static native public function get ontimeupdate():Function;
  static native public function set ontimeupdate(value:Function):void;
  static native public function get onunload():Function;
  static native public function set onunload(value:Function):void;

  static native public function get onvolumechange():Function;
  static native public function set onvolumechange(value:Function):void;
  static native public function get onwaiting():Function;
  static native public function set onwaiting(value:Function):void;
  static native public function get onreset():Function;

  static native public function set onreset(value:Function):void;
  static native public function get onsearch():Function;
  static native public function set onsearch(value:Function):void;
  static native public function get ontransitionend():Function;
  static native public function set ontransitionend(value:Function):void;

  static native public function get ontouchstart():Function;
  static native public function set ontouchstart(value:Function):void;
  static native public function get ontouchmove():Function;
  static native public function set ontouchmove(value:Function):void;
  static native public function get ontouchend():Function;

  static native public function set ontouchend(value:Function):void;
  static native public function get ontouchcancel():Function;
  static native public function set ontouchcancel(value:Function):void;
  static native public function get ondevicemotion():Function;
  static native public function set ondevicemotion(value:Function):void;

  static native public function get ondeviceorientation():Function;
  static native public function set ondeviceorientation(value:Function):void;
  static native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  static native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  static native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;

  static native public function captureEvents():void;
  static native public function releaseEvents():void;
  [JavaScriptProperty(name="StyleSheet")]
  static native public function get StyleSheet_():randori.webkit.css.StyleSheet;
  static native public function set StyleSheet_(value:randori.webkit.css.StyleSheet):void;
  [JavaScriptProperty(name="CSSStyleSheet")]
  static native public function get CSSStyleSheet_():randori.webkit.css.CSSStyleSheet;

  static native public function set CSSStyleSheet_(value:randori.webkit.css.CSSStyleSheet):void;
  [JavaScriptProperty(name="CSSValue")]
  static native public function get CSSValue_():randori.webkit.css.CSSValue;
  static native public function set CSSValue_(value:randori.webkit.css.CSSValue):void;
  [JavaScriptProperty(name="CSSPrimitiveValue")]
  static native public function get CSSPrimitiveValue_():randori.webkit.css.CSSPrimitiveValue;
  static native public function set CSSPrimitiveValue_(value:randori.webkit.css.CSSPrimitiveValue):void;

  [JavaScriptProperty(name="CSSValueList")]
  static native public function get CSSValueList_():randori.webkit.css.CSSValueList;
  static native public function set CSSValueList_(value:randori.webkit.css.CSSValueList):void;
  [JavaScriptProperty(name="CSSRule")]
  static native public function get CSSRule_():randori.webkit.css.CSSRule;
  static native public function set CSSRule_(value:randori.webkit.css.CSSRule):void;
  [JavaScriptProperty(name="CSSCharsetRule")]
  static native public function get CSSCharsetRule_():randori.webkit.css.CSSCharsetRule;

  static native public function set CSSCharsetRule_(value:randori.webkit.css.CSSCharsetRule):void;
  [JavaScriptProperty(name="CSSFontFaceRule")]
  static native public function get CSSFontFaceRule_():randori.webkit.css.CSSFontFaceRule;
  static native public function set CSSFontFaceRule_(value:randori.webkit.css.CSSFontFaceRule):void;
  [JavaScriptProperty(name="CSSImportRule")]
  static native public function get CSSImportRule_():randori.webkit.css.CSSImportRule;
  static native public function set CSSImportRule_(value:randori.webkit.css.CSSImportRule):void;

  [JavaScriptProperty(name="CSSMediaRule")]
  static native public function get CSSMediaRule_():randori.webkit.css.CSSMediaRule;
  static native public function set CSSMediaRule_(value:randori.webkit.css.CSSMediaRule):void;
  [JavaScriptProperty(name="CSSPageRule")]
  static native public function get CSSPageRule_():randori.webkit.css.CSSPageRule;
  static native public function set CSSPageRule_(value:randori.webkit.css.CSSPageRule):void;
  [JavaScriptProperty(name="CSSStyleRule")]
  static native public function get CSSStyleRule_():randori.webkit.css.CSSStyleRule;

  static native public function set CSSStyleRule_(value:randori.webkit.css.CSSStyleRule):void;
  [JavaScriptProperty(name="CSSStyleDeclaration")]
  static native public function get CSSStyleDeclaration_():randori.webkit.css.CSSStyleDeclaration;
  static native public function set CSSStyleDeclaration_(value:randori.webkit.css.CSSStyleDeclaration):void;
  [JavaScriptProperty(name="MediaList")]
  static native public function get MediaList_():randori.webkit.css.MediaList;
  static native public function set MediaList_(value:randori.webkit.css.MediaList):void;

  [JavaScriptProperty(name="Counter")]
  static native public function get Counter_():randori.webkit.css.Counter;
  static native public function set Counter_(value:randori.webkit.css.Counter):void;
  [JavaScriptProperty(name="CSSRuleList")]
  static native public function get CSSRuleList_():randori.webkit.css.CSSRuleList;
  static native public function set CSSRuleList_(value:randori.webkit.css.CSSRuleList):void;
  [JavaScriptProperty(name="Rect")]
  static native public function get Rect_():randori.webkit.css.Rect;

  static native public function set Rect_(value:randori.webkit.css.Rect):void;
  [JavaScriptProperty(name="RGBColor")]
  static native public function get RGBColor_():randori.webkit.css.RGBColor;
  static native public function set RGBColor_(value:randori.webkit.css.RGBColor):void;
  [JavaScriptProperty(name="StyleSheetList")]
  static native public function get StyleSheetList_():randori.webkit.css.StyleSheetList;
  static native public function set StyleSheetList_(value:randori.webkit.css.StyleSheetList):void;

  static native public function get DOMException():Object;
  static native public function set DOMException(value:Object):void;
  [JavaScriptProperty(name="DOMStringList")]
  static native public function get DOMStringList_():randori.webkit.dom.DOMStringList;
  static native public function set DOMStringList_(value:randori.webkit.dom.DOMStringList):void;
  [JavaScriptProperty(name="DOMImplementation")]
  static native public function get DOMImplementation_():randori.webkit.dom.DOMImplementation;

  static native public function set DOMImplementation_(value:randori.webkit.dom.DOMImplementation):void;
  [JavaScriptProperty(name="DOMSettableTokenList")]
  static native public function get DOMSettableTokenList_():randori.webkit.html.DOMSettableTokenList;
  static native public function set DOMSettableTokenList_(value:randori.webkit.html.DOMSettableTokenList):void;
  [JavaScriptProperty(name="DOMTokenList")]
  static native public function get DOMTokenList_():randori.webkit.html.DOMTokenList;
  static native public function set DOMTokenList_(value:randori.webkit.html.DOMTokenList):void;

  [JavaScriptProperty(name="DocumentFragment")]
  static native public function get DocumentFragment_():randori.webkit.dom.DocumentFragment;
  static native public function set DocumentFragment_(value:randori.webkit.dom.DocumentFragment):void;
  [JavaScriptProperty(name="Document")]
  static native public function get Document_():randori.webkit.dom.Document;
  static native public function set Document_(value:randori.webkit.dom.Document):void;
  [JavaScriptProperty(name="Node")]
  static native public function get Node_():randori.webkit.dom.Node;

  static native public function set Node_(value:randori.webkit.dom.Node):void;
  [JavaScriptProperty(name="NodeList")]
  static native public function get NodeList_():randori.webkit.dom.NodeList;
  static native public function set NodeList_(value:randori.webkit.dom.NodeList):void;
  [JavaScriptProperty(name="PropertyNodeList")]
  static native public function get PropertyNodeList_():randori.webkit.dom.PropertyNodeList;
  static native public function set PropertyNodeList_(value:randori.webkit.dom.PropertyNodeList):void;

  [JavaScriptProperty(name="NamedNodeMap")]
  static native public function get NamedNodeMap_():randori.webkit.dom.NamedNodeMap;
  static native public function set NamedNodeMap_(value:randori.webkit.dom.NamedNodeMap):void;
  [JavaScriptProperty(name="CharacterData")]
  static native public function get CharacterData_():randori.webkit.dom.CharacterData;
  static native public function set CharacterData_(value:randori.webkit.dom.CharacterData):void;
  [JavaScriptProperty(name="Attr")]
  static native public function get Attr_():randori.webkit.dom.Attr;

  static native public function set Attr_(value:randori.webkit.dom.Attr):void;
  [JavaScriptProperty(name="Element")]
  static native public function get Element_():randori.webkit.dom.Element;
  static native public function set Element_(value:randori.webkit.dom.Element):void;
  [JavaScriptProperty(name="Text")]
  static native public function get Text_():randori.webkit.dom.Text;
  static native public function set Text_(value:randori.webkit.dom.Text):void;

  [JavaScriptProperty(name="Comment")]
  static native public function get Comment_():randori.webkit.dom.Comment;
  static native public function set Comment_(value:randori.webkit.dom.Comment):void;
  [JavaScriptProperty(name="CDATASection")]
  static native public function get CDATASection_():randori.webkit.dom.CDATASection;
  static native public function set CDATASection_(value:randori.webkit.dom.CDATASection):void;
  [JavaScriptProperty(name="DocumentType")]
  static native public function get DocumentType_():randori.webkit.dom.DocumentType;

  static native public function set DocumentType_(value:randori.webkit.dom.DocumentType):void;
  [JavaScriptProperty(name="Notation")]
  static native public function get Notation_():randori.webkit.dom.Notation;
  static native public function set Notation_(value:randori.webkit.dom.Notation):void;
  [JavaScriptProperty(name="Entity")]
  static native public function get Entity_():randori.webkit.dom.Entity;
  static native public function set Entity_(value:randori.webkit.dom.Entity):void;

  [JavaScriptProperty(name="EntityReference")]
  static native public function get EntityReference_():randori.webkit.dom.EntityReference;
  static native public function set EntityReference_(value:randori.webkit.dom.EntityReference):void;
  static native public function get Path():randori.webkit.html.canvas.DOMPath;
  static native public function set Path(value:randori.webkit.html.canvas.DOMPath):void;
  [JavaScriptProperty(name="ProcessingInstruction")]
  static native public function get ProcessingInstruction_():randori.webkit.dom.ProcessingInstruction;

  static native public function set ProcessingInstruction_(value:randori.webkit.dom.ProcessingInstruction):void;
  [JavaScriptProperty(name="HTMLContentElement")]
  static native public function get HTMLContentElement_():randori.webkit.html.shadow.HTMLContentElement;
  static native public function set HTMLContentElement_(value:randori.webkit.html.shadow.HTMLContentElement):void;
  [JavaScriptProperty(name="HTMLShadowElement")]
  static native public function get HTMLShadowElement_():randori.webkit.html.shadow.HTMLShadowElement;
  static native public function set HTMLShadowElement_(value:randori.webkit.html.shadow.HTMLShadowElement):void;

  [JavaScriptProperty(name="Selection")]
  static native public function get Selection_():randori.webkit.page.Selection;
  static native public function set Selection_(value:randori.webkit.page.Selection):void;
  [JavaScriptProperty(name="Window")]
  static native public function get Window__():Window;
  static native public function set Window__(value:Window):void;
  [JavaScriptProperty(name="HTMLDocument")]
  static native public function get HTMLDocument_():randori.webkit.html.HTMLDocument;

  static native public function set HTMLDocument_(value:randori.webkit.html.HTMLDocument):void;
  [JavaScriptProperty(name="HTMLElement")]
  static native public function get HTMLElement_():randori.webkit.html.HTMLElement;
  static native public function set HTMLElement_(value:randori.webkit.html.HTMLElement):void;
  [JavaScriptProperty(name="HTMLAnchorElement")]
  static native public function get HTMLAnchorElement_():randori.webkit.html.HTMLAnchorElement;
  static native public function set HTMLAnchorElement_(value:randori.webkit.html.HTMLAnchorElement):void;

  [JavaScriptProperty(name="HTMLAppletElement")]
  static native public function get HTMLAppletElement_():randori.webkit.html.HTMLAppletElement;
  static native public function set HTMLAppletElement_(value:randori.webkit.html.HTMLAppletElement):void;
  [JavaScriptProperty(name="HTMLAreaElement")]
  static native public function get HTMLAreaElement_():randori.webkit.html.HTMLAreaElement;
  static native public function set HTMLAreaElement_(value:randori.webkit.html.HTMLAreaElement):void;
  [JavaScriptProperty(name="HTMLBRElement")]
  static native public function get HTMLBRElement_():randori.webkit.html.HTMLBRElement;

  static native public function set HTMLBRElement_(value:randori.webkit.html.HTMLBRElement):void;
  [JavaScriptProperty(name="HTMLBaseElement")]
  static native public function get HTMLBaseElement_():randori.webkit.html.HTMLBaseElement;
  static native public function set HTMLBaseElement_(value:randori.webkit.html.HTMLBaseElement):void;
  [JavaScriptProperty(name="HTMLBaseFontElement")]
  static native public function get HTMLBaseFontElement_():randori.webkit.html.HTMLBaseFontElement;
  static native public function set HTMLBaseFontElement_(value:randori.webkit.html.HTMLBaseFontElement):void;

  [JavaScriptProperty(name="HTMLBodyElement")]
  static native public function get HTMLBodyElement_():randori.webkit.html.HTMLBodyElement;
  static native public function set HTMLBodyElement_(value:randori.webkit.html.HTMLBodyElement):void;
  [JavaScriptProperty(name="HTMLButtonElement")]
  static native public function get HTMLButtonElement_():randori.webkit.html.HTMLButtonElement;
  static native public function set HTMLButtonElement_(value:randori.webkit.html.HTMLButtonElement):void;
  [JavaScriptProperty(name="HTMLCanvasElement")]
  static native public function get HTMLCanvasElement_():randori.webkit.html.HTMLCanvasElement;

  static native public function set HTMLCanvasElement_(value:randori.webkit.html.HTMLCanvasElement):void;
  [JavaScriptProperty(name="HTMLDListElement")]
  static native public function get HTMLDListElement_():randori.webkit.html.HTMLDListElement;
  static native public function set HTMLDListElement_(value:randori.webkit.html.HTMLDListElement):void;
  [JavaScriptProperty(name="HTMLDataListElement")]
  static native public function get HTMLDataListElement_():randori.webkit.html.HTMLDataListElement;
  static native public function set HTMLDataListElement_(value:randori.webkit.html.HTMLDataListElement):void;

  [JavaScriptProperty(name="HTMLDialogElement")]
  static native public function get HTMLDialogElement_():randori.webkit.html.HTMLDialogElement;
  static native public function set HTMLDialogElement_(value:randori.webkit.html.HTMLDialogElement):void;
  [JavaScriptProperty(name="HTMLDirectoryElement")]
  static native public function get HTMLDirectoryElement_():randori.webkit.html.HTMLDirectoryElement;
  static native public function set HTMLDirectoryElement_(value:randori.webkit.html.HTMLDirectoryElement):void;
  [JavaScriptProperty(name="HTMLDivElement")]
  static native public function get HTMLDivElement_():randori.webkit.html.HTMLDivElement;

  static native public function set HTMLDivElement_(value:randori.webkit.html.HTMLDivElement):void;
  [JavaScriptProperty(name="HTMLEmbedElement")]
  static native public function get HTMLEmbedElement_():randori.webkit.html.HTMLEmbedElement;
  static native public function set HTMLEmbedElement_(value:randori.webkit.html.HTMLEmbedElement):void;
  [JavaScriptProperty(name="HTMLFieldSetElement")]
  static native public function get HTMLFieldSetElement_():randori.webkit.html.HTMLFieldSetElement;
  static native public function set HTMLFieldSetElement_(value:randori.webkit.html.HTMLFieldSetElement):void;

  [JavaScriptProperty(name="HTMLFontElement")]
  static native public function get HTMLFontElement_():randori.webkit.html.HTMLFontElement;
  static native public function set HTMLFontElement_(value:randori.webkit.html.HTMLFontElement):void;
  [JavaScriptProperty(name="HTMLFormElement")]
  static native public function get HTMLFormElement_():randori.webkit.html.HTMLFormElement;
  static native public function set HTMLFormElement_(value:randori.webkit.html.HTMLFormElement):void;
  [JavaScriptProperty(name="HTMLFrameElement")]
  static native public function get HTMLFrameElement_():randori.webkit.html.HTMLFrameElement;

  static native public function set HTMLFrameElement_(value:randori.webkit.html.HTMLFrameElement):void;
  [JavaScriptProperty(name="HTMLFrameSetElement")]
  static native public function get HTMLFrameSetElement_():randori.webkit.html.HTMLFrameSetElement;
  static native public function set HTMLFrameSetElement_(value:randori.webkit.html.HTMLFrameSetElement):void;
  [JavaScriptProperty(name="HTMLHRElement")]
  static native public function get HTMLHRElement_():randori.webkit.html.HTMLHRElement;
  static native public function set HTMLHRElement_(value:randori.webkit.html.HTMLHRElement):void;

  [JavaScriptProperty(name="HTMLHeadElement")]
  static native public function get HTMLHeadElement_():randori.webkit.html.HTMLHeadElement;
  static native public function set HTMLHeadElement_(value:randori.webkit.html.HTMLHeadElement):void;
  [JavaScriptProperty(name="HTMLHeadingElement")]
  static native public function get HTMLHeadingElement_():randori.webkit.html.HTMLHeadingElement;
  static native public function set HTMLHeadingElement_(value:randori.webkit.html.HTMLHeadingElement):void;
  [JavaScriptProperty(name="HTMLHtmlElement")]
  static native public function get HTMLHtmlElement_():randori.webkit.html.HTMLHtmlElement;

  static native public function set HTMLHtmlElement_(value:randori.webkit.html.HTMLHtmlElement):void;
  [JavaScriptProperty(name="HTMLIFrameElement")]
  static native public function get HTMLIFrameElement_():randori.webkit.html.HTMLIFrameElement;
  static native public function set HTMLIFrameElement_(value:randori.webkit.html.HTMLIFrameElement):void;
  [JavaScriptProperty(name="HTMLImageElement")]
  static native public function get HTMLImageElement_():randori.webkit.html.HTMLImageElement;
  static native public function set HTMLImageElement_(value:randori.webkit.html.HTMLImageElement):void;

  [JavaScriptProperty(name="HTMLInputElement")]
  static native public function get HTMLInputElement_():randori.webkit.html.HTMLInputElement;
  static native public function set HTMLInputElement_(value:randori.webkit.html.HTMLInputElement):void;
  [JavaScriptProperty(name="HTMLKeygenElement")]
  static native public function get HTMLKeygenElement_():randori.webkit.html.HTMLKeygenElement;
  static native public function set HTMLKeygenElement_(value:randori.webkit.html.HTMLKeygenElement):void;
  [JavaScriptProperty(name="HTMLLIElement")]
  static native public function get HTMLLIElement_():randori.webkit.html.HTMLLIElement;

  static native public function set HTMLLIElement_(value:randori.webkit.html.HTMLLIElement):void;
  [JavaScriptProperty(name="HTMLLabelElement")]
  static native public function get HTMLLabelElement_():randori.webkit.html.HTMLLabelElement;
  static native public function set HTMLLabelElement_(value:randori.webkit.html.HTMLLabelElement):void;
  [JavaScriptProperty(name="HTMLLegendElement")]
  static native public function get HTMLLegendElement_():randori.webkit.html.HTMLLegendElement;
  static native public function set HTMLLegendElement_(value:randori.webkit.html.HTMLLegendElement):void;

  [JavaScriptProperty(name="HTMLLinkElement")]
  static native public function get HTMLLinkElement_():randori.webkit.html.HTMLLinkElement;
  static native public function set HTMLLinkElement_(value:randori.webkit.html.HTMLLinkElement):void;
  [JavaScriptProperty(name="HTMLMapElement")]
  static native public function get HTMLMapElement_():randori.webkit.html.HTMLMapElement;
  static native public function set HTMLMapElement_(value:randori.webkit.html.HTMLMapElement):void;
  [JavaScriptProperty(name="HTMLMarqueeElement")]
  static native public function get HTMLMarqueeElement_():randori.webkit.html.HTMLMarqueeElement;

  static native public function set HTMLMarqueeElement_(value:randori.webkit.html.HTMLMarqueeElement):void;
  [JavaScriptProperty(name="HTMLMenuElement")]
  static native public function get HTMLMenuElement_():randori.webkit.html.HTMLMenuElement;
  static native public function set HTMLMenuElement_(value:randori.webkit.html.HTMLMenuElement):void;
  [JavaScriptProperty(name="HTMLMetaElement")]
  static native public function get HTMLMetaElement_():randori.webkit.html.HTMLMetaElement;
  static native public function set HTMLMetaElement_(value:randori.webkit.html.HTMLMetaElement):void;

  [JavaScriptProperty(name="HTMLModElement")]
  static native public function get HTMLModElement_():randori.webkit.html.HTMLModElement;
  static native public function set HTMLModElement_(value:randori.webkit.html.HTMLModElement):void;
  [JavaScriptProperty(name="HTMLOListElement")]
  static native public function get HTMLOListElement_():randori.webkit.html.HTMLOListElement;
  static native public function set HTMLOListElement_(value:randori.webkit.html.HTMLOListElement):void;
  [JavaScriptProperty(name="HTMLObjectElement")]
  static native public function get HTMLObjectElement_():randori.webkit.html.HTMLObjectElement;

  static native public function set HTMLObjectElement_(value:randori.webkit.html.HTMLObjectElement):void;
  [JavaScriptProperty(name="HTMLOptGroupElement")]
  static native public function get HTMLOptGroupElement_():randori.webkit.html.HTMLOptGroupElement;
  static native public function set HTMLOptGroupElement_(value:randori.webkit.html.HTMLOptGroupElement):void;
  [JavaScriptProperty(name="HTMLOptionElement")]
  static native public function get HTMLOptionElement_():randori.webkit.html.HTMLOptionElement;
  static native public function set HTMLOptionElement_(value:randori.webkit.html.HTMLOptionElement):void;

  [JavaScriptProperty(name="HTMLOutputElement")]
  static native public function get HTMLOutputElement_():randori.webkit.html.HTMLOutputElement;
  static native public function set HTMLOutputElement_(value:randori.webkit.html.HTMLOutputElement):void;
  [JavaScriptProperty(name="HTMLParagraphElement")]
  static native public function get HTMLParagraphElement_():randori.webkit.html.HTMLParagraphElement;
  static native public function set HTMLParagraphElement_(value:randori.webkit.html.HTMLParagraphElement):void;
  [JavaScriptProperty(name="HTMLParamElement")]
  static native public function get HTMLParamElement_():randori.webkit.html.HTMLParamElement;

  static native public function set HTMLParamElement_(value:randori.webkit.html.HTMLParamElement):void;
  [JavaScriptProperty(name="HTMLPreElement")]
  static native public function get HTMLPreElement_():randori.webkit.html.HTMLPreElement;
  static native public function set HTMLPreElement_(value:randori.webkit.html.HTMLPreElement):void;
  [JavaScriptProperty(name="HTMLQuoteElement")]
  static native public function get HTMLQuoteElement_():randori.webkit.html.HTMLQuoteElement;
  static native public function set HTMLQuoteElement_(value:randori.webkit.html.HTMLQuoteElement):void;

  [JavaScriptProperty(name="HTMLScriptElement")]
  static native public function get HTMLScriptElement_():randori.webkit.html.HTMLScriptElement;
  static native public function set HTMLScriptElement_(value:randori.webkit.html.HTMLScriptElement):void;
  [JavaScriptProperty(name="HTMLSelectElement")]
  static native public function get HTMLSelectElement_():randori.webkit.html.HTMLSelectElement;
  static native public function set HTMLSelectElement_(value:randori.webkit.html.HTMLSelectElement):void;
  [JavaScriptProperty(name="HTMLSpanElement")]
  static native public function get HTMLSpanElement_():randori.webkit.html.HTMLSpanElement;

  static native public function set HTMLSpanElement_(value:randori.webkit.html.HTMLSpanElement):void;
  [JavaScriptProperty(name="HTMLStyleElement")]
  static native public function get HTMLStyleElement_():randori.webkit.html.HTMLStyleElement;
  static native public function set HTMLStyleElement_(value:randori.webkit.html.HTMLStyleElement):void;
  [JavaScriptProperty(name="HTMLTableCaptionElement")]
  static native public function get HTMLTableCaptionElement_():randori.webkit.html.HTMLTableCaptionElement;
  static native public function set HTMLTableCaptionElement_(value:randori.webkit.html.HTMLTableCaptionElement):void;

  [JavaScriptProperty(name="HTMLTableCellElement")]
  static native public function get HTMLTableCellElement_():randori.webkit.html.HTMLTableCellElement;
  static native public function set HTMLTableCellElement_(value:randori.webkit.html.HTMLTableCellElement):void;
  [JavaScriptProperty(name="HTMLTableColElement")]
  static native public function get HTMLTableColElement_():randori.webkit.html.HTMLTableColElement;
  static native public function set HTMLTableColElement_(value:randori.webkit.html.HTMLTableColElement):void;
  [JavaScriptProperty(name="HTMLTableElement")]
  static native public function get HTMLTableElement_():randori.webkit.html.HTMLTableElement;

  static native public function set HTMLTableElement_(value:randori.webkit.html.HTMLTableElement):void;
  [JavaScriptProperty(name="HTMLTableRowElement")]
  static native public function get HTMLTableRowElement_():randori.webkit.html.HTMLTableRowElement;
  static native public function set HTMLTableRowElement_(value:randori.webkit.html.HTMLTableRowElement):void;
  [JavaScriptProperty(name="HTMLTableSectionElement")]
  static native public function get HTMLTableSectionElement_():randori.webkit.html.HTMLTableSectionElement;
  static native public function set HTMLTableSectionElement_(value:randori.webkit.html.HTMLTableSectionElement):void;

  [JavaScriptProperty(name="HTMLTemplateElement")]
  static native public function get HTMLTemplateElement_():randori.webkit.html.HTMLTemplateElement;
  static native public function set HTMLTemplateElement_(value:randori.webkit.html.HTMLTemplateElement):void;
  [JavaScriptProperty(name="HTMLTextAreaElement")]
  static native public function get HTMLTextAreaElement_():randori.webkit.html.HTMLTextAreaElement;
  static native public function set HTMLTextAreaElement_(value:randori.webkit.html.HTMLTextAreaElement):void;
  [JavaScriptProperty(name="HTMLTitleElement")]
  static native public function get HTMLTitleElement_():randori.webkit.html.HTMLTitleElement;

  static native public function set HTMLTitleElement_(value:randori.webkit.html.HTMLTitleElement):void;
  [JavaScriptProperty(name="HTMLUListElement")]
  static native public function get HTMLUListElement_():randori.webkit.html.HTMLUListElement;
  static native public function set HTMLUListElement_(value:randori.webkit.html.HTMLUListElement):void;
  [JavaScriptProperty(name="HTMLCollection")]
  static native public function get HTMLCollection_():randori.webkit.html.HTMLCollection;
  static native public function set HTMLCollection_(value:randori.webkit.html.HTMLCollection):void;

  [JavaScriptProperty(name="HTMLAllCollection")]
  static native public function get HTMLAllCollection_():randori.webkit.html.HTMLAllCollection;
  static native public function set HTMLAllCollection_(value:randori.webkit.html.HTMLAllCollection):void;
  [JavaScriptProperty(name="HTMLFormControlsCollection")]
  static native public function get HTMLFormControlsCollection_():randori.webkit.html.HTMLFormControlsCollection;
  static native public function set HTMLFormControlsCollection_(value:randori.webkit.html.HTMLFormControlsCollection):void;
  [JavaScriptProperty(name="HTMLOptionsCollection")]
  static native public function get HTMLOptionsCollection_():randori.webkit.html.HTMLOptionsCollection;

  static native public function set HTMLOptionsCollection_(value:randori.webkit.html.HTMLOptionsCollection):void;
  [JavaScriptProperty(name="HTMLPropertiesCollection")]
  static native public function get HTMLPropertiesCollection_():randori.webkit.html.HTMLPropertiesCollection;
  static native public function set HTMLPropertiesCollection_(value:randori.webkit.html.HTMLPropertiesCollection):void;
  [JavaScriptProperty(name="HTMLUnknownElement")]
  static native public function get HTMLUnknownElement_():randori.webkit.html.HTMLUnknownElement;
  static native public function set HTMLUnknownElement_(value:randori.webkit.html.HTMLUnknownElement):void;

  static native public function get Image():randori.webkit.html.HTMLImageElement;
  static native public function set Image(value:randori.webkit.html.HTMLImageElement):void;
  static native public function get Option():randori.webkit.html.HTMLOptionElement;
  static native public function set Option(value:randori.webkit.html.HTMLOptionElement):void;
  [JavaScriptProperty(name="MediaKeyEvent")]
  static native public function get MediaKeyEvent_():randori.webkit.html.MediaKeyEvent;

  static native public function set MediaKeyEvent_(value:randori.webkit.html.MediaKeyEvent):void;
  [JavaScriptProperty(name="MediaKeys")]
  static native public function get MediaKeys_():randori.webkit.modules.encryptedmedia.MediaKeys;
  static native public function set MediaKeys_(value:randori.webkit.modules.encryptedmedia.MediaKeys):void;
  [JavaScriptProperty(name="MediaKeyError")]
  static native public function get MediaKeyError_():randori.webkit.html.MediaKeyError;
  static native public function set MediaKeyError_(value:randori.webkit.html.MediaKeyError):void;

  [JavaScriptProperty(name="MediaKeyMessageEvent")]
  static native public function get MediaKeyMessageEvent_():randori.webkit.modules.encryptedmedia.MediaKeyMessageEvent;
  static native public function set MediaKeyMessageEvent_(value:randori.webkit.modules.encryptedmedia.MediaKeyMessageEvent):void;
  [JavaScriptProperty(name="MediaKeyNeededEvent")]
  static native public function get MediaKeyNeededEvent_():randori.webkit.modules.encryptedmedia.MediaKeyNeededEvent;
  static native public function set MediaKeyNeededEvent_(value:randori.webkit.modules.encryptedmedia.MediaKeyNeededEvent):void;
  [JavaScriptProperty(name="HTMLTrackElement")]
  static native public function get HTMLTrackElement_():randori.webkit.html.HTMLTrackElement;

  static native public function set HTMLTrackElement_(value:randori.webkit.html.HTMLTrackElement):void;
  [JavaScriptProperty(name="TextTrack")]
  static native public function get TextTrack_():randori.webkit.html.track.TextTrack;
  static native public function set TextTrack_(value:randori.webkit.html.track.TextTrack):void;
  [JavaScriptProperty(name="TextTrackCue")]
  static native public function get TextTrackCue_():randori.webkit.html.track.TextTrackCue;
  static native public function set TextTrackCue_(value:randori.webkit.html.track.TextTrackCue):void;

  [JavaScriptProperty(name="TextTrackCueList")]
  static native public function get TextTrackCueList_():randori.webkit.html.track.TextTrackCueList;
  static native public function set TextTrackCueList_(value:randori.webkit.html.track.TextTrackCueList):void;
  [JavaScriptProperty(name="TextTrackList")]
  static native public function get TextTrackList_():randori.webkit.html.track.TextTrackList;
  static native public function set TextTrackList_(value:randori.webkit.html.track.TextTrackList):void;
  [JavaScriptProperty(name="TextTrackRegion")]
  static native public function get TextTrackRegion_():randori.webkit.html.track.TextTrackRegion;

  static native public function set TextTrackRegion_(value:randori.webkit.html.track.TextTrackRegion):void;
  [JavaScriptProperty(name="TrackEvent")]
  static native public function get TrackEvent_():randori.webkit.html.track.TrackEvent;
  static native public function set TrackEvent_(value:randori.webkit.html.track.TrackEvent):void;
  static native public function get Audio():randori.webkit.html.HTMLAudioElement;
  static native public function set Audio(value:randori.webkit.html.HTMLAudioElement):void;

  [JavaScriptProperty(name="HTMLAudioElement")]
  static native public function get HTMLAudioElement_():randori.webkit.html.HTMLAudioElement;
  static native public function set HTMLAudioElement_(value:randori.webkit.html.HTMLAudioElement):void;
  [JavaScriptProperty(name="HTMLMediaElement")]
  static native public function get HTMLMediaElement_():randori.webkit.html.HTMLMediaElement;
  static native public function set HTMLMediaElement_(value:randori.webkit.html.HTMLMediaElement):void;
  [JavaScriptProperty(name="HTMLVideoElement")]
  static native public function get HTMLVideoElement_():randori.webkit.html.HTMLVideoElement;

  static native public function set HTMLVideoElement_(value:randori.webkit.html.HTMLVideoElement):void;
  [JavaScriptProperty(name="MediaError")]
  static native public function get MediaError_():randori.webkit.html.MediaError;
  static native public function set MediaError_(value:randori.webkit.html.MediaError):void;
  [JavaScriptProperty(name="TimeRanges")]
  static native public function get TimeRanges_():randori.webkit.html.TimeRanges;
  static native public function set TimeRanges_(value:randori.webkit.html.TimeRanges):void;

  [JavaScriptProperty(name="HTMLSourceElement")]
  static native public function get HTMLSourceElement_():randori.webkit.html.HTMLSourceElement;
  static native public function set HTMLSourceElement_(value:randori.webkit.html.HTMLSourceElement):void;
  [JavaScriptProperty(name="MediaController")]
  static native public function get MediaController_():randori.webkit.html.MediaController;
  static native public function set MediaController_(value:randori.webkit.html.MediaController):void;
  [JavaScriptProperty(name="CanvasPattern")]
  static native public function get CanvasPattern_():randori.webkit.html.canvas.CanvasPattern;

  static native public function set CanvasPattern_(value:randori.webkit.html.canvas.CanvasPattern):void;
  [JavaScriptProperty(name="CanvasGradient")]
  static native public function get CanvasGradient_():randori.webkit.html.canvas.CanvasGradient;
  static native public function set CanvasGradient_(value:randori.webkit.html.canvas.CanvasGradient):void;
  [JavaScriptProperty(name="CanvasRenderingContext2D")]
  static native public function get CanvasRenderingContext2D_():randori.webkit.html.canvas.CanvasRenderingContext2D;
  static native public function set CanvasRenderingContext2D_(value:randori.webkit.html.canvas.CanvasRenderingContext2D):void;

  [JavaScriptProperty(name="ImageData")]
  static native public function get ImageData_():randori.webkit.html.ImageData;
  static native public function set ImageData_(value:randori.webkit.html.ImageData):void;
  [JavaScriptProperty(name="TextMetrics")]
  static native public function get TextMetrics_():randori.webkit.html.TextMetrics;
  static native public function set TextMetrics_(value:randori.webkit.html.TextMetrics):void;
  [JavaScriptProperty(name="WebGLActiveInfo")]
  static native public function get WebGLActiveInfo_():randori.webkit.html.canvas.WebGLActiveInfo;

  static native public function set WebGLActiveInfo_(value:randori.webkit.html.canvas.WebGLActiveInfo):void;
  [JavaScriptProperty(name="WebGLBuffer")]
  static native public function get WebGLBuffer_():randori.webkit.html.canvas.WebGLBuffer;
  static native public function set WebGLBuffer_(value:randori.webkit.html.canvas.WebGLBuffer):void;
  [JavaScriptProperty(name="WebGLFramebuffer")]
  static native public function get WebGLFramebuffer_():randori.webkit.html.canvas.WebGLFramebuffer;
  static native public function set WebGLFramebuffer_(value:randori.webkit.html.canvas.WebGLFramebuffer):void;

  [JavaScriptProperty(name="WebGLProgram")]
  static native public function get WebGLProgram_():randori.webkit.html.canvas.WebGLProgram;
  static native public function set WebGLProgram_(value:randori.webkit.html.canvas.WebGLProgram):void;
  [JavaScriptProperty(name="WebGLRenderbuffer")]
  static native public function get WebGLRenderbuffer_():randori.webkit.html.canvas.WebGLRenderbuffer;
  static native public function set WebGLRenderbuffer_(value:randori.webkit.html.canvas.WebGLRenderbuffer):void;
  [JavaScriptProperty(name="WebGLRenderingContext")]
  static native public function get WebGLRenderingContext_():randori.webkit.html.canvas.WebGLRenderingContext;

  static native public function set WebGLRenderingContext_(value:randori.webkit.html.canvas.WebGLRenderingContext):void;
  [JavaScriptProperty(name="WebGLShader")]
  static native public function get WebGLShader_():randori.webkit.html.canvas.WebGLShader;
  static native public function set WebGLShader_(value:randori.webkit.html.canvas.WebGLShader):void;
  [JavaScriptProperty(name="WebGLShaderPrecisionFormat")]
  static native public function get WebGLShaderPrecisionFormat_():randori.webkit.html.canvas.WebGLShaderPrecisionFormat;
  static native public function set WebGLShaderPrecisionFormat_(value:randori.webkit.html.canvas.WebGLShaderPrecisionFormat):void;

  [JavaScriptProperty(name="WebGLTexture")]
  static native public function get WebGLTexture_():randori.webkit.html.canvas.WebGLTexture;
  static native public function set WebGLTexture_(value:randori.webkit.html.canvas.WebGLTexture):void;
  [JavaScriptProperty(name="WebGLUniformLocation")]
  static native public function get WebGLUniformLocation_():randori.webkit.html.canvas.WebGLUniformLocation;
  static native public function set WebGLUniformLocation_(value:randori.webkit.html.canvas.WebGLUniformLocation):void;
  [JavaScriptProperty(name="DOMStringMap")]
  static native public function get DOMStringMap_():randori.webkit.dom.DOMStringMap;

  static native public function set DOMStringMap_(value:randori.webkit.dom.DOMStringMap):void;
  [JavaScriptProperty(name="ArrayBuffer")]
  static native public function get ArrayBuffer_():randori.webkit.html.canvas.ArrayBuffer;
  static native public function set ArrayBuffer_(value:randori.webkit.html.canvas.ArrayBuffer):void;
  [JavaScriptProperty(name="ArrayBufferView")]
  static native public function get ArrayBufferView_():randori.webkit.html.canvas.ArrayBufferView;
  static native public function set ArrayBufferView_(value:randori.webkit.html.canvas.ArrayBufferView):void;

  [JavaScriptProperty(name="Int8Array")]
  static native public function get Int8Array_():Object;
  static native public function set Int8Array_(value:Object):void;
  [JavaScriptProperty(name="Uint8Array")]
  static native public function get Uint8Array_():Object;
  static native public function set Uint8Array_(value:Object):void;
  [JavaScriptProperty(name="Uint8ClampedArray")]
  static native public function get Uint8ClampedArray_():Object;

  static native public function set Uint8ClampedArray_(value:Object):void;
  [JavaScriptProperty(name="Int16Array")]
  static native public function get Int16Array_():Object;
  static native public function set Int16Array_(value:Object):void;
  [JavaScriptProperty(name="Uint16Array")]
  static native public function get Uint16Array_():Object;
  static native public function set Uint16Array_(value:Object):void;

  [JavaScriptProperty(name="Int32Array")]
  static native public function get Int32Array_():Object;
  static native public function set Int32Array_(value:Object):void;
  [JavaScriptProperty(name="Uint32Array")]
  static native public function get Uint32Array_():Object;
  static native public function set Uint32Array_(value:Object):void;
  [JavaScriptProperty(name="Float32Array")]
  static native public function get Float32Array_():Object;

  static native public function set Float32Array_(value:Object):void;
  [JavaScriptProperty(name="Float64Array")]
  static native public function get Float64Array_():Object;
  static native public function set Float64Array_(value:Object):void;
  [JavaScriptProperty(name="DataView")]
  static native public function get DataView_():randori.webkit.html.canvas.DataView;
  static native public function set DataView_(value:randori.webkit.html.canvas.DataView):void;

  static native public function get Event():randori.webkit.dom.DomEvent;
  static native public function set Event(value:randori.webkit.dom.DomEvent):void;
  [JavaScriptProperty(name="BeforeLoadEvent")]
  static native public function get BeforeLoadEvent_():randori.webkit.dom.BeforeLoadEvent;
  static native public function set BeforeLoadEvent_(value:randori.webkit.dom.BeforeLoadEvent):void;
  [JavaScriptProperty(name="CompositionEvent")]
  static native public function get CompositionEvent_():randori.webkit.dom.CompositionEvent;

  static native public function set CompositionEvent_(value:randori.webkit.dom.CompositionEvent):void;
  [JavaScriptProperty(name="CustomEvent")]
  static native public function get CustomEvent_():randori.webkit.dom.CustomEvent;
  static native public function set CustomEvent_(value:randori.webkit.dom.CustomEvent):void;
  [JavaScriptProperty(name="ErrorEvent")]
  static native public function get ErrorEvent_():randori.webkit.dom.ErrorEvent;
  static native public function set ErrorEvent_(value:randori.webkit.dom.ErrorEvent):void;

  [JavaScriptProperty(name="FocusEvent")]
  static native public function get FocusEvent_():randori.webkit.dom.FocusEvent;
  static native public function set FocusEvent_(value:randori.webkit.dom.FocusEvent):void;
  [JavaScriptProperty(name="HashChangeEvent")]
  static native public function get HashChangeEvent_():randori.webkit.dom.HashChangeEvent;
  static native public function set HashChangeEvent_(value:randori.webkit.dom.HashChangeEvent):void;
  [JavaScriptProperty(name="KeyboardEvent")]
  static native public function get KeyboardEvent_():randori.webkit.dom.KeyboardEvent;

  static native public function set KeyboardEvent_(value:randori.webkit.dom.KeyboardEvent):void;
  [JavaScriptProperty(name="MessageEvent")]
  static native public function get MessageEvent_():randori.webkit.dom.MessageEvent;
  static native public function set MessageEvent_(value:randori.webkit.dom.MessageEvent):void;
  [JavaScriptProperty(name="MouseEvent")]
  static native public function get MouseEvent_():randori.webkit.dom.MouseEvent;
  static native public function set MouseEvent_(value:randori.webkit.dom.MouseEvent):void;

  [JavaScriptProperty(name="MutationEvent")]
  static native public function get MutationEvent_():randori.webkit.dom.MutationEvent;
  static native public function set MutationEvent_(value:randori.webkit.dom.MutationEvent):void;
  [JavaScriptProperty(name="OverflowEvent")]
  static native public function get OverflowEvent_():randori.webkit.dom.OverflowEvent;
  static native public function set OverflowEvent_(value:randori.webkit.dom.OverflowEvent):void;
  [JavaScriptProperty(name="PopStateEvent")]
  static native public function get PopStateEvent_():randori.webkit.dom.PopStateEvent;

  static native public function set PopStateEvent_(value:randori.webkit.dom.PopStateEvent):void;
  [JavaScriptProperty(name="PageTransitionEvent")]
  static native public function get PageTransitionEvent_():randori.webkit.dom.PageTransitionEvent;
  static native public function set PageTransitionEvent_(value:randori.webkit.dom.PageTransitionEvent):void;
  [JavaScriptProperty(name="ProgressEvent")]
  static native public function get ProgressEvent_():randori.webkit.dom.ProgressEvent;
  static native public function set ProgressEvent_(value:randori.webkit.dom.ProgressEvent):void;

  [JavaScriptProperty(name="TextEvent")]
  static native public function get TextEvent_():randori.webkit.dom.TextEvent;
  static native public function set TextEvent_(value:randori.webkit.dom.TextEvent):void;
  [JavaScriptProperty(name="TransitionEvent")]
  static native public function get TransitionEvent_():randori.webkit.dom.TransitionEvent;
  static native public function set TransitionEvent_(value:randori.webkit.dom.TransitionEvent):void;
  [JavaScriptProperty(name="UIEvent")]
  static native public function get UIEvent_():randori.webkit.dom.UIEvent;

  static native public function set UIEvent_(value:randori.webkit.dom.UIEvent):void;
  [JavaScriptProperty(name="WheelEvent")]
  static native public function get WheelEvent_():randori.webkit.dom.WheelEvent;
  static native public function set WheelEvent_(value:randori.webkit.dom.WheelEvent):void;
  [JavaScriptProperty(name="XMLHttpRequestProgressEvent")]
  static native public function get XMLHttpRequestProgressEvent_():randori.webkit.xml.XMLHttpRequestProgressEvent;
  static native public function set XMLHttpRequestProgressEvent_(value:randori.webkit.xml.XMLHttpRequestProgressEvent):void;

  [JavaScriptProperty(name="DeviceMotionEvent")]
  static native public function get DeviceMotionEvent_():randori.webkit.dom.DeviceMotionEvent;
  static native public function set DeviceMotionEvent_(value:randori.webkit.dom.DeviceMotionEvent):void;
  [JavaScriptProperty(name="DeviceOrientationEvent")]
  static native public function get DeviceOrientationEvent_():randori.webkit.dom.DeviceOrientationEvent;
  static native public function set DeviceOrientationEvent_(value:randori.webkit.dom.DeviceOrientationEvent):void;
  [JavaScriptProperty(name="Touch")]
  static native public function get Touch_():randori.webkit.dom.Touch;

  static native public function set Touch_(value:randori.webkit.dom.Touch):void;
  [JavaScriptProperty(name="TouchEvent")]
  static native public function get TouchEvent_():randori.webkit.dom.TouchEvent;
  static native public function set TouchEvent_(value:randori.webkit.dom.TouchEvent):void;
  [JavaScriptProperty(name="TouchList")]
  static native public function get TouchList_():randori.webkit.dom.TouchList;
  static native public function set TouchList_(value:randori.webkit.dom.TouchList):void;

  [JavaScriptProperty(name="StorageEvent")]
  static native public function get StorageEvent_():randori.webkit.storage.StorageEvent;
  static native public function set StorageEvent_(value:randori.webkit.storage.StorageEvent):void;
  [JavaScriptProperty(name="SpeechInputEvent")]
  static native public function get SpeechInputEvent_():randori.webkit.page.SpeechInputEvent;
  static native public function set SpeechInputEvent_(value:randori.webkit.page.SpeechInputEvent):void;
  [JavaScriptProperty(name="WebGLContextEvent")]
  static native public function get WebGLContextEvent_():randori.webkit.html.canvas.WebGLContextEvent;

  static native public function set WebGLContextEvent_(value:randori.webkit.html.canvas.WebGLContextEvent):void;
  [JavaScriptProperty(name="DeviceProximityEvent")]
  static native public function get DeviceProximityEvent_():randori.webkit.modules.proximity.DeviceProximityEvent;
  static native public function set DeviceProximityEvent_(value:randori.webkit.modules.proximity.DeviceProximityEvent):void;
  [JavaScriptProperty(name="AutocompleteErrorEvent")]
  static native public function get AutocompleteErrorEvent_():randori.webkit.dom.AutocompleteErrorEvent;
  static native public function set AutocompleteErrorEvent_(value:randori.webkit.dom.AutocompleteErrorEvent):void;

  static native public function get EventException():Object;
  static native public function set EventException(value:Object):void;
  [JavaScriptProperty(name="Clipboard")]
  static native public function get Clipboard_():randori.webkit.dom.Clipboard;
  static native public function set Clipboard_(value:randori.webkit.dom.Clipboard):void;
  [JavaScriptProperty(name="Worker")]
  static native public function get Worker_():randori.webkit.workers.Worker;

  static native public function set Worker_(value:randori.webkit.workers.Worker):void;
  [JavaScriptProperty(name="SharedWorker")]
  static native public function get SharedWorker_():randori.webkit.workers.SharedWorker;
  static native public function set SharedWorker_(value:randori.webkit.workers.SharedWorker):void;
  [JavaScriptProperty(name="File")]
  static native public function get File_():randori.webkit.fileapi.File;
  static native public function set File_(value:randori.webkit.fileapi.File):void;

  [JavaScriptProperty(name="FileList")]
  static native public function get FileList_():randori.webkit.fileapi.FileList;
  static native public function set FileList_(value:randori.webkit.fileapi.FileList):void;
  [JavaScriptProperty(name="Blob")]
  static native public function get Blob_():randori.webkit.fileapi.Blob;
  static native public function set Blob_(value:randori.webkit.fileapi.Blob):void;
  [JavaScriptProperty(name="NodeFilter")]
  static native public function get NodeFilter_():randori.webkit.dom.NodeFilter;

  static native public function set NodeFilter_(value:randori.webkit.dom.NodeFilter):void;
  [JavaScriptProperty(name="Range")]
  static native public function get Range_():randori.webkit.dom.Range;
  static native public function set Range_(value:randori.webkit.dom.Range):void;
  static native public function get RangeException():Object;
  static native public function set RangeException(value:Object):void;

  [JavaScriptProperty(name="EventSource")]
  static native public function get EventSource_():randori.webkit.page.EventSource;
  static native public function set EventSource_(value:randori.webkit.page.EventSource):void;
  static native public function get XMLDocument():randori.webkit.dom.Document;
  static native public function set XMLDocument(value:randori.webkit.dom.Document):void;
  [JavaScriptProperty(name="DOMParser")]
  static native public function get DOMParser_():randori.webkit.xml.DOMParser;

  static native public function set DOMParser_(value:randori.webkit.xml.DOMParser):void;
  [JavaScriptProperty(name="XMLSerializer")]
  static native public function get XMLSerializer_():randori.webkit.xml.XMLSerializer;
  static native public function set XMLSerializer_(value:randori.webkit.xml.XMLSerializer):void;
  [JavaScriptProperty(name="XMLHttpRequest")]
  static native public function get XMLHttpRequest_():randori.webkit.xml.XMLHttpRequest;
  static native public function set XMLHttpRequest_(value:randori.webkit.xml.XMLHttpRequest):void;

  [JavaScriptProperty(name="XMLHttpRequestUpload")]
  static native public function get XMLHttpRequestUpload_():randori.webkit.xml.XMLHttpRequestUpload;
  static native public function set XMLHttpRequestUpload_(value:randori.webkit.xml.XMLHttpRequestUpload):void;
  static native public function get XMLHttpRequestException():Object;
  static native public function set XMLHttpRequestException(value:Object):void;
  [JavaScriptProperty(name="XSLTProcessor")]
  static native public function get XSLTProcessor_():randori.webkit.xml.XSLTProcessor;

  static native public function set XSLTProcessor_(value:randori.webkit.xml.XSLTProcessor):void;
  [JavaScriptProperty(name="Plugin")]
  static native public function get Plugin_():randori.webkit.plugins.Plugin;
  static native public function set Plugin_(value:randori.webkit.plugins.Plugin):void;
  [JavaScriptProperty(name="PluginArray")]
  static native public function get PluginArray_():Object;
  static native public function set PluginArray_(value:Object):void;

  [JavaScriptProperty(name="MimeType")]
  static native public function get MimeType_():randori.webkit.plugins.MimeType;
  static native public function set MimeType_(value:randori.webkit.plugins.MimeType):void;
  [JavaScriptProperty(name="MimeTypeArray")]
  static native public function get MimeTypeArray_():Object;
  static native public function set MimeTypeArray_(value:Object):void;
  [JavaScriptProperty(name="ClientRect")]
  static native public function get ClientRect_():randori.webkit.dom.ClientRect;

  static native public function set ClientRect_(value:randori.webkit.dom.ClientRect):void;
  [JavaScriptProperty(name="ClientRectList")]
  static native public function get ClientRectList_():randori.webkit.dom.ClientRectList;
  static native public function set ClientRectList_(value:randori.webkit.dom.ClientRectList):void;
  [JavaScriptProperty(name="Storage")]
  static native public function get Storage_():randori.webkit.storage.Storage;
  static native public function set Storage_(value:randori.webkit.storage.Storage):void;

  [JavaScriptProperty(name="XPathEvaluator")]
  static native public function get XPathEvaluator_():randori.webkit.xml.XPathEvaluator;
  static native public function set XPathEvaluator_(value:randori.webkit.xml.XPathEvaluator):void;
  [JavaScriptProperty(name="XPathResult")]
  static native public function get XPathResult_():randori.webkit.xml.XPathResult;
  static native public function set XPathResult_(value:randori.webkit.xml.XPathResult):void;
  static native public function get XPathException():Object;

  static native public function set XPathException(value:Object):void;
  [JavaScriptProperty(name="SVGZoomEvent")]
  static native public function get SVGZoomEvent_():randori.webkit.svg.SVGZoomEvent;
  static native public function set SVGZoomEvent_(value:randori.webkit.svg.SVGZoomEvent):void;
  [JavaScriptProperty(name="FormData")]
  static native public function get FormData_():randori.webkit.html.FormData;
  static native public function set FormData_(value:randori.webkit.html.FormData):void;

  [JavaScriptProperty(name="FileError")]
  static native public function get FileError_():randori.webkit.fileapi.FileError;
  static native public function set FileError_(value:randori.webkit.fileapi.FileError):void;
  [JavaScriptProperty(name="FileReader")]
  static native public function get FileReader_():randori.webkit.fileapi.FileReader;
  static native public function set FileReader_(value:randori.webkit.fileapi.FileReader):void;
  [JavaScriptProperty(name="URL")]
  static native public function get URL_():randori.webkit.html.URL;

  static native public function set URL_(value:randori.webkit.html.URL):void;
  [JavaScriptProperty(name="MutationObserver")]
  static native public function get MutationObserver_():randori.webkit.dom.MutationObserver;
  static native public function set MutationObserver_(value:randori.webkit.dom.MutationObserver):void;
  static native public function JSON(JSONString:String):Object;
}


[JavaScript(export="false",name="XMLHttpRequest")]
public class randori.webkit.xml.XMLHttpRequest extends Object
{
  native public function XMLHttpRequest():*;

  native public function get onabort():Function;
  native public function set onabort(value:Function):void;
  native public function get onerror():Function;
  native public function set onerror(value:Function):void;
  native public function get onload():Function;

  native public function set onload(value:Function):void;
  native public function get onloadend():Function;
  native public function set onloadend(value:Function):void;
  native public function get onloadstart():Function;
  native public function set onloadstart(value:Function):void;

  native public function get onprogress():Function;
  native public function set onprogress(value:Function):void;
  native public function get ontimeout():Function;
  native public function set ontimeout(value:Function):void;
  native public function get onreadystatechange():Function;

  native public function set onreadystatechange(value:Function):void;
  native public function get timeout():uint;
  native public function set timeout(value:uint):void;
  native public function get readyState():uint;
  native public function get withCredentials():Boolean;

  native public function set withCredentials(value:Boolean):void;
  native public function open(method:String,url:String,async:Boolean = false,user:String = "",password:String = ""):void;
  native public function setRequestHeader(header:String,value:String):void;
  native public function abort():void;
  native public function get upload():randori.webkit.xml.XMLHttpRequestUpload;

  native public function getAllResponseHeaders():String;
  native public function getResponseHeader(header:String):String;
  native public function get responseText():String;
  native public function get responseXML():randori.webkit.dom.Document;
  native public function get responseType():String;

  native public function set responseType(value:String):void;
  native public function get response():Object;
  native public function get status():uint;
  native public function get statusText():String;
  native public function overrideMimeType(override_:String):void;

  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
  native public function send(data:* = null):void;
  [JavaScriptMethod(name="send")]
  native public function sendArrayBuffer(data:randori.webkit.html.canvas.ArrayBuffer):void;

  [JavaScriptMethod(name="send")]
  native public function sendBlob(data:randori.webkit.fileapi.Blob):void;
  [JavaScriptMethod(name="send")]
  native public function sendDocument(data:randori.webkit.dom.Document):void;
  [JavaScriptMethod(name="send")]
  native public function sendString(data:String):void;
  [JavaScriptMethod(name="send")]
  native public function sendFormData(data:randori.webkit.html.FormData):void;
  static native public const UNSENT:uint = 0;

  static native public const OPENED:uint = 1;
  static native public const HEADERS_RECEIVED:uint = 2;
  static native public const LOADING:uint = 3;
  static native public const DONE:uint = 4;
}


[native(cls="DateClass",gc="exact",instance="DateObject",methods="auto",customconstruct="true")]
public final dynamic class Date extends Object
{
  native public function Date(year:* = null,month:* = null,date:* = null,hours:* = null,minutes:* = null,seconds:* = null,ms:* = null):*;

  native public function get month():Number;
  native public function get monthUTC():Number;
  native public function get seconds():Number;
  native public function set month(value:Number):*;
  native AS3 function getMilliseconds():Number;

  native public function set minutesUTC(value:Number):*;
  native private function _setUTCFullYear(... rest):Number;
  native private function _setUTCHours(... rest):Number;
  native public function get hours():Number;
  native private function _setTime(value:Number):Number;

  native AS3 function getUTCMinutes():Number;
  native public function get milliseconds():Number;
  native AS3 function setMilliseconds(ms:* = null):Number;
  native public function get hoursUTC():Number;
  native public function get dateUTC():Number;

  native private function _get(index:int):Number;
  native public function get fullYearUTC():Number;
  native AS3 function toTimeString():String;
  native AS3 function toUTCString():String;
  native AS3 function setUTCMilliseconds(ms:* = null):Number;

  native public function get day():Number;
  native private function _setMonth(... rest):Number;
  native private function _setUTCMinutes(... rest):Number;
  native AS3 function getUTCMilliseconds():Number;
  native public function set time(value:Number):*;

  native AS3 function getDate():Number;
  native public function set hours(value:Number):*;
  native AS3 function toLocaleString():String;
  native AS3 function valueOf():Number;
  native AS3 function getMinutes():Number;

  native public function set monthUTC(value:Number):*;
  native public function set milliseconds(value:Number):*;
  native private function _setHours(... rest):Number;
  native public function get date():Number;
  native private function _setFullYear(... rest):Number;

  native AS3 function setDate(date:* = null):Number;
  native AS3 function getUTCSeconds():Number;
  native AS3 function getUTCMonth():Number;
  native private function _setUTCMilliseconds(... rest):Number;
  native public function get secondsUTC():Number;

  native AS3 function setMinutes(min:* = null,sec:* = null,ms:* = null):Number;
  native AS3 function setUTCDate(date:* = null):Number;
  native public function set hoursUTC(value:Number):*;
  native AS3 function toDateString():String;
  native public function set dateUTC(value:Number):*;

  native private function _setMinutes(... rest):Number;
  native AS3 function setSeconds(sec:* = null,ms:* = null):Number;
  native AS3 function setMonth(month:* = null,date:* = null):Number;
  native AS3 function setUTCMinutes(min:* = null,sec:* = null,ms:* = null):Number;
  native AS3 function getUTCHours():Number;

  native AS3 function getTime():Number;
  native AS3 function setUTCSeconds(sec:* = null,ms:* = null):Number;
  native private function _setUTCSeconds(... rest):Number;
  native public function set fullYearUTC(value:Number):*;
  native AS3 function getSeconds():Number;

  native AS3 function getMonth():Number;
  native private function _toString(index:int):String;
  native public function get minutesUTC():Number;
  native AS3 function setHours(hour:* = null,min:* = null,sec:* = null,ms:* = null):Number;
  native AS3 function getUTCDay():Number;

  native AS3 function setTime(t:* = null):Number;
  native public function set secondsUTC(value:Number):*;
  native AS3 function toLocaleTimeString():String;
  native AS3 function getUTCDate():Number;
  native private function _setMilliseconds(... rest):Number;

  native private function _setUTCDate(... rest):Number;
  native public function set fullYear(value:Number):*;
  native AS3 function getHours():Number;
  native private function _setSeconds(... rest):Number;
  native public function get minutes():Number;

  native AS3 function setUTCMonth(month:* = null,date:* = null):Number;
  native AS3 function getTimezoneOffset():Number;
  native public function set date(value:Number):*;
  native public function set millisecondsUTC(value:Number):*;
  native AS3 function setUTCHours(hour:* = null,min:* = null,sec:* = null,ms:* = null):Number;

  native AS3 function getDay():Number;
  native public function get dayUTC():Number;
  native AS3 function getFullYear():Number;
  native public function set minutes(value:Number):*;
  native AS3 function toString():String;

  native AS3 function setFullYear(year:* = null,month:* = null,date:* = null):Number;
  native public function get time():Number;
  native private function _setDate(... rest):Number;
  native public function get fullYear():Number;
  native AS3 function toLocaleDateString():String;

  native AS3 function setUTCFullYear(year:* = null,month:* = null,date:* = null):Number;
  native public function get millisecondsUTC():Number;
  native AS3 function getUTCFullYear():Number;
  native public function get timezoneOffset():Number;
  native public function set seconds(value:Number):*;

  native private function _setUTCMonth(... rest):Number;
  static native public final function UTC(year:*,month:*,date:* = 1,hours:* = 0,minutes:* = 0,seconds:* = 0,ms:* = 0,... rest):Number;
  static native public final function parse(s:*):Number;
  static native public const length:int = 7;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}


[native(cls="XMLListClass",gc="exact",instance="XMLListObject",methods="auto",customconstruct="true")]
public final dynamic class XMLList extends Object
{

  native public function XMLList(value:* = null):*;
  native AS3 override function hasOwnProperty(P:* = null):Boolean;
  native AS3 function insertChildBefore(child1:*,child2:*):*;
  native AS3 function namespaceDeclarations():Array;
  native AS3 function removeNamespace(ns:*):XML;

  native AS3 override function propertyIsEnumerable(P:* = null):Boolean;
  native AS3 function setChildren(value:*):XML;
  native AS3 function name():Object;
  native AS3 function replace(propertyName:*,value:*):XML;
  native AS3 function normalize():XMLList;

  native AS3 function inScopeNamespaces():Array;
  native AS3 function toXMLString():String;
  native AS3 function descendants(name:* = "*"):XMLList;
  native AS3 function attributes():XMLList;
  native AS3 function processingInstructions(name:* = "*"):XMLList;

  native AS3 function setNamespace(ns:*):void;
  native AS3 function setLocalName(name:*):void;
  native AS3 function namespace(prefix:* = null):*;
  native AS3 function attribute(arg:*):XMLList;
  native AS3 function childIndex():int;

  native AS3 function contains(value:*):Boolean;
  native AS3 function appendChild(child:*):XML;
  native AS3 function hasComplexContent():Boolean;
  native AS3 function localName():Object;
  native AS3 function length():int;

  native AS3 function valueOf():XMLList;
  native AS3 function parent():*;
  native AS3 function child(propertyName:*):XMLList;
  native AS3 function toString():String;
  native AS3 function hasSimpleContent():Boolean;

  native AS3 function prependChild(value:*):XML;
  native AS3 function setName(name:*):void;
  native AS3 function text():XMLList;
  native AS3 function copy():XMLList;
  native AS3 function nodeKind():String;

  native AS3 function elements(name:* = "*"):XMLList;
  native AS3 function insertChildAfter(child1:*,child2:*):*;
  native AS3 function addNamespace(ns:*):XML;
  native AS3 function comments():XMLList;
  native private function _namespace(prefix:*,argc:int):*;

  native AS3 function children():XMLList;
  static native public const length:* = 1;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

[native(cls="QNameClass",gc="exact",instance="QNameObject",methods="auto",customconstruct="true")]
public final class QName extends Object
{
  native public function QName(namespace:* = null,name:* = null):*;
  native AS3 function valueOf():QName;

  native AS3 function toString():String;
  native public function get uri():*;
  native public function get localName():String;
  static native public const length:* = 2;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}

[native(cls="XMLClass",gc="exact",instance="XMLObject",methods="auto",customconstruct="true")]
public final dynamic class XML extends Object
{

  native public function XML(value:* = null):*;
  native AS3 override function hasOwnProperty(P:* = null):Boolean;
  native AS3 function insertChildBefore(child1:*,child2:*):*;
  native AS3 function replace(propertyName:*,value:*):XML;
  native AS3 function setNotification(f:Function):*;

  native AS3 function removeNamespace(ns:*):XML;
  native AS3 override function propertyIsEnumerable(P:* = null):Boolean;
  native AS3 function setChildren(value:*):XML;
  native AS3 function name():Object;
  native AS3 function normalize():XML;

  native AS3 function inScopeNamespaces():Array;
  native AS3 function toXMLString():String;
  native AS3 function setLocalName(name:*):void;
  native AS3 function localName():Object;
  native AS3 function attributes():XMLList;

  native AS3 function processingInstructions(name:* = "*"):XMLList;
  native AS3 function setNamespace(ns:*):void;
  native AS3 function namespace(prefix:* = null):*;
  native AS3 function child(propertyName:*):XMLList;
  native AS3 function childIndex():int;

  native AS3 function contains(value:*):Boolean;
  native AS3 function appendChild(child:*):XML;
  native AS3 function hasComplexContent():Boolean;
  native AS3 function descendants(name:* = "*"):XMLList;
  native AS3 function length():int;

  native AS3 function valueOf():XML;
  native AS3 function parent():*;
  native private function _namespace(prefix:*,argc:int):*;
  native AS3 function toString():String;
  native AS3 function hasSimpleContent():Boolean;

  native AS3 function prependChild(value:*):XML;
  native AS3 function setName(name:*):void;
  native AS3 function notification():Function;
  native AS3 function comments():XMLList;
  native AS3 function copy():XML;

  native AS3 function nodeKind():String;
  native AS3 function elements(name:* = "*"):XMLList;
  native AS3 function insertChildAfter(child1:*,child2:*):*;
  native AS3 function addNamespace(ns:*):XML;
  native AS3 function namespaceDeclarations():Array;

  native AS3 function text():XMLList;
  native AS3 function attribute(arg:*):XMLList;
  native AS3 function children():XMLList;
  static native AS3 final function settings():Object;
  static native public final function set prettyIndent(newIndent:int):*;

  static native AS3 final function setSettings(o:Object = null):void;
  static native public final function get ignoreComments():Boolean;
  static native public final function get prettyIndent():int;
  static native public final function get ignoreProcessingInstructions():Boolean;
  static native public final function get prettyPrinting():Boolean;

  static native public const length:* = 1;
  static native public final function get ignoreWhitespace():Boolean;
  static native public final function set ignoreComments(newIgnore:Boolean):*;
  static native public final function set ignoreProcessingInstructions(newIgnore:Boolean):*;
  static native public final function set prettyPrinting(newPretty:Boolean):*;

  static native AS3 final function defaultSettings():Object;
  static native public final function set ignoreWhitespace(newIgnore:Boolean):*;
  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}


[native(cls="RegExpClass",gc="exact",instance="RegExpObject",methods="auto",customconstruct="true")]
public dynamic class RegExp extends Object
{
  native public function RegExp(pattern:* = null,options:* = null):*;
  native AS3 function exec(s:String = ""):*;

  native public function get ignoreCase():Boolean;
  native public function get global():Boolean;
  native public function set lastIndex(i:int):*;
  native public function get extended():Boolean;
  native AS3 function test(s:String = ""):Boolean;

  native public function get source():String;
  native public function get lastIndex():int;
  native public function get multiline():Boolean;
  native public function get dotall():Boolean;
  static native public const length:int = 1;

  static native private const AS3:* = "http://adobe.com/AS3/2006/builtin";
}


[native(cls="URIErrorClass",gc="exact",instance="URIErrorObject",methods="auto")]
public dynamic class URIError extends Error
{
  native public function URIError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

[native(cls="ArgumentErrorClass",gc="exact",instance="ArgumentErrorObject",methods="auto")]
public dynamic class ArgumentError extends Error
{
  native public function ArgumentError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

[native(cls="UninitializedErrorClass",gc="exact",instance="UninitializedErrorObject",methods="auto")]
public dynamic class UninitializedError extends Error
{

  native public function UninitializedError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

[native(cls="DefinitionErrorClass",gc="exact",instance="DefinitionErrorObject",methods="auto")]
public dynamic class DefinitionError extends Error
{
  native public function DefinitionError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

public dynamic class flash.errors.MemoryError extends Error
{
  native public function MemoryError(message:String = "",id:int = 0):*;
}

public dynamic class flash.errors.IOError extends Error
{

  native public function IOError(message:String = "",id:int = 0):*;
}

[native(cls="SecurityErrorClass",gc="exact",instance="SecurityErrorObject",methods="auto")]
public dynamic class SecurityError extends Error
{
  native public function SecurityError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

public dynamic class flash.errors.EOFError extends flash.errors.IOError
{
  native public function EOFError(message:String = "",id:int = 0):*;
}

[native(cls="ReferenceErrorClass",gc="exact",instance="ReferenceErrorObject",methods="auto")]
public dynamic class ReferenceError extends Error
{
  native public function ReferenceError(message:* = "",id:* = 0):*;

  static native public const length:int = 1;
}

[native(cls="EvalErrorClass",gc="exact",instance="EvalErrorObject",methods="auto")]
public dynamic class EvalError extends Error
{
  native public function EvalError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

[native(cls="SyntaxErrorClass",gc="exact",instance="SyntaxErrorObject",methods="auto")]
public dynamic class SyntaxError extends Error
{
  native public function SyntaxError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

[native(cls="TypeErrorClass",gc="exact",instance="TypeErrorObject",methods="auto")]
public dynamic class TypeError extends Error
{

  native public function TypeError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

[native(cls="ErrorClass",gc="exact",instance="ErrorObject",methods="auto")]
public dynamic class Error extends Object
{
  native public function Error(message:* = "",id:* = 0):*;
  native public function getStackTrace():String;
  native private var _errorID:int;

  native public function get errorID():int;
  native public var message:*;
  native public var name:*;
  static native public final function throwError(type:Class,index:uint,... rest):*;
  static native public final function getErrorMessage(index:int):String;

  static native public const length:int = 1;
}

[native(cls="RangeErrorClass",gc="exact",instance="RangeErrorObject",methods="auto")]
public dynamic class RangeError extends Error
{
  native public function RangeError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}

[native(cls="VerifyErrorClass",gc="exact",instance="VerifyErrorObject",methods="auto")]
public dynamic class VerifyError extends Error
{
  native public function VerifyError(message:* = "",id:* = 0):*;
  static native public const length:int = 1;
}


public class guice.GuiceJs extends Object
{

  native public function GuiceJs(loader:guice.loader.SynchronousClassLoader):*;
  native protected var loader:guice.loader.SynchronousClassLoader;
  native public function createInjector(module:guice.GuiceModule):guice.Injector;
  native public function configureInjector(injector:guice.ChildInjector,module:guice.GuiceModule):void;
}


public class guice.resolver.ClassResolver extends Object
{
  native public function ClassResolver(loader:guice.loader.SynchronousClassLoader):*;

  native private var loader:guice.loader.SynchronousClassLoader;
  native public function resolveClassName(qualifiedClassName:String):guice.reflection.TypeDefinition;
  native private function resolveClassDependencies(type:guice.reflection.TypeDefinition):void;
  native private function resolveParentClassFromDefinition(qualifiedClassName:String,classDefinition:String):void;
  native private function findDefinition(qualifiedClassName:String):Object;

  [JavaScriptCode(file="_addDefinition.js")]
  native private function addDefinition(definitionText:String):void;
}


public class guice.reflection.TypeDefinition extends Object
{
  native public function TypeDefinition(clazz:Class):*;
  native private var _type:*;
  native private var _builtIn:Boolean = false;
  native public function get type():*;

  native public function get builtIn():Boolean;
  native public function getClassName():String;
  native public function getSuperClassName():String;
  native public function getClassDependencies():Vector.<String>;
  native private function injectionPoints(injectionType:int):Vector.<guice.reflection.InjectionPoint>;

  native public function getInjectionMethods():Vector.<guice.reflection.MethodInjectionPoint>;
  native public function getInjectionFields():Vector.<guice.reflection.InjectionPoint>;
  native public function getViewFields():Vector.<guice.reflection.InjectionPoint>;
  native public function getConstructorParameters():Vector.<guice.reflection.InjectionPoint>;
  native public function constructorApply(args:Array):Object;

  static native public const Constructor:int = 0;
  static native public const Property:int = 1;
  static native public const Method:int = 2;
  static native public const View:int = 3;
}


[JavaScript(export="false",name="Object",mode="json")]
public dynamic class guice.binding.utility.BindingHashMap extends Object
{
  native public function BindingHashMap():*;
}


[JavaScript(export="false")]
public class randori.jquery.Callbacks extends Object
{

  native public function Callbacks():*;
  native public function add(callbacks:*):Callbacks;
  native public function disable():Callbacks;
  native public function disabled():Boolean;
  native public function empty():Callbacks;

  native public function fire(arguments:*):Callbacks;
  native public function fired():Boolean;
  native public function fireWith(context:Object = null,args:Object = null):Callbacks;
  native public function has(callback:Function):Boolean;
  native public function lock():Callbacks;

  native public function locked():Boolean;
  native public function remove(callbacks:*):Callbacks;
}


[JavaScript(export="false")]
public class randori.jquery.Deferred extends Object
{
  native public function Deferred():*;
  native public function always(alwaysCallbacks1:Function,alwaysCallbacks2:Function = null):Deferred;
  native public function done(doneCallbacks1:Function,doneCallbacks2:Function = null):Deferred;

  native public function fail(failCallbacks1:Function,failCallbacks2:Function = null):Deferred;
  native public function isRejected():Boolean;
  native public function isResolved():Boolean;
  native public function notify(args:Object):Deferred;
  native public function notifyWith(context:Object,args:Object = null):Deferred;

  [JavaScriptMethod(name="pipe")]
  native public function pipe11(doneFilter:Function = null,failFilter:Function = null):randori.jquery.Promise;
  [JavaScriptMethod(name="pipe")]
  native public function pipe22(doneFilter:Function = null,failFilter:Function = null,progressFilter:Function = null):randori.jquery.Promise;
  native public function progress(progressCallbacks:Function):Deferred;
  native public function promise(target:Object = null):randori.jquery.Promise;
  native public function reject(args:Object):Deferred;

  native public function rejectWith(context:Object,args:Array = null):Deferred;
  native public function resolve(args:Object):Deferred;
  native public function resolveWith(context:Object,args:Array = null):Deferred;
  native public function state():String;
  [JavaScriptMethod(name="then")]
  native public function then11(doneFilter:Function,failFilter:Function = null,progressFilter:Function = null):randori.jquery.Promise;

  [JavaScriptMethod(name="then")]
  native public function then22(doneCallbacks:Function,failCallbacks:Function):randori.jquery.Promise;
  [JavaScriptMethod(name="then")]
  native public function then33(doneCallbacks:Function,failCallbacks:Function,progressCallbacks:Function = null):randori.jquery.Promise;
  native public function pipe(... rest):*;
  native public function then(... rest):*;
}


[JavaScript(export="false")]
public class randori.jquery.Event extends Object
{
  native public function Event():*;

  native public var currentTarget:randori.webkit.dom.Element;
  native public var data:Object;
  native public var delegateTarget:randori.webkit.dom.Element;
  native public var metaKey:Boolean;
  native public var namespace_:String;

  native public var pageX:Number;
  native public var pageY:Number;
  native public var relatedTarget:randori.webkit.dom.Element;
  native public var result:Object;
  native public var target:randori.webkit.dom.Element;

  native public var timeStamp:Number;
  native public var type:String;
  native public var which:Number;
  native public function isDefaultPrevented():Boolean;
  native public function isImmediatePropagationStopped():Boolean;

  native public function isPropagationStopped():Boolean;
  native public function preventDefault():void;
  native public function stopImmediatePropagation():void;
  native public function stopPropagation():void;
}


[JavaScript(export="false")]
public class randori.jquery.OptionsArgument extends Object
{
  native public function OptionsArgument():*;

  native public var duration:*;
  native public var easing:String;
  native public var complete:Function;
  native public var step:Function;
  native public var queue:Boolean;

  native public var specialEasing:Object;
}


[JavaScript(export="false")]
public class randori.jquery.Promise extends Object
{
  native public function Promise():*;
  native public function promise(type:String = "",target:Object = null):Promise;
  [JavaScriptMethod(name="then")]
  native public function then11(doneFilter:Function,failFilter:Function = null,progressFilter:Function = null):Promise;
  [JavaScriptMethod(name="then")]
  native public function then22(doneCallbacks:Function,failCallbacks:Function):Promise;

  [JavaScriptMethod(name="then")]
  native public function then33(doneCallbacks:Function,failCallbacks:Function,progressCallbacks:Function = null):Promise;
  native public function done(doneCallbacks1:Function,doneCallbacks2:Function = null):randori.jquery.Deferred;
  native public function fail(failCallbacks1:Function,failCallbacks2:Function = null):randori.jquery.Deferred;
  native public function always(alwaysCallbacks1:Function,alwaysCallbacks2:Function = null):randori.jquery.Deferred;
  [JavaScriptMethod(name="pipe")]
  native public function pipe11(doneFilter:Function = null,failFilter:Function = null):Promise;

  [JavaScriptMethod(name="pipe")]
  native public function pipe22(doneFilter:Function = null,failFilter:Function = null,progressFilter:Function = null):Promise;
  native public function progress(progressCallbacks:Function):randori.jquery.Deferred;
  native public function state():String;
  native public function then(... rest):*;
  native public function pipe(... rest):*;
}


[JavaScript(export="false")]
public class randori.jquery.SettingsObject extends Object
{

  native public function SettingsObject():*;
  native public var accepts:Object;
  native public var async:Boolean;
  native public var beforeSend:Function;
  native public var cache:Boolean;

  native public var complete:Function;
  native public var contents:Object;
  native public var contentType:String;
  native public var context:Object;
  native public var converters:Object;

  native public var crossDomain:Boolean;
  native public var data:*;
  native public var dataFilter:Function;
  native public var dataType:String;
  native public var error:Function;

  native public var global:Boolean;
  native public var headers:Object;
  native public var ifModified:Boolean;
  native public var isLocal:Boolean;
  native public var jsonp:String;

  native public var jsonpCallback:*;
  native public var mimeType:String;
  native public var password:String;
  native public var processData:Boolean;
  native public var scriptCharset:String;

  native public var statusCode:Object;
  native public var success:Function;
  native public var timeout:Number;
  native public var traditional:Boolean;
  native public var type:String;

  native public var url:String;
  native public var username:String;
  native public var xhr:Function;
  native public var xhrFields:Object;
}


[JavaScript(export="false",nativecondition="CSS3_CONDITIONAL_RULES",name="CSS")]
public class randori.webkit.css.CSS extends Object
{
  native public function CSS():*;

  native public function supports(property:String,value:String):Boolean;
}


[JavaScript(export="false",name="CSSRule")]
public class randori.webkit.css.CSSRule extends Object
{
  native public function CSSRule():*;
  native public function get type():uint;
  native public function get cssText():String;
  native public function set cssText(value:String):void;

  native public function get parentStyleSheet():randori.webkit.css.CSSStyleSheet;
  native public function get parentRule():CSSRule;
  static native public const UNKNOWN_RULE:uint = 0;
  static native public const STYLE_RULE:uint = 1;
  static native public const CHARSET_RULE:uint = 2;

  static native public const IMPORT_RULE:uint = 3;
  static native public const MEDIA_RULE:uint = 4;
  static native public const FONT_FACE_RULE:uint = 5;
  static native public const PAGE_RULE:uint = 6;
}


[JavaScript(export="false",name="CSSCharsetRule")]
public class randori.webkit.css.CSSCharsetRule extends randori.webkit.css.CSSRule
{
  native public function CSSCharsetRule():*;

  native public function get encoding():String;
  native public function set encoding(value:String):void;
}


[JavaScript(export="false",name="CSSFontFaceRule")]
public class randori.webkit.css.CSSFontFaceRule extends randori.webkit.css.CSSRule
{
  native public function CSSFontFaceRule():*;
  native public function get style():randori.webkit.css.CSSStyleDeclaration;
}


[JavaScript(export="false",name="CSSImportRule")]
public class randori.webkit.css.CSSImportRule extends randori.webkit.css.CSSRule
{
  native public function CSSImportRule():*;

  native public function get href():String;
  native public function get media():randori.webkit.css.MediaList;
  native public function get styleSheet():randori.webkit.css.CSSStyleSheet;
}


[JavaScript(export="false",name="CSSMediaRule")]
public class randori.webkit.css.CSSMediaRule extends randori.webkit.css.CSSRule
{
  native public function CSSMediaRule():*;
  native public function get media():randori.webkit.css.MediaList;

  native public function get cssRules():randori.webkit.css.CSSRuleList;
  native public function insertRule(rule:String = "",index:uint = null):uint;
  native public function deleteRule(index:uint = null):void;
}


[JavaScript(export="false",name="CSSPageRule")]
public class randori.webkit.css.CSSPageRule extends randori.webkit.css.CSSRule
{
  native public function CSSPageRule():*;
  native public function get selectorText():String;

  native public function set selectorText(value:String):void;
  native public function get style():randori.webkit.css.CSSStyleDeclaration;
}


[JavaScript(export="false",name="CSSValue")]
public class randori.webkit.css.CSSValue extends Object
{
  native public function CSSValue():*;
  native public function get cssText():String;
  native public function set cssText(value:String):void;

  native public function get cssValueType():uint;
  static native public const CSS_INHERIT:uint = 0;
  static native public const CSS_PRIMITIVE_VALUE:uint = 1;
  static native public const CSS_VALUE_LIST:uint = 2;
  static native public const CSS_CUSTOM:uint = 3;
}


[JavaScript(export="false",name="CSSPrimitiveValue")]
public class randori.webkit.css.CSSPrimitiveValue extends randori.webkit.css.CSSValue
{

  native public function CSSPrimitiveValue():*;
  native public function get primitiveType():uint;
  native public function setFloatValue(unitType:uint = null,floatValue:Number = 0):void;
  native public function getFloatValue(unitType:uint = null):Number;
  native public function setStringValue(stringType:uint = null,stringValue:String = ""):void;

  native public function getStringValue():String;
  native public function getCounterValue():randori.webkit.css.Counter;
  native public function getRectValue():randori.webkit.css.Rect;
  native public function getRGBColorValue():randori.webkit.css.RGBColor;
  static native public const CSS_UNKNOWN:uint = 0;

  static native public const CSS_NUMBER:uint = 1;
  static native public const CSS_PERCENTAGE:uint = 2;
  static native public const CSS_EMS:uint = 3;
  static native public const CSS_EXS:uint = 4;
  static native public const CSS_PX:uint = 5;

  static native public const CSS_CM:uint = 6;
  static native public const CSS_MM:uint = 7;
  static native public const CSS_IN:uint = 8;
  static native public const CSS_PT:uint = 9;
  static native public const CSS_PC:uint = 10;

  static native public const CSS_DEG:uint = 11;
  static native public const CSS_RAD:uint = 12;
  static native public const CSS_GRAD:uint = 13;
  static native public const CSS_MS:uint = 14;
  static native public const CSS_S:uint = 15;

  static native public const CSS_HZ:uint = 16;
  static native public const CSS_KHZ:uint = 17;
  static native public const CSS_DIMENSION:uint = 18;
  static native public const CSS_STRING:uint = 19;
  static native public const CSS_URI:uint = 20;

  static native public const CSS_IDENT:uint = 21;
  static native public const CSS_ATTR:uint = 22;
  static native public const CSS_COUNTER:uint = 23;
  static native public const CSS_RECT:uint = 24;
  static native public const CSS_RGBCOLOR:uint = 25;

  static native public const CSS_VW:uint = 26;
  static native public const CSS_VH:uint = 27;
  static native public const CSS_VMIN:uint = 28;
  static native public const CSS_VMAX:uint = 29;
}


[JavaScript(export="false",name="CSSRuleList")]
public dynamic class randori.webkit.css.CSSRuleList extends Object
{
  native public function CSSRuleList():*;

  native public function get length():uint;
}


[JavaScript(export="false",name="CSSStyleDeclaration")]
public dynamic class randori.webkit.css.CSSStyleDeclaration extends Object
{
  native public function CSSStyleDeclaration():*;
  native public function get cssText():String;
  native public function set cssText(value:String):void;
  native public function getPropertyValue(propertyName:String = ""):String;

  native public function getPropertyCSSValue(propertyName:String = ""):randori.webkit.css.CSSValue;
  native public function removeProperty(propertyName:String = ""):String;
  native public function getPropertyPriority(propertyName:String = ""):String;
  native public function setProperty(propertyName:String = "",value:String = "",priority:String = ""):void;
  native public function get length():uint;

  native public function get parentRule():randori.webkit.css.CSSRule;
  native public function getPropertyShorthand(propertyName:String = ""):String;
  native public function isPropertyImplicit(propertyName:String = ""):Boolean;
}


[JavaScript(export="false",name="CSSStyleRule")]
public class randori.webkit.css.CSSStyleRule extends randori.webkit.css.CSSRule
{
  native public function CSSStyleRule():*;
  native public function get selectorText():String;

  native public function set selectorText(value:String):void;
  native public function get style():randori.webkit.css.CSSStyleDeclaration;
}


[JavaScript(export="false",name="StyleSheet")]
public class randori.webkit.css.StyleSheet extends Object
{
  native public function StyleSheet():*;
  native public function get type():String;
  native public function get disabled():Boolean;

  native public function set disabled(value:Boolean):void;
  native public function get ownerNode():randori.webkit.dom.Node;
  native public function get parentStyleSheet():StyleSheet;
  native public function get href():String;
  native public function get title():String;

  native public function get media():randori.webkit.css.MediaList;
}


[JavaScript(export="false",name="CSSStyleSheet")]
public class randori.webkit.css.CSSStyleSheet extends randori.webkit.css.StyleSheet
{
  native public function CSSStyleSheet():*;
  native public function get ownerRule():randori.webkit.css.CSSRule;
  native public function get cssRules():randori.webkit.css.CSSRuleList;
  native public function insertRule(rule:String = "",index:uint = null):uint;

  native public function deleteRule(index:uint = null):void;
  native public function get rules():randori.webkit.css.CSSRuleList;
  native public function addRule(selector:String = "",style:String = "",index:uint = 0):uint;
  native public function removeRule(index:uint = null):void;
}


[JavaScript(export="false",name="CSSValueList")]
public dynamic class randori.webkit.css.CSSValueList extends randori.webkit.css.CSSValue
{
  native public function CSSValueList():*;

  native public function get length():uint;
}


[JavaScript(export="false",name="Counter")]
public class randori.webkit.css.Counter extends Object
{
  native public function Counter():*;
  native public function get identifier():String;
  native public function get listStyle():String;
  native public function get separator():String;
}


[JavaScript(export="false",name="MediaList")]
public dynamic class randori.webkit.css.MediaList extends Object
{

  native public function MediaList():*;
  native public function get mediaText():String;
  native public function set mediaText(value:String):void;
  native public function get length():uint;
  native public function deleteMedium(oldMedium:String = ""):void;

  native public function appendMedium(newMedium:String = ""):void;
}


[JavaScript(export="false",name="MediaQueryList")]
public class randori.webkit.css.MediaQueryList extends Object
{
  native public function MediaQueryList():*;
  native public function get media():String;
  native public function get matches():Boolean;
  native public function addListener(listener:randori.webkit.css.MediaQueryListListener = null):void;

  native public function removeListener(listener:randori.webkit.css.MediaQueryListListener = null):void;
}


[JavaScript(export="false",name="RGBColor")]
public class randori.webkit.css.RGBColor extends Object
{
  native public function RGBColor():*;
  native public function get red():randori.webkit.css.CSSPrimitiveValue;
  native public function get green():randori.webkit.css.CSSPrimitiveValue;
  native public function get blue():randori.webkit.css.CSSPrimitiveValue;
}


[JavaScript(export="false",name="Rect")]
public class randori.webkit.css.Rect extends Object
{

  native public function Rect():*;
  native public function get top():randori.webkit.css.CSSPrimitiveValue;
  native public function get right():randori.webkit.css.CSSPrimitiveValue;
  native public function get bottom():randori.webkit.css.CSSPrimitiveValue;
  native public function get left():randori.webkit.css.CSSPrimitiveValue;
}


[JavaScript(export="false",name="StyleMedia")]
public class randori.webkit.css.StyleMedia extends Object
{

  native public function StyleMedia():*;
  native public function get type():String;
  native public function matchMedium(mediaquery:String = ""):Boolean;
}


[JavaScript(export="false",name="StyleSheetList")]
public dynamic class randori.webkit.css.StyleSheetList extends Object
{
  native public function StyleSheetList():*;
  native public function get length():uint;
}


[JavaScript(export="false",name="Attr")]
public class randori.webkit.dom.Attr extends randori.webkit.dom.Node
{

  native public function Attr():*;
  native public function get name():String;
  native public function get specified():Boolean;
  native public function get value():String;
  native public function set value(value:String):void;

  native public function get ownerElement():randori.webkit.dom.Element;
  native public function get isId():Boolean;
}


[JavaScript(export="false",nativecondition="REQUEST_AUTOCOMPLETE",name="AutocompleteErrorEvent")]
public class randori.webkit.dom.AutocompleteErrorEvent extends randori.webkit.dom.DomEvent
{
  native public function AutocompleteErrorEvent():*;
  native public function get reason():String;
}


[JavaScript(export="false",name="BeforeLoadEvent")]
public class randori.webkit.dom.BeforeLoadEvent extends randori.webkit.dom.DomEvent
{
  native public function BeforeLoadEvent():*;

  native public function get url():String;
}


[JavaScript(export="false",name="CharacterData")]
public class randori.webkit.dom.CharacterData extends randori.webkit.dom.Node
{
  native public function CharacterData():*;
  native public function get data():String;
  native public function set data(value:String):void;
  native public function get length():uint;

  native public function substringData(offset:uint = null,length:uint = null):String;
  native public function appendData(data:String = ""):void;
  native public function insertData(offset:uint = null,data:String = ""):void;
  native public function deleteData(offset:uint = null,length:uint = null):void;
  native public function replaceData(offset:uint = null,length:uint = null,data:String = ""):void;

  native public function remove():void;
}


[JavaScript(export="false",name="Text")]
public class randori.webkit.dom.Text extends randori.webkit.dom.CharacterData
{
  native public function Text():*;
  native public function splitText(offset:uint = null):Text;
  native public function get wholeText():String;
  native public function replaceWholeText(content:String = ""):Text;
}


[JavaScript(export="false",name="CDATASection")]
public class randori.webkit.dom.CDATASection extends randori.webkit.dom.Text
{

  native public function CDATASection():*;
}


[JavaScript(export="false",name="ClientRect")]
public class randori.webkit.dom.ClientRect extends Object
{
  native public function ClientRect():*;
  native public function get top():Number;
  native public function get right():Number;
  native public function get bottom():Number;

  native public function get left():Number;
  native public function get width():Number;
  native public function get height():Number;
}


[JavaScript(export="false",name="ClientRectList")]
public dynamic class randori.webkit.dom.ClientRectList extends Object
{
  native public function ClientRectList():*;
  native public function get length():uint;
}


[JavaScript(export="false",name="Clipboard")]
public class randori.webkit.dom.Clipboard extends Object
{

  native public function Clipboard():*;
  native public function get dropEffect():String;
  native public function set dropEffect(value:String):void;
  native public function get effectAllowed():String;
  native public function set effectAllowed(value:String):void;

  native public function get types():Array;
  native public function get files():randori.webkit.fileapi.FileList;
  native public function clearData(type:String = ""):void;
  native public function getData(type:String):String;
  native public function setData(type:String,data:String):Boolean;

  native public function setDragImage(image:randori.webkit.html.HTMLImageElement,x:uint,y:uint):void;
  native public function get items():randori.webkit.dom.DataTransferItemList;
}


[JavaScript(export="false",name="Comment")]
public class randori.webkit.dom.Comment extends randori.webkit.dom.CharacterData
{
  native public function Comment():*;
}


[JavaScript(export="false",name="UIEvent")]
public class randori.webkit.dom.UIEvent extends randori.webkit.dom.DomEvent
{
  native public function UIEvent():*;
  native public function get view():randori.webkit.page.Window;

  native public function get detail():uint;
  native public function initUIEvent(type:String = "",canBubble:Boolean = null,cancelable:Boolean = null,view:randori.webkit.page.Window = null,detail:uint = null):void;
  native public function get keyCode():uint;
  native public function get charCode():uint;
  native public function get layerX():uint;

  native public function get layerY():uint;
  native public function get pageX():uint;
  native public function get pageY():uint;
  native public function get which():uint;
}


[JavaScript(export="false",name="CompositionEvent")]
public class randori.webkit.dom.CompositionEvent extends randori.webkit.dom.UIEvent
{
  native public function CompositionEvent():*;

  native public function get data():String;
  native public function initCompositionEvent(typeArg:String = "",canBubbleArg:Boolean = null,cancelableArg:Boolean = null,viewArg:randori.webkit.page.Window = null,dataArg:String = ""):void;
}


[JavaScript(export="false",name="CustomEvent")]
public class randori.webkit.dom.CustomEvent extends randori.webkit.dom.DomEvent
{
  native public function CustomEvent():*;
  native public function get detail():*;
  native public function initCustomEvent(typeArg:String = "",canBubbleArg:Boolean = null,cancelableArg:Boolean = null,detailArg:* = null):void;
}


[JavaScript(export="false",name="DOMImplementation")]
public class randori.webkit.dom.DOMImplementation extends Object
{

  native public function DOMImplementation():*;
  native public function hasFeature(feature:String = "",version:String = ""):Boolean;
  native public function createDocumentType(qualifiedName:String = "",publicId:String = "",systemId:String = ""):randori.webkit.dom.DocumentType;
  native public function createDocument(namespaceURI:String = "",qualifiedName:String = "",doctype:randori.webkit.dom.DocumentType = null):randori.webkit.dom.Document;
  native public function createCSSStyleSheet(title:String = "",media:String = ""):randori.webkit.css.CSSStyleSheet;

  native public function createHTMLDocument(title:String = null):randori.webkit.html.HTMLDocument;
}


[JavaScript(export="false",name="DOMStringList")]
public dynamic class randori.webkit.dom.DOMStringList extends Object
{
  native public function DOMStringList():*;
  native public function get length():uint;
  native public function contains(string:String = ""):Boolean;
}


[JavaScript(export="false",name="DOMStringMap")]
public class randori.webkit.dom.DOMStringMap extends Object
{
  native public function DOMStringMap():*;
}


[JavaScript(export="false",nativecondition="DEVICE_ORIENTATION",name="DeviceMotionEvent")]
public class randori.webkit.dom.DeviceMotionEvent extends randori.webkit.dom.DomEvent
{

  native public function DeviceMotionEvent():*;
  native public function get acceleration():Object;
  native public function get accelerationIncludingGravity():Object;
  native public function get rotationRate():Object;
  native public function get interval():Number;

  native public function initDeviceMotionEvent(type:String = "",bubbles:Boolean = null,cancelable:Boolean = null,acceleration:Object = null,accelerationIncludingGravity:Object = null,rotationRate:Object = null,interval:Number = 0):void;
}


[JavaScript(export="false",nativecondition="DEVICE_ORIENTATION",name="DeviceOrientationEvent")]
public class randori.webkit.dom.DeviceOrientationEvent extends randori.webkit.dom.DomEvent
{
  native public function DeviceOrientationEvent():*;
  native public function get alpha():Number;
  native public function get beta():Number;
  native public function get gamma():Number;

  native public function get absolute():Boolean;
  native public function initDeviceOrientationEvent(type:String = "",bubbles:Boolean = null,cancelable:Boolean = null,alpha:Number = 0,beta:Number = 0,gamma:Number = 0,absolute:Boolean = null):void;
}


[JavaScript(export="false",name="Document")]
public class randori.webkit.dom.Document extends randori.webkit.dom.Node
{
  native public function Document():*;
  native public function get doctype():randori.webkit.dom.DocumentType;
  native public function get implementation():randori.webkit.dom.DOMImplementation;

  native public function get documentElement():randori.webkit.dom.Element;
  native public function createElement(tagName:String = ""):randori.webkit.dom.Element;
  native public function createDocumentFragment():randori.webkit.dom.DocumentFragment;
  native public function createTextNode(data:String = ""):randori.webkit.dom.Text;
  native public function createComment(data:String = ""):randori.webkit.dom.Comment;

  native public function createCDATASection(data:String = ""):randori.webkit.dom.CDATASection;
  native public function createProcessingInstruction(target:String = "",data:String = ""):randori.webkit.dom.ProcessingInstruction;
  native public function createAttribute(name:String = ""):randori.webkit.dom.Attr;
  native public function createEntityReference(name:String = ""):randori.webkit.dom.EntityReference;
  native public function getElementsByTagName(tagname:String = ""):randori.webkit.dom.NodeList;

  native public function importNode(importedNode:randori.webkit.dom.Node = null,deep:Boolean = false):randori.webkit.dom.Node;
  native public function createElementNS(namespaceURI:String = "",qualifiedName:String = ""):randori.webkit.dom.Element;
  native public function createAttributeNS(namespaceURI:String = "",qualifiedName:String = ""):randori.webkit.dom.Attr;
  native public function getElementsByTagNameNS(namespaceURI:String = "",localName:String = ""):randori.webkit.dom.NodeList;
  native public function getElementById(elementId:String = ""):randori.webkit.dom.Element;

  native public function get inputEncoding():String;
  native public function get xmlEncoding():String;
  native public function get xmlVersion():String;
  native public function set xmlVersion(value:String):void;
  native public function get xmlStandalone():Boolean;

  native public function set xmlStandalone(value:Boolean):void;
  native public function adoptNode(source:randori.webkit.dom.Node = null):randori.webkit.dom.Node;
  native public function get documentURI():String;
  native public function createEvent(eventType:String = ""):randori.webkit.dom.DomEvent;
  native public function createRange():randori.webkit.dom.Range;

  native public function createNodeIterator(root:randori.webkit.dom.Node = null,whatToShow:uint = null,filter:randori.webkit.dom.NodeFilter = null,expandEntityReferences:Boolean = null):randori.webkit.dom.NodeIterator;
  native public function createTreeWalker(root:randori.webkit.dom.Node = null,whatToShow:uint = null,filter:randori.webkit.dom.NodeFilter = null,expandEntityReferences:Boolean = null):randori.webkit.dom.TreeWalker;
  native public function get defaultView():randori.webkit.page.Window;
  native public function get styleSheets():randori.webkit.css.StyleSheetList;
  native public function getOverrideStyle(element:randori.webkit.dom.Element = null,pseudoElement:String = ""):randori.webkit.css.CSSStyleDeclaration;

  native public function createExpression(expression:String = "",resolver:randori.webkit.xml.XPathNSResolver = null):randori.webkit.xml.XPathExpression;
  native public function createNSResolver(nodeResolver:randori.webkit.dom.Node):randori.webkit.xml.XPathNSResolver;
  native public function evaluate(expression:String = "",contextNode:randori.webkit.dom.Node = null,resolver:randori.webkit.xml.XPathNSResolver = null,type:uint = null,inResult:randori.webkit.xml.XPathResult = null):randori.webkit.xml.XPathResult;
  native public function execCommand(command:String = "",userInterface:Boolean = null,value:String = ""):Boolean;
  native public function queryCommandEnabled(command:String = ""):Boolean;

  native public function queryCommandIndeterm(command:String = ""):Boolean;
  native public function queryCommandState(command:String = ""):Boolean;
  native public function queryCommandSupported(command:String = ""):Boolean;
  native public function queryCommandValue(command:String = ""):String;
  native public function get title():String;

  native public function set title(value:String):void;
  native public function get referrer():String;
  native public function get domain():String;
  native public function set domain(value:String):void;
  [JavaScriptProperty(name="URL")]
  native public function get URL_():String;

  native public function get cookie():String;
  native public function set cookie(value:String):void;
  native public function get body():randori.webkit.html.HTMLElement;
  native public function set body(value:randori.webkit.html.HTMLElement):void;
  native public function get head():randori.webkit.html.HTMLHeadElement;

  native public function get images():randori.webkit.html.HTMLCollection;
  native public function get applets():randori.webkit.html.HTMLCollection;
  native public function get links():randori.webkit.html.HTMLCollection;
  native public function get forms():randori.webkit.html.HTMLCollection;
  native public function get anchors():randori.webkit.html.HTMLCollection;

  native public function get lastModified():String;
  native public function getElementsByName(elementName:String = ""):randori.webkit.dom.NodeList;
  native public function get location():randori.webkit.page.Location;
  native public function set location(value:randori.webkit.page.Location):void;
  native public function get charset():String;

  native public function set charset(value:String):void;
  native public function get defaultCharset():String;
  native public function get readyState():String;
  native public function elementFromPoint(x:uint = null,y:uint = null):randori.webkit.dom.Element;
  native public function caretRangeFromPoint(x:uint = null,y:uint = null):randori.webkit.dom.Range;

  native public function getSelection():randori.webkit.page.Selection;
  native public function get characterSet():String;
  native public function get preferredStylesheetSet():String;
  native public function get selectedStylesheetSet():String;
  native public function set selectedStylesheetSet(value:String):void;

  native public function getCSSCanvasContext(contextId:String,name:String,width:uint,height:uint):randori.webkit.html.canvas.CanvasRenderingContext;
  native public function getElementsByClassName(tagname:String = ""):randori.webkit.dom.NodeList;
  native public function get compatMode():String;
  native public function querySelector(selectors:String):randori.webkit.dom.Element;
  native public function querySelectorAll(selectors:String):randori.webkit.dom.NodeList;

  native public function get onabort():Function;
  native public function set onabort(value:Function):void;
  native public function get onblur():Function;
  native public function set onblur(value:Function):void;
  native public function get onchange():Function;

  native public function set onchange(value:Function):void;
  native public function get onclick():Function;
  native public function set onclick(value:Function):void;
  native public function get oncontextmenu():Function;
  native public function set oncontextmenu(value:Function):void;

  native public function get ondblclick():Function;
  native public function set ondblclick(value:Function):void;
  native public function get ondrag():Function;
  native public function set ondrag(value:Function):void;
  native public function get ondragend():Function;

  native public function set ondragend(value:Function):void;
  native public function get ondragenter():Function;
  native public function set ondragenter(value:Function):void;
  native public function get ondragleave():Function;
  native public function set ondragleave(value:Function):void;

  native public function get ondragover():Function;
  native public function set ondragover(value:Function):void;
  native public function get ondragstart():Function;
  native public function set ondragstart(value:Function):void;
  native public function get ondrop():Function;

  native public function set ondrop(value:Function):void;
  native public function get onerror():Function;
  native public function set onerror(value:Function):void;
  native public function get onfocus():Function;
  native public function set onfocus(value:Function):void;

  native public function get oninput():Function;
  native public function set oninput(value:Function):void;
  native public function get oninvalid():Function;
  native public function set oninvalid(value:Function):void;
  native public function get onkeydown():Function;

  native public function set onkeydown(value:Function):void;
  native public function get onkeypress():Function;
  native public function set onkeypress(value:Function):void;
  native public function get onkeyup():Function;
  native public function set onkeyup(value:Function):void;

  native public function get onload():Function;
  native public function set onload(value:Function):void;
  native public function get onmousedown():Function;
  native public function set onmousedown(value:Function):void;
  native public function get onmousemove():Function;

  native public function set onmousemove(value:Function):void;
  native public function get onmouseout():Function;
  native public function set onmouseout(value:Function):void;
  native public function get onmouseover():Function;
  native public function set onmouseover(value:Function):void;

  native public function get onmouseup():Function;
  native public function set onmouseup(value:Function):void;
  native public function get onmousewheel():Function;
  native public function set onmousewheel(value:Function):void;
  native public function get onreadystatechange():Function;

  native public function set onreadystatechange(value:Function):void;
  native public function get onscroll():Function;
  native public function set onscroll(value:Function):void;
  native public function get onselect():Function;
  native public function set onselect(value:Function):void;

  native public function get onsubmit():Function;
  native public function set onsubmit(value:Function):void;
  native public function get onbeforecut():Function;
  native public function set onbeforecut(value:Function):void;
  native public function get oncut():Function;

  native public function set oncut(value:Function):void;
  native public function get onbeforecopy():Function;
  native public function set onbeforecopy(value:Function):void;
  native public function get oncopy():Function;
  native public function set oncopy(value:Function):void;

  native public function get onbeforepaste():Function;
  native public function set onbeforepaste(value:Function):void;
  native public function get onpaste():Function;
  native public function set onpaste(value:Function):void;
  native public function get onreset():Function;

  native public function set onreset(value:Function):void;
  native public function get onsearch():Function;
  native public function set onsearch(value:Function):void;
  native public function get onselectstart():Function;
  native public function set onselectstart(value:Function):void;

  native public function get onselectionchange():Function;
  native public function set onselectionchange(value:Function):void;
  native public function get ontouchstart():Function;
  native public function set ontouchstart(value:Function):void;
  native public function get ontouchmove():Function;

  native public function set ontouchmove(value:Function):void;
  native public function get ontouchend():Function;
  native public function set ontouchend(value:Function):void;
  native public function get ontouchcancel():Function;
  native public function set ontouchcancel(value:Function):void;

  native public function get securityPolicy():randori.webkit.page.SecurityPolicy;
}


[JavaScript(export="false",name="DocumentFragment")]
public class randori.webkit.dom.DocumentFragment extends randori.webkit.dom.Node
{
  native public function DocumentFragment():*;
  native public function querySelector(selectors:String):randori.webkit.dom.Element;
  native public function querySelectorAll(selectors:String):randori.webkit.dom.NodeList;
}


[JavaScript(export="false",name="DocumentType")]
public class randori.webkit.dom.DocumentType extends randori.webkit.dom.Node
{
  native public function DocumentType():*;

  native public function get name():String;
  native public function get entities():randori.webkit.dom.NamedNodeMap;
  native public function get notations():randori.webkit.dom.NamedNodeMap;
  native public function get publicId():String;
  native public function get systemId():String;

  native public function get internalSubset():String;
  native public function remove():void;
}


[JavaScript(export="false",name="Entity")]
public class randori.webkit.dom.Entity extends randori.webkit.dom.Node
{
  native public function Entity():*;
  native public function get publicId():String;
  native public function get systemId():String;

  native public function get notationName():String;
}


[JavaScript(export="false",name="EntityReference")]
public class randori.webkit.dom.EntityReference extends randori.webkit.dom.Node
{
  native public function EntityReference():*;
}


[JavaScript(export="false",name="ErrorEvent")]
public class randori.webkit.dom.ErrorEvent extends randori.webkit.dom.DomEvent
{
  native public function ErrorEvent():*;
  native public function get message():String;
  native public function get filename():String;

  native public function get lineno():uint;
}


[JavaScript(export="false",omitconstructor="true",name="EventTarget")]
public class randori.webkit.dom.EventTarget extends Object
{
  native public function EventTarget():*;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(event:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",name="FocusEvent")]
public class randori.webkit.dom.FocusEvent extends randori.webkit.dom.UIEvent
{

  native public function FocusEvent():*;
  native public function get relatedTarget():randori.webkit.dom.EventTarget;
}


[JavaScript(export="false",name="HashChangeEvent")]
public class randori.webkit.dom.HashChangeEvent extends randori.webkit.dom.DomEvent
{
  native public function HashChangeEvent():*;
  native public function initHashChangeEvent(type:String = "",canBubble:Boolean = null,cancelable:Boolean = null,oldURL:String = "",newURL:String = ""):void;
  native public function get oldURL():String;

  native public function get newURL():String;
}


[JavaScript(export="false",name="KeyboardEvent")]
public class randori.webkit.dom.KeyboardEvent extends randori.webkit.dom.UIEvent
{
  native public function KeyboardEvent():*;
  native public function get keyIdentifier():String;
  native public function get keyLocation():uint;
  native public function get ctrlKey():Boolean;

  native public function get shiftKey():Boolean;
  native public function get altKey():Boolean;
  native public function get metaKey():Boolean;
  native public function get altGraphKey():Boolean;
  native public function initKeyboardEvent(type:String = "",canBubble:Boolean = null,cancelable:Boolean = null,view:randori.webkit.page.Window = null,keyIdentifier:String = "",keyLocation:uint = null,ctrlKey:Boolean = null,altKey:Boolean = null,shiftKey:Boolean = null,metaKey:Boolean = null,altGraphKey:Boolean = null):void;
}


[JavaScript(export="false",name="MessageEvent")]
public class randori.webkit.dom.MessageEvent extends randori.webkit.dom.DomEvent
{

  native public function MessageEvent():*;
  native public function get origin():String;
  native public function get lastEventId():String;
  native public function get source():randori.webkit.page.Window;
  native public function get data():*;

  native public function get ports():Array;
  native public function initMessageEvent(typeArg:String = "",canBubbleArg:Boolean = null,cancelableArg:Boolean = null,dataArg:* = null,originArg:String = "",lastEventIdArg:String = "",sourceArg:randori.webkit.page.Window = null,messagePorts:Array = null):void;
}


[JavaScript(export="false",name="MouseEvent")]
public class randori.webkit.dom.MouseEvent extends randori.webkit.dom.UIEvent
{
  native public function MouseEvent():*;
  native public function get screenX():uint;
  native public function get screenY():uint;

  native public function get clientX():uint;
  native public function get clientY():uint;
  native public function get ctrlKey():Boolean;
  native public function get shiftKey():Boolean;
  native public function get altKey():Boolean;

  native public function get metaKey():Boolean;
  native public function get button():uint;
  native public function get relatedTarget():randori.webkit.dom.EventTarget;
  native public function initMouseEvent(type:String = "",canBubble:Boolean = null,cancelable:Boolean = null,view:randori.webkit.page.Window = null,detail:uint = null,screenX:uint = null,screenY:uint = null,clientX:uint = null,clientY:uint = null,ctrlKey:Boolean = null,altKey:Boolean = null,shiftKey:Boolean = null,metaKey:Boolean = null,button:uint = null,relatedTarget:randori.webkit.dom.EventTarget = null):void;
  native public function get offsetX():uint;

  native public function get offsetY():uint;
  native public function get x():uint;
  native public function get y():uint;
  native public function get fromElement():randori.webkit.dom.Node;
  native public function get toElement():randori.webkit.dom.Node;

  native public function get dataTransfer():randori.webkit.dom.Clipboard;
}


[JavaScript(export="false",name="MutationEvent")]
public class randori.webkit.dom.MutationEvent extends randori.webkit.dom.DomEvent
{
  native public function MutationEvent():*;
  native public function get relatedNode():randori.webkit.dom.Node;
  native public function get prevValue():String;
  native public function get newValue():String;

  native public function get attrName():String;
  native public function get attrChange():uint;
  native public function initMutationEvent(type:String = "",canBubble:Boolean = null,cancelable:Boolean = null,relatedNode:randori.webkit.dom.Node = null,prevValue:String = "",newValue:String = "",attrName:String = "",attrChange:uint = null):void;
  static native public const MODIFICATION:uint = 1;
  static native public const ADDITION:uint = 2;

  static native public const REMOVAL:uint = 3;
}


[JavaScript(export="false",name="MutationObserver")]
public class randori.webkit.dom.MutationObserver extends Object
{
  native public function MutationObserver():*;
  native public function observe(target:randori.webkit.dom.Node,options:Object):void;
  native public function takeRecords():Vector.<randori.webkit.dom.MutationRecord>;
  native public function disconnect():void;
}


[JavaScript(export="false",name="NamedNodeMap")]
public dynamic class randori.webkit.dom.NamedNodeMap extends Object
{

  native public function NamedNodeMap():*;
  native public function getNamedItem(name:String = ""):randori.webkit.dom.Node;
  native public function setNamedItem(node:randori.webkit.dom.Node = null):randori.webkit.dom.Node;
  native public function removeNamedItem(name:String = ""):randori.webkit.dom.Node;
  native public function get length():uint;

  native public function getNamedItemNS(namespaceURI:String = "",localName:String = ""):randori.webkit.dom.Node;
  native public function setNamedItemNS(node:randori.webkit.dom.Node = null):randori.webkit.dom.Node;
  native public function removeNamedItemNS(namespaceURI:String = "",localName:String = ""):randori.webkit.dom.Node;
}


[JavaScript(export="false",name="NodeFilter")]
public class randori.webkit.dom.NodeFilter extends Object
{
  native public function NodeFilter():*;
  native public function acceptNode(n:randori.webkit.dom.Node = null):int;

  static native public const FILTER_ACCEPT:int = 1;
  static native public const FILTER_REJECT:int = 2;
  static native public const FILTER_SKIP:int = 3;
  static native public const SHOW_ALL:uint = 268435455;
  static native public const SHOW_ELEMENT:uint = 1;

  static native public const SHOW_ATTRIBUTE:uint = 2;
  static native public const SHOW_TEXT:uint = 4;
  static native public const SHOW_CDATA_SECTION:uint = 8;
  static native public const SHOW_ENTITY_REFERENCE:uint = 16;
  static native public const SHOW_ENTITY:uint = 32;

  static native public const SHOW_PROCESSING_INSTRUCTION:uint = 64;
  static native public const SHOW_COMMENT:uint = 128;
  static native public const SHOW_DOCUMENT:uint = 256;
  static native public const SHOW_DOCUMENT_TYPE:uint = 512;
  static native public const SHOW_DOCUMENT_FRAGMENT:uint = 1024;

  static native public const SHOW_NOTATION:uint = 2048;
}


[JavaScript(export="false",name="NodeList")]
public dynamic class randori.webkit.dom.NodeList extends Object
{
  native public function NodeList():*;
  native public function get length():uint;
}


[JavaScript(export="false",name="Notation")]
public class randori.webkit.dom.Notation extends randori.webkit.dom.Node
{
  native public function Notation():*;
  native public function get publicId():String;

  native public function get systemId():String;
}


[JavaScript(export="false",name="OverflowEvent")]
public class randori.webkit.dom.OverflowEvent extends randori.webkit.dom.DomEvent
{
  native public function OverflowEvent():*;
  native public function get orient():uint;
  native public function get horizontalOverflow():Boolean;
  native public function get verticalOverflow():Boolean;

  static native public const HORIZONTAL:uint = 0;
  static native public const VERTICAL:uint = 1;
  static native public const BOTH:uint = 2;
}


[JavaScript(export="false",name="PageTransitionEvent")]
public class randori.webkit.dom.PageTransitionEvent extends randori.webkit.dom.DomEvent
{
  native public function PageTransitionEvent():*;
  native public function get persisted():Boolean;
}


[JavaScript(export="false",name="PopStateEvent")]
public class randori.webkit.dom.PopStateEvent extends randori.webkit.dom.DomEvent
{

  native public function PopStateEvent():*;
  native public function get state():*;
}


[JavaScript(export="false",name="ProcessingInstruction")]
public class randori.webkit.dom.ProcessingInstruction extends randori.webkit.dom.Node
{
  native public function ProcessingInstruction():*;
  native public function get target():String;
  native public function get data():String;

  native public function set data(value:String):void;
  native public function get sheet():randori.webkit.css.StyleSheet;
}


[JavaScript(export="false",name="ProgressEvent")]
public class randori.webkit.dom.ProgressEvent extends randori.webkit.dom.DomEvent
{
  native public function ProgressEvent():*;
  native public function get lengthComputable():Boolean;
  native public function get loaded():Number;

  native public function get total():Number;
}


[JavaScript(export="false",nativecondition="MICRODATA",name="PropertyNodeList")]
public class randori.webkit.dom.PropertyNodeList extends randori.webkit.dom.NodeList
{
  native public function PropertyNodeList():*;
  native public function getValues():Vector.<randori.webkit.html.MicroDataItemValue>;
}


[JavaScript(export="false",name="Range")]
public class randori.webkit.dom.Range extends Object
{
  native public function Range():*;
  native public function get startContainer():randori.webkit.dom.Node;

  native public function get startOffset():uint;
  native public function get endContainer():randori.webkit.dom.Node;
  native public function get endOffset():uint;
  native public function get collapsed():Boolean;
  native public function get commonAncestorContainer():randori.webkit.dom.Node;

  native public function setStart(refNode:randori.webkit.dom.Node = null,offset:uint = null):void;
  native public function setEnd(refNode:randori.webkit.dom.Node = null,offset:uint = null):void;
  native public function setStartBefore(refNode:randori.webkit.dom.Node = null):void;
  native public function setStartAfter(refNode:randori.webkit.dom.Node = null):void;
  native public function setEndBefore(refNode:randori.webkit.dom.Node = null):void;

  native public function setEndAfter(refNode:randori.webkit.dom.Node = null):void;
  native public function collapse(toStart:Boolean = null):void;
  native public function selectNode(refNode:randori.webkit.dom.Node = null):void;
  native public function selectNodeContents(refNode:randori.webkit.dom.Node = null):void;
  native public function compareBoundaryPoints(how:Object = null,sourceRange:Range = null):int;

  native public function deleteContents():void;
  native public function extractContents():randori.webkit.dom.DocumentFragment;
  native public function cloneContents():randori.webkit.dom.DocumentFragment;
  native public function insertNode(newNode:randori.webkit.dom.Node = null):void;
  native public function surroundContents(newParent:randori.webkit.dom.Node = null):void;

  native public function cloneRange():Range;
  native public function toString():String;
  native public function detach():void;
  native public function getClientRects():randori.webkit.dom.ClientRectList;
  native public function getBoundingClientRect():randori.webkit.dom.ClientRect;

  native public function createContextualFragment(html:String = ""):randori.webkit.dom.DocumentFragment;
  native public function intersectsNode(refNode:randori.webkit.dom.Node = null):Boolean;
  native public function compareNode(refNode:randori.webkit.dom.Node = null):int;
  native public function comparePoint(refNode:randori.webkit.dom.Node = null,offset:uint = null):int;
  native public function isPointInRange(refNode:randori.webkit.dom.Node = null,offset:uint = null):Boolean;

  native public function expand(unit:String = ""):void;
  static native public const START_TO_START:uint = 0;
  static native public const START_TO_END:uint = 1;
  static native public const END_TO_END:uint = 2;
  static native public const END_TO_START:uint = 3;

  static native public const NODE_BEFORE:uint = 0;
  static native public const NODE_AFTER:uint = 1;
  static native public const NODE_BEFORE_AND_AFTER:uint = 2;
  static native public const NODE_INSIDE:uint = 3;
}


[JavaScript(export="false",name="TextEvent")]
public class randori.webkit.dom.TextEvent extends randori.webkit.dom.UIEvent
{
  native public function TextEvent():*;

  native public function get data():String;
  native public function initTextEvent(typeArg:String = "",canBubbleArg:Boolean = null,cancelableArg:Boolean = null,viewArg:randori.webkit.page.Window = null,dataArg:String = ""):void;
}


[JavaScript(export="false",nativecondition="TOUCH_EVENTS",name="Touch")]
public class randori.webkit.dom.Touch extends Object
{
  native public function Touch():*;
  native public function get clientX():uint;
  native public function get clientY():uint;

  native public function get screenX():uint;
  native public function get screenY():uint;
  native public function get pageX():uint;
  native public function get pageY():uint;
  native public function get target():randori.webkit.dom.EventTarget;

  native public function get identifier():uint;
}


[JavaScript(export="false",nativecondition="TOUCH_EVENTS",name="TouchEvent")]
public class randori.webkit.dom.TouchEvent extends randori.webkit.dom.UIEvent
{
  native public function TouchEvent():*;
  native public function get touches():randori.webkit.dom.TouchList;
  native public function get targetTouches():randori.webkit.dom.TouchList;
  native public function get changedTouches():randori.webkit.dom.TouchList;

  native public function get ctrlKey():Boolean;
  native public function get shiftKey():Boolean;
  native public function get altKey():Boolean;
  native public function get metaKey():Boolean;
  native public function initTouchEvent(touches:randori.webkit.dom.TouchList = null,targetTouches:randori.webkit.dom.TouchList = null,changedTouches:randori.webkit.dom.TouchList = null,type:String = "",view:randori.webkit.page.Window = null,screenX:uint = null,screenY:uint = null,clientX:uint = null,clientY:uint = null,ctrlKey:Boolean = null,altKey:Boolean = null,shiftKey:Boolean = null,metaKey:Boolean = null):void;
}


[JavaScript(export="false",nativecondition="TOUCH_EVENTS",name="TouchList")]
public dynamic class randori.webkit.dom.TouchList extends Object
{

  native public function TouchList():*;
  native public function get length():uint;
}


[JavaScript(export="false",name="TransitionEvent")]
public class randori.webkit.dom.TransitionEvent extends randori.webkit.dom.DomEvent
{
  native public function TransitionEvent():*;
  native public function get propertyName():String;
  native public function get elapsedTime():Number;

  native public function get pseudoElement():String;
}


[JavaScript(export="false",name="WheelEvent")]
public class randori.webkit.dom.WheelEvent extends randori.webkit.dom.MouseEvent
{
  native public function WheelEvent():*;
  native public function get wheelDeltaX():uint;
  native public function get wheelDeltaY():uint;
  native public function get deltaMode():uint;

  native public function get wheelDelta():uint;
  native public function initWebKitWheelEvent(wheelDeltaX:uint = null,wheelDeltaY:uint = null,view:randori.webkit.page.Window = null,screenX:uint = null,screenY:uint = null,clientX:uint = null,clientY:uint = null,ctrlKey:Boolean = null,altKey:Boolean = null,shiftKey:Boolean = null,metaKey:Boolean = null):void;
  static native public const DOM_DELTA_PIXEL:uint = 0;
  static native public const DOM_DELTA_LINE:uint = 1;
  static native public const DOM_DELTA_PAGE:uint = 2;
}


[JavaScript(export="false",name="Blob")]
public class randori.webkit.fileapi.Blob extends Object
{

  native public function Blob():*;
  native public function get size():Number;
  native public function get type():String;
}


[JavaScript(export="false",name="File")]
public class randori.webkit.fileapi.File extends randori.webkit.fileapi.Blob
{
  native public function File():*;
  native public function get name():String;

  native public function get lastModifiedDate():Object;
}


[JavaScript(export="false",nativecondition="BLOB",name="FileError")]
public class randori.webkit.fileapi.FileError extends Object
{
  native public function FileError():*;
  native public function get code():uint;
  static native public const NOT_FOUND_ERR:uint = 1;
  static native public const SECURITY_ERR:uint = 2;

  static native public const ABORT_ERR:uint = 3;
  static native public const NOT_READABLE_ERR:uint = 4;
  static native public const ENCODING_ERR:uint = 5;
  static native public const NO_MODIFICATION_ALLOWED_ERR:uint = 6;
  static native public const INVALID_STATE_ERR:uint = 7;

  static native public const SYNTAX_ERR:uint = 8;
  static native public const INVALID_MODIFICATION_ERR:uint = 9;
  static native public const QUOTA_EXCEEDED_ERR:uint = 10;
  static native public const TYPE_MISMATCH_ERR:uint = 11;
  static native public const PATH_EXISTS_ERR:uint = 12;
}


[JavaScript(export="false",name="FileList")]
public dynamic class randori.webkit.fileapi.FileList extends Object
{

  native public function FileList():*;
  native public function get length():uint;
}


[JavaScript(export="false",nativecondition="BLOB",name="FileReader")]
public class randori.webkit.fileapi.FileReader extends Object
{
  native public function FileReader():*;
  native public function get readyState():uint;
  native public function readAsArrayBuffer(blob:randori.webkit.fileapi.Blob):void;

  native public function readAsBinaryString(blob:randori.webkit.fileapi.Blob):void;
  native public function readAsText(blob:randori.webkit.fileapi.Blob,encoding:String = ""):void;
  native public function readAsDataURL(blob:randori.webkit.fileapi.Blob):void;
  native public function abort():void;
  native public function get result():*;

  native public function get error():randori.webkit.fileapi.FileError;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
  native public function get onloadstart():Function;

  native public function set onloadstart(value:Function):void;
  native public function get onprogress():Function;
  native public function set onprogress(value:Function):void;
  native public function get onload():Function;
  native public function set onload(value:Function):void;

  native public function get onabort():Function;
  native public function set onabort(value:Function):void;
  native public function get onerror():Function;
  native public function set onerror(value:Function):void;
  native public function get onloadend():Function;

  native public function set onloadend(value:Function):void;
  static native public const EMPTY:uint = 0;
  static native public const LOADING:uint = 1;
  static native public const DONE:uint = 2;
}


[JavaScript(export="false",name="ArrayBuffer")]
public class randori.webkit.html.canvas.ArrayBuffer extends Object
{
  native public function ArrayBuffer():*;

  native public function get byteLength():uint;
  native public function slice(begin:uint,end:uint = 0):ArrayBuffer;
}


[JavaScript(export="false",name="ArrayBufferView")]
public class randori.webkit.html.canvas.ArrayBufferView extends Object
{
  native public function ArrayBufferView():*;
  native public function get buffer():randori.webkit.html.canvas.ArrayBuffer;
  native public function get byteOffset():uint;

  native public function get byteLength():uint;
}


[JavaScript(export="false",name="CanvasGradient")]
public class randori.webkit.html.canvas.CanvasGradient extends Object
{
  native public function CanvasGradient():*;
  native public function addColorStop(offset:Number = 0,color:String = ""):void;
}


[JavaScript(export="false",name="CanvasPattern")]
public class randori.webkit.html.canvas.CanvasPattern extends Object
{
  native public function CanvasPattern():*;
}


[JavaScript(export="false",name="CanvasRenderingContext")]
public class randori.webkit.html.canvas.CanvasRenderingContext extends Object
{
  native public function CanvasRenderingContext():*;

  native public function get canvas():randori.webkit.html.HTMLCanvasElement;
}


[JavaScript(export="false",name="CanvasRenderingContext2D")]
public class randori.webkit.html.canvas.CanvasRenderingContext2D extends randori.webkit.html.canvas.CanvasRenderingContext
{
  native public function CanvasRenderingContext2D():*;
  native public function save():void;
  native public function restore():void;
  native public function scale(sx:Number = 0,sy:Number = 0):void;

  native public function rotate(angle:Number = 0):void;
  native public function translate(tx:Number = 0,ty:Number = 0):void;
  native public function transform(m11:Number = 0,m12:Number = 0,m21:Number = 0,m22:Number = 0,dx:Number = 0,dy:Number = 0):void;
  native public function setTransform(m11:Number = 0,m12:Number = 0,m21:Number = 0,m22:Number = 0,dx:Number = 0,dy:Number = 0):void;
  native public function get globalAlpha():Number;

  native public function set globalAlpha(value:Number):void;
  native public function get globalCompositeOperation():String;
  native public function set globalCompositeOperation(value:String):void;
  native public function createLinearGradient(x0:Number = 0,y0:Number = 0,x1:Number = 0,y1:Number = 0):randori.webkit.html.canvas.CanvasGradient;
  native public function createRadialGradient(x0:Number = 0,y0:Number = 0,r0:Number = 0,x1:Number = 0,y1:Number = 0,r1:Number = 0):randori.webkit.html.canvas.CanvasGradient;

  native public function get lineWidth():Number;
  native public function set lineWidth(value:Number):void;
  native public function get lineCap():String;
  native public function set lineCap(value:String):void;
  native public function get lineJoin():String;

  native public function set lineJoin(value:String):void;
  native public function get miterLimit():Number;
  native public function set miterLimit(value:Number):void;
  native public function get shadowOffsetX():Number;
  native public function set shadowOffsetX(value:Number):void;

  native public function get shadowOffsetY():Number;
  native public function set shadowOffsetY(value:Number):void;
  native public function get shadowBlur():Number;
  native public function set shadowBlur(value:Number):void;
  native public function get shadowColor():String;

  native public function set shadowColor(value:String):void;
  native public function setLineDash(dash:Vector.<Number>):void;
  native public function getLineDash():Vector.<Number>;
  native public function get lineDashOffset():Number;
  native public function set lineDashOffset(value:Number):void;

  native public function clearRect(x:Number = 0,y:Number = 0,width:Number = 0,height:Number = 0):void;
  native public function fillRect(x:Number = 0,y:Number = 0,width:Number = 0,height:Number = 0):void;
  native public function beginPath():void;
  native public function closePath():void;
  native public function moveTo(x:Number = 0,y:Number = 0):void;

  native public function lineTo(x:Number = 0,y:Number = 0):void;
  native public function quadraticCurveTo(cpx:Number = 0,cpy:Number = 0,x:Number = 0,y:Number = 0):void;
  native public function bezierCurveTo(cp1x:Number = 0,cp1y:Number = 0,cp2x:Number = 0,cp2y:Number = 0,x:Number = 0,y:Number = 0):void;
  native public function arcTo(x1:Number = 0,y1:Number = 0,x2:Number = 0,y2:Number = 0,radius:Number = 0):void;
  native public function rect(x:Number = 0,y:Number = 0,width:Number = 0,height:Number = 0):void;

  native public function arc(x:Number = 0,y:Number = 0,radius:Number = 0,startAngle:Number = 0,endAngle:Number = 0,anticlockwise:Boolean = null):void;
  native public function fill(winding:String = ""):void;
  native public function stroke():void;
  native public function clip(winding:String = ""):void;
  native public function isPointInPath(x:Number = 0,y:Number = 0,winding:String = ""):Boolean;

  native public function isPointInStroke(x:Number = 0,y:Number = 0):Boolean;
  native public function get font():String;
  native public function set font(value:String):void;
  native public function get textAlign():String;
  native public function set textAlign(value:String):void;

  native public function get textBaseline():String;
  native public function set textBaseline(value:String):void;
  native public function measureText(text:String = ""):randori.webkit.html.TextMetrics;
  native public function setAlpha(alpha:Number = 0):void;
  native public function setCompositeOperation(compositeOperation:String = ""):void;

  native public function setLineWidth(width:Number = 0):void;
  native public function setLineCap(cap:String = ""):void;
  native public function setLineJoin(join:String = ""):void;
  native public function setMiterLimit(limit:Number = 0):void;
  native public function clearShadow():void;

  native public function fillText(text:String,x:Number,y:Number,maxWidth:Number = 0):void;
  native public function strokeText(text:String,x:Number,y:Number,maxWidth:Number = 0):void;
  native public function setStrokeColor(c:Number,m:Number,y:Number,k:Number,a:Number):void;
  native public function setFillColor(c:Number,m:Number,y:Number,k:Number,a:Number):void;
  native public function strokeRect(x:Number = 0,y:Number = 0,width:Number = 0,height:Number = 0,lineWidth:Number = 0):void;

  native public function drawImage(image:randori.webkit.html.HTMLImageElement,sx:Number,sy:Number,sw:Number,sh:Number,dx:Number,dy:Number,dw:Number,dh:Number):void;
  native public function drawImageFromRect(image:randori.webkit.html.HTMLImageElement,sx:Number = 0,sy:Number = 0,sw:Number = 0,sh:Number = 0,dx:Number = 0,dy:Number = 0,dw:Number = 0,dh:Number = 0,compositeOperation:String = ""):void;
  native public function setShadow(width:Number,height:Number,blur:Number,c:Number,m:Number,y:Number,k:Number,a:Number):void;
  native public function putImageData(imagedata:randori.webkit.html.ImageData,dx:Number,dy:Number,dirtyX:Number,dirtyY:Number,dirtyWidth:Number,dirtyHeight:Number):void;
  native public function createPattern(canvas:randori.webkit.html.HTMLCanvasElement,repetitionType:String):randori.webkit.html.canvas.CanvasPattern;

  native public function createImageData(sw:Number,sh:Number):randori.webkit.html.ImageData;
  native public function get strokeStyle():Object;
  native public function set strokeStyle(value:Object):void;
  native public function get fillStyle():Object;
  native public function set fillStyle(value:Object):void;

  native public function getImageData(sx:Number = 0,sy:Number = 0,sw:Number = 0,sh:Number = 0):randori.webkit.html.ImageData;
}


[JavaScript(export="false",name="DOMPath")]
public class randori.webkit.html.canvas.DOMPath extends Object
{
  native public function DOMPath():*;
  native public function closePath():void;
  native public function moveTo(x:Number = 0,y:Number = 0):void;
  native public function lineTo(x:Number = 0,y:Number = 0):void;

  native public function quadraticCurveTo(cpx:Number = 0,cpy:Number = 0,x:Number = 0,y:Number = 0):void;
  native public function bezierCurveTo(cp1x:Number = 0,cp1y:Number = 0,cp2x:Number = 0,cp2y:Number = 0,x:Number = 0,y:Number = 0):void;
  native public function arcTo(x1:Number = 0,y1:Number = 0,x2:Number = 0,y2:Number = 0,radius:Number = 0):void;
  native public function rect(x:Number = 0,y:Number = 0,width:Number = 0,height:Number = 0):void;
  native public function arc(x:Number = 0,y:Number = 0,radius:Number = 0,startAngle:Number = 0,endAngle:Number = 0,anticlockwise:Boolean = null):void;
}


[JavaScript(export="false",name="DataView")]
public class randori.webkit.html.canvas.DataView extends randori.webkit.html.canvas.ArrayBufferView
{

  native public function DataView():*;
  native public function getInt8():*;
  native public function getUint8():*;
  native public function getInt16(byteOffset:uint,littleEndian:Boolean = false):int;
  native public function getUint16(byteOffset:uint,littleEndian:Boolean = false):uint;

  native public function getInt32(byteOffset:uint,littleEndian:Boolean = false):uint;
  native public function getUint32(byteOffset:uint,littleEndian:Boolean = false):uint;
  native public function getFloat32(byteOffset:uint,littleEndian:Boolean = false):Number;
  native public function getFloat64(byteOffset:uint,littleEndian:Boolean = false):Number;
  native public function setInt8():void;

  native public function setUint8():void;
  native public function setInt16(byteOffset:uint,value:int,littleEndian:Boolean = false):void;
  native public function setUint16(byteOffset:uint,value:uint,littleEndian:Boolean = false):void;
  native public function setInt32(byteOffset:uint,value:uint,littleEndian:Boolean = false):void;
  native public function setUint32(byteOffset:uint,value:uint,littleEndian:Boolean = false):void;

  native public function setFloat32(byteOffset:uint,value:Number,littleEndian:Boolean = false):void;
  native public function setFloat64(byteOffset:uint,value:Number,littleEndian:Boolean = false):void;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLActiveInfo")]
public class randori.webkit.html.canvas.WebGLActiveInfo extends Object
{
  native public function WebGLActiveInfo():*;
  native public function get size():uint;
  native public function get type():uint;

  native public function get name():String;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLBuffer")]
public class randori.webkit.html.canvas.WebGLBuffer extends Object
{
  native public function WebGLBuffer():*;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLContextEvent")]
public class randori.webkit.html.canvas.WebGLContextEvent extends randori.webkit.dom.DomEvent
{
  native public function WebGLContextEvent():*;
  native public function get statusMessage():String;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLFramebuffer")]
public class randori.webkit.html.canvas.WebGLFramebuffer extends Object
{
  native public function WebGLFramebuffer():*;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLProgram")]
public class randori.webkit.html.canvas.WebGLProgram extends Object
{

  native public function WebGLProgram():*;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLRenderbuffer")]
public class randori.webkit.html.canvas.WebGLRenderbuffer extends Object
{
  native public function WebGLRenderbuffer():*;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLRenderingContext")]
public class randori.webkit.html.canvas.WebGLRenderingContext extends randori.webkit.html.canvas.CanvasRenderingContext
{
  native public function WebGLRenderingContext():*;
  native public function get drawingBufferWidth():Object;
  native public function get drawingBufferHeight():Object;

  native public function activeTexture(texture:Object):void;
  native public function attachShader(program:randori.webkit.html.canvas.WebGLProgram,shader:randori.webkit.html.canvas.WebGLShader):void;
  native public function bindAttribLocation(program:randori.webkit.html.canvas.WebGLProgram,index:Object,name:String):void;
  native public function bindBuffer(target:Object,buffer:randori.webkit.html.canvas.WebGLBuffer):void;
  native public function bindFramebuffer(target:Object,framebuffer:randori.webkit.html.canvas.WebGLFramebuffer):void;

  native public function bindRenderbuffer(target:Object,renderbuffer:randori.webkit.html.canvas.WebGLRenderbuffer):void;
  native public function bindTexture(target:Object,texture:randori.webkit.html.canvas.WebGLTexture):void;
  native public function blendColor(red:Object,green:Object,blue:Object,alpha:Object):void;
  native public function blendEquation(mode:Object):void;
  native public function blendEquationSeparate(modeRGB:Object,modeAlpha:Object):void;

  native public function blendFunc(sfactor:Object,dfactor:Object):void;
  native public function blendFuncSeparate(srcRGB:Object,dstRGB:Object,srcAlpha:Object,dstAlpha:Object):void;
  native public function bufferData(target:Object,data:randori.webkit.html.canvas.ArrayBuffer,usage:Object):void;
  native public function bufferSubData(target:Object,offset:Object,data:randori.webkit.html.canvas.ArrayBuffer):void;
  native public function checkFramebufferStatus(target:Object):Object;

  native public function clear(mask:Object):void;
  native public function clearColor(red:Object,green:Object,blue:Object,alpha:Object):void;
  native public function clearDepth(depth:Object):void;
  native public function clearStencil(s:Object):void;
  native public function colorMask(red:Object,green:Object,blue:Object,alpha:Object):void;

  native public function compileShader(shader:randori.webkit.html.canvas.WebGLShader):void;
  native public function compressedTexImage2D(target:Object,level:Object,internalformat:Object,width:Object,height:Object,border:Object,data:randori.webkit.html.canvas.ArrayBufferView):void;
  native public function compressedTexSubImage2D(target:Object,level:Object,xoffset:Object,yoffset:Object,width:Object,height:Object,format:Object,data:randori.webkit.html.canvas.ArrayBufferView):void;
  native public function copyTexImage2D(target:Object,level:Object,internalformat:Object,x:Object,y:Object,width:Object,height:Object,border:Object):void;
  native public function copyTexSubImage2D(target:Object,level:Object,xoffset:Object,yoffset:Object,x:Object,y:Object,width:Object,height:Object):void;

  native public function createBuffer():randori.webkit.html.canvas.WebGLBuffer;
  native public function createFramebuffer():randori.webkit.html.canvas.WebGLFramebuffer;
  native public function createProgram():randori.webkit.html.canvas.WebGLProgram;
  native public function createRenderbuffer():randori.webkit.html.canvas.WebGLRenderbuffer;
  native public function createShader(type:Object):randori.webkit.html.canvas.WebGLShader;

  native public function createTexture():randori.webkit.html.canvas.WebGLTexture;
  native public function cullFace(mode:Object):void;
  native public function deleteBuffer(buffer:randori.webkit.html.canvas.WebGLBuffer):void;
  native public function deleteFramebuffer(framebuffer:randori.webkit.html.canvas.WebGLFramebuffer):void;
  native public function deleteProgram(program:randori.webkit.html.canvas.WebGLProgram):void;

  native public function deleteRenderbuffer(renderbuffer:randori.webkit.html.canvas.WebGLRenderbuffer):void;
  native public function deleteShader(shader:randori.webkit.html.canvas.WebGLShader):void;
  native public function deleteTexture(texture:randori.webkit.html.canvas.WebGLTexture):void;
  native public function depthFunc(func:Object):void;
  native public function depthMask(flag:Object):void;

  native public function depthRange(zNear:Object,zFar:Object):void;
  native public function detachShader(program:randori.webkit.html.canvas.WebGLProgram,shader:randori.webkit.html.canvas.WebGLShader):void;
  native public function disable(cap:Object):void;
  native public function disableVertexAttribArray(index:Object):void;
  native public function drawArrays(mode:Object,first:Object,count:Object):void;

  native public function drawElements(mode:Object,count:Object,type:Object,offset:Object):void;
  native public function enable(cap:Object):void;
  native public function enableVertexAttribArray(index:Object):void;
  native public function finish():void;
  native public function flush():void;

  native public function framebufferRenderbuffer(target:Object,attachment:Object,renderbuffertarget:Object,renderbuffer:randori.webkit.html.canvas.WebGLRenderbuffer):void;
  native public function framebufferTexture2D(target:Object,attachment:Object,textarget:Object,texture:randori.webkit.html.canvas.WebGLTexture,level:Object):void;
  native public function frontFace(mode:Object):void;
  native public function generateMipmap(target:Object):void;
  native public function getActiveAttrib(program:randori.webkit.html.canvas.WebGLProgram,index:Object):randori.webkit.html.canvas.WebGLActiveInfo;

  native public function getActiveUniform(program:randori.webkit.html.canvas.WebGLProgram,index:Object):randori.webkit.html.canvas.WebGLActiveInfo;
  native public function getAttachedShaders(program:randori.webkit.html.canvas.WebGLProgram):void;
  native public function getAttribLocation(program:randori.webkit.html.canvas.WebGLProgram,name:String):Object;
  native public function getBufferParameter(target:Object,pname:Object):*;
  native public function getContextAttributes():randori.webkit.html.canvas.WebGLContextAttributes;

  native public function getError():Object;
  native public function getExtension(name:String):*;
  native public function getFramebufferAttachmentParameter(target:Object,attachment:Object,pname:Object):*;
  native public function getParameter(pname:Object):*;
  native public function getProgramParameter(program:randori.webkit.html.canvas.WebGLProgram,pname:Object):*;

  native public function getProgramInfoLog(program:randori.webkit.html.canvas.WebGLProgram):String;
  native public function getRenderbufferParameter(target:Object,pname:Object):*;
  native public function getShaderParameter(shader:randori.webkit.html.canvas.WebGLShader,pname:Object):*;
  native public function getShaderInfoLog(shader:randori.webkit.html.canvas.WebGLShader):String;
  native public function getShaderPrecisionFormat(shadertype:Object,precisiontype:Object):randori.webkit.html.canvas.WebGLShaderPrecisionFormat;

  native public function getShaderSource(shader:randori.webkit.html.canvas.WebGLShader):String;
  native public function getSupportedExtensions():Vector.<String>;
  native public function getTexParameter(target:Object,pname:Object):*;
  native public function getUniform(program:randori.webkit.html.canvas.WebGLProgram,location:randori.webkit.html.canvas.WebGLUniformLocation):*;
  native public function getUniformLocation(program:randori.webkit.html.canvas.WebGLProgram,name:String):randori.webkit.html.canvas.WebGLUniformLocation;

  native public function getVertexAttrib(index:Object,pname:Object):*;
  native public function getVertexAttribOffset(index:Object,pname:Object):Object;
  native public function hint(target:Object,mode:Object):void;
  native public function isBuffer(buffer:randori.webkit.html.canvas.WebGLBuffer):Object;
  native public function isContextLost():Object;

  native public function isEnabled(cap:Object):Object;
  native public function isFramebuffer(framebuffer:randori.webkit.html.canvas.WebGLFramebuffer):Object;
  native public function isProgram(program:randori.webkit.html.canvas.WebGLProgram):Object;
  native public function isRenderbuffer(renderbuffer:randori.webkit.html.canvas.WebGLRenderbuffer):Object;
  native public function isShader(shader:randori.webkit.html.canvas.WebGLShader):Object;

  native public function isTexture(texture:randori.webkit.html.canvas.WebGLTexture):Object;
  native public function lineWidth(width:Object):void;
  native public function linkProgram(program:randori.webkit.html.canvas.WebGLProgram):void;
  native public function pixelStorei(pname:Object,param:Object):void;
  native public function polygonOffset(factor:Object,units:Object):void;

  native public function readPixels(x:Object,y:Object,width:Object,height:Object,format:Object,type:Object,pixels:randori.webkit.html.canvas.ArrayBufferView):void;
  native public function releaseShaderCompiler():void;
  native public function renderbufferStorage(target:Object,internalformat:Object,width:Object,height:Object):void;
  native public function sampleCoverage(value:Object,invert:Object):void;
  native public function scissor(x:Object,y:Object,width:Object,height:Object):void;

  native public function shaderSource(shader:randori.webkit.html.canvas.WebGLShader,string:String):void;
  native public function stencilFunc(func:Object,ref:Object,mask:Object):void;
  native public function stencilFuncSeparate(face:Object,func:Object,ref:Object,mask:Object):void;
  native public function stencilMask(mask:Object):void;
  native public function stencilMaskSeparate(face:Object,mask:Object):void;

  native public function stencilOp(fail:Object,zfail:Object,zpass:Object):void;
  native public function stencilOpSeparate(face:Object,fail:Object,zfail:Object,zpass:Object):void;
  native public function texParameterf(target:Object,pname:Object,param:Object):void;
  native public function texParameteri(target:Object,pname:Object,param:Object):void;
  native public function texImage2D(target:Object,level:Object,internalformat:Object,width:Object,height:Object,border:Object,format:Object,type:Object,pixels:randori.webkit.html.canvas.ArrayBufferView):void;

  native public function texSubImage2D(target:Object,level:Object,xoffset:Object,yoffset:Object,width:Object,height:Object,format:Object,type:Object,pixels:randori.webkit.html.canvas.ArrayBufferView):void;
  native public function uniform1f(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object):void;
  native public function uniform1fv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;
  native public function uniform1i(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object):void;
  native public function uniform1iv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;

  native public function uniform2f(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object,y:Object):void;
  native public function uniform2fv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;
  native public function uniform2i(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object,y:Object):void;
  native public function uniform2iv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;
  native public function uniform3f(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object,y:Object,z:Object):void;

  native public function uniform3fv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;
  native public function uniform3i(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object,y:Object,z:Object):void;
  native public function uniform3iv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;
  native public function uniform4f(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object,y:Object,z:Object,w:Object):void;
  native public function uniform4fv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;

  native public function uniform4i(location:randori.webkit.html.canvas.WebGLUniformLocation,x:Object,y:Object,z:Object,w:Object):void;
  native public function uniform4iv(location:randori.webkit.html.canvas.WebGLUniformLocation,v:Object):void;
  native public function uniformMatrix2fv(location:randori.webkit.html.canvas.WebGLUniformLocation,transpose:Object,array:Object):void;
  native public function uniformMatrix3fv(location:randori.webkit.html.canvas.WebGLUniformLocation,transpose:Object,array:Object):void;
  native public function uniformMatrix4fv(location:randori.webkit.html.canvas.WebGLUniformLocation,transpose:Object,array:Object):void;

  native public function useProgram(program:randori.webkit.html.canvas.WebGLProgram):void;
  native public function validateProgram(program:randori.webkit.html.canvas.WebGLProgram):void;
  native public function vertexAttrib1f(indx:Object,x:Object):void;
  native public function vertexAttrib1fv(indx:Object,values:Object):void;
  native public function vertexAttrib2f(indx:Object,x:Object,y:Object):void;

  native public function vertexAttrib2fv(indx:Object,values:Object):void;
  native public function vertexAttrib3f(indx:Object,x:Object,y:Object,z:Object):void;
  native public function vertexAttrib3fv(indx:Object,values:Object):void;
  native public function vertexAttrib4f(indx:Object,x:Object,y:Object,z:Object,w:Object):void;
  native public function vertexAttrib4fv(indx:Object,values:Object):void;

  native public function vertexAttribPointer(indx:Object,size:Object,type:Object,normalized:Object,stride:Object,offset:Object):void;
  native public function viewport(x:Object,y:Object,width:Object,height:Object):void;
  static native public const DEPTH_BUFFER_BIT:Object = 256;
  static native public const STENCIL_BUFFER_BIT:Object = 1024;
  static native public const COLOR_BUFFER_BIT:Object = 16384;

  static native public const POINTS:Object = 0;
  static native public const LINES:Object = 1;
  static native public const LINE_LOOP:Object = 2;
  static native public const LINE_STRIP:Object = 3;
  static native public const TRIANGLES:Object = 4;

  static native public const TRIANGLE_STRIP:Object = 5;
  static native public const TRIANGLE_FAN:Object = 6;
  static native public const ZERO:Object = 0;
  static native public const ONE:Object = 1;
  static native public const SRC_COLOR:Object = 768;

  static native public const ONE_MINUS_SRC_COLOR:Object = 769;
  static native public const SRC_ALPHA:Object = 770;
  static native public const ONE_MINUS_SRC_ALPHA:Object = 771;
  static native public const DST_ALPHA:Object = 772;
  static native public const ONE_MINUS_DST_ALPHA:Object = 773;

  static native public const DST_COLOR:Object = 774;
  static native public const ONE_MINUS_DST_COLOR:Object = 775;
  static native public const SRC_ALPHA_SATURATE:Object = 776;
  static native public const FUNC_ADD:Object = 32774;
  static native public const BLEND_EQUATION:Object = 32777;

  static native public const BLEND_EQUATION_RGB:Object = 32777;
  static native public const BLEND_EQUATION_ALPHA:Object = 34877;
  static native public const FUNC_SUBTRACT:Object = 32778;
  static native public const FUNC_REVERSE_SUBTRACT:Object = 32779;
  static native public const BLEND_DST_RGB:Object = 32968;

  static native public const BLEND_SRC_RGB:Object = 32969;
  static native public const BLEND_DST_ALPHA:Object = 32970;
  static native public const BLEND_SRC_ALPHA:Object = 32971;
  static native public const CONSTANT_COLOR:Object = 32769;
  static native public const ONE_MINUS_CONSTANT_COLOR:Object = 32770;

  static native public const CONSTANT_ALPHA:Object = 32771;
  static native public const ONE_MINUS_CONSTANT_ALPHA:Object = 32772;
  static native public const BLEND_COLOR:Object = 32773;
  static native public const ARRAY_BUFFER:Object = 34962;
  static native public const ELEMENT_ARRAY_BUFFER:Object = 34963;

  static native public const ARRAY_BUFFER_BINDING:Object = 34964;
  static native public const ELEMENT_ARRAY_BUFFER_BINDING:Object = 34965;
  static native public const STREAM_DRAW:Object = 35040;
  static native public const STATIC_DRAW:Object = 35044;
  static native public const DYNAMIC_DRAW:Object = 35048;

  static native public const BUFFER_SIZE:Object = 34660;
  static native public const BUFFER_USAGE:Object = 34661;
  static native public const CURRENT_VERTEX_ATTRIB:Object = 34342;
  static native public const FRONT:Object = 1028;
  static native public const BACK:Object = 1029;

  static native public const FRONT_AND_BACK:Object = 1032;
  static native public const TEXTURE_2D:Object = 3553;
  static native public const CULL_FACE:Object = 2884;
  static native public const BLEND:Object = 3042;
  static native public const DITHER:Object = 3024;

  static native public const STENCIL_TEST:Object = 2960;
  static native public const DEPTH_TEST:Object = 2929;
  static native public const SCISSOR_TEST:Object = 3089;
  static native public const POLYGON_OFFSET_FILL:Object = 32823;
  static native public const SAMPLE_ALPHA_TO_COVERAGE:Object = 32926;

  static native public const SAMPLE_COVERAGE:Object = 32928;
  static native public const NO_ERROR:Object = 0;
  static native public const INVALID_ENUM:Object = 1280;
  static native public const INVALID_VALUE:Object = 1281;
  static native public const INVALID_OPERATION:Object = 1282;

  static native public const OUT_OF_MEMORY:Object = 1285;
  static native public const CW:Object = 2304;
  static native public const CCW:Object = 2305;
  static native public const LINE_WIDTH:Object = 2849;
  static native public const ALIASED_POINT_SIZE_RANGE:Object = 33901;

  static native public const ALIASED_LINE_WIDTH_RANGE:Object = 33902;
  static native public const CULL_FACE_MODE:Object = 2885;
  static native public const FRONT_FACE:Object = 2886;
  static native public const DEPTH_RANGE:Object = 2928;
  static native public const DEPTH_WRITEMASK:Object = 2930;

  static native public const DEPTH_CLEAR_VALUE:Object = 2931;
  static native public const DEPTH_FUNC:Object = 2932;
  static native public const STENCIL_CLEAR_VALUE:Object = 2961;
  static native public const STENCIL_FUNC:Object = 2962;
  static native public const STENCIL_FAIL:Object = 2964;

  static native public const STENCIL_PASS_DEPTH_FAIL:Object = 2965;
  static native public const STENCIL_PASS_DEPTH_PASS:Object = 2966;
  static native public const STENCIL_REF:Object = 2967;
  static native public const STENCIL_VALUE_MASK:Object = 2963;
  static native public const STENCIL_WRITEMASK:Object = 2968;

  static native public const STENCIL_BACK_FUNC:Object = 34816;
  static native public const STENCIL_BACK_FAIL:Object = 34817;
  static native public const STENCIL_BACK_PASS_DEPTH_FAIL:Object = 34818;
  static native public const STENCIL_BACK_PASS_DEPTH_PASS:Object = 34819;
  static native public const STENCIL_BACK_REF:Object = 36003;

  static native public const STENCIL_BACK_VALUE_MASK:Object = 36004;
  static native public const STENCIL_BACK_WRITEMASK:Object = 36005;
  static native public const VIEWPORT:Object = 2978;
  static native public const SCISSOR_BOX:Object = 3088;
  static native public const COLOR_CLEAR_VALUE:Object = 3106;

  static native public const COLOR_WRITEMASK:Object = 3107;
  static native public const UNPACK_ALIGNMENT:Object = 3317;
  static native public const PACK_ALIGNMENT:Object = 3333;
  static native public const MAX_TEXTURE_SIZE:Object = 3379;
  static native public const MAX_VIEWPORT_DIMS:Object = 3386;

  static native public const SUBPIXEL_BITS:Object = 3408;
  static native public const RED_BITS:Object = 3410;
  static native public const GREEN_BITS:Object = 3411;
  static native public const BLUE_BITS:Object = 3412;
  static native public const ALPHA_BITS:Object = 3413;

  static native public const DEPTH_BITS:Object = 3414;
  static native public const STENCIL_BITS:Object = 3415;
  static native public const POLYGON_OFFSET_UNITS:Object = 10752;
  static native public const POLYGON_OFFSET_FACTOR:Object = 32824;
  static native public const TEXTURE_BINDING_2D:Object = 32873;

  static native public const SAMPLE_BUFFERS:Object = 32936;
  static native public const SAMPLES:Object = 32937;
  static native public const SAMPLE_COVERAGE_VALUE:Object = 32938;
  static native public const SAMPLE_COVERAGE_INVERT:Object = 32939;
  static native public const COMPRESSED_TEXTURE_FORMATS:Object = 34467;

  static native public const DONT_CARE:Object = 4352;
  static native public const FASTEST:Object = 4353;
  static native public const NICEST:Object = 4354;
  static native public const GENERATE_MIPMAP_HINT:Object = 33170;
  static native public const BYTE:Object = 5120;

  static native public const UNSIGNED_BYTE:Object = 5121;
  static native public const SHORT:Object = 5122;
  static native public const UNSIGNED_SHORT:Object = 5123;
  static native public const INT:Object = 5124;
  static native public const UNSIGNED_INT:Object = 5125;

  static native public const FLOAT:Object = 5126;
  static native public const HALF_FLOAT_OES:Object = 36193;
  static native public const DEPTH_COMPONENT:Object = 6402;
  static native public const ALPHA:Object = 6406;
  static native public const RGB:Object = 6407;

  static native public const RGBA:Object = 6408;
  static native public const LUMINANCE:Object = 6409;
  static native public const LUMINANCE_ALPHA:Object = 6410;
  static native public const UNSIGNED_SHORT_4_4_4_4:Object = 32819;
  static native public const UNSIGNED_SHORT_5_5_5_1:Object = 32820;

  static native public const UNSIGNED_SHORT_5_6_5:Object = 33635;
  static native public const FRAGMENT_SHADER:Object = 35632;
  static native public const VERTEX_SHADER:Object = 35633;
  static native public const MAX_VERTEX_ATTRIBS:Object = 34921;
  static native public const MAX_VERTEX_UNIFORM_VECTORS:Object = 36347;

  static native public const MAX_VARYING_VECTORS:Object = 36348;
  static native public const MAX_COMBINED_TEXTURE_IMAGE_UNITS:Object = 35661;
  static native public const MAX_VERTEX_TEXTURE_IMAGE_UNITS:Object = 35660;
  static native public const MAX_TEXTURE_IMAGE_UNITS:Object = 34930;
  static native public const MAX_FRAGMENT_UNIFORM_VECTORS:Object = 36349;

  static native public const SHADER_TYPE:Object = 35663;
  static native public const DELETE_STATUS:Object = 35712;
  static native public const LINK_STATUS:Object = 35714;
  static native public const VALIDATE_STATUS:Object = 35715;
  static native public const ATTACHED_SHADERS:Object = 35717;

  static native public const ACTIVE_UNIFORMS:Object = 35718;
  static native public const ACTIVE_ATTRIBUTES:Object = 35721;
  static native public const SHADING_LANGUAGE_VERSION:Object = 35724;
  static native public const CURRENT_PROGRAM:Object = 35725;
  static native public const NEVER:Object = 512;

  static native public const LESS:Object = 513;
  static native public const EQUAL:Object = 514;
  static native public const LEQUAL:Object = 515;
  static native public const GREATER:Object = 516;
  static native public const NOTEQUAL:Object = 517;

  static native public const GEQUAL:Object = 518;
  static native public const ALWAYS:Object = 519;
  static native public const KEEP:Object = 7680;
  static native public const REPLACE:Object = 7681;
  static native public const INCR:Object = 7682;

  static native public const DECR:Object = 7683;
  static native public const INVERT:Object = 5386;
  static native public const INCR_WRAP:Object = 34055;
  static native public const DECR_WRAP:Object = 34056;
  static native public const VENDOR:Object = 7936;

  static native public const RENDERER:Object = 7937;
  static native public const VERSION:Object = 7938;
  static native public const NEAREST:Object = 9728;
  static native public const LINEAR:Object = 9729;
  static native public const NEAREST_MIPMAP_NEAREST:Object = 9984;

  static native public const LINEAR_MIPMAP_NEAREST:Object = 9985;
  static native public const NEAREST_MIPMAP_LINEAR:Object = 9986;
  static native public const LINEAR_MIPMAP_LINEAR:Object = 9987;
  static native public const TEXTURE_MAG_FILTER:Object = 10240;
  static native public const TEXTURE_MIN_FILTER:Object = 10241;

  static native public const TEXTURE_WRAP_S:Object = 10242;
  static native public const TEXTURE_WRAP_T:Object = 10243;
  static native public const TEXTURE:Object = 5890;
  static native public const TEXTURE_CUBE_MAP:Object = 34067;
  static native public const TEXTURE_BINDING_CUBE_MAP:Object = 34068;

  static native public const TEXTURE_CUBE_MAP_POSITIVE_X:Object = 34069;
  static native public const TEXTURE_CUBE_MAP_NEGATIVE_X:Object = 34070;
  static native public const TEXTURE_CUBE_MAP_POSITIVE_Y:Object = 34071;
  static native public const TEXTURE_CUBE_MAP_NEGATIVE_Y:Object = 34072;
  static native public const TEXTURE_CUBE_MAP_POSITIVE_Z:Object = 34073;

  static native public const TEXTURE_CUBE_MAP_NEGATIVE_Z:Object = 34074;
  static native public const MAX_CUBE_MAP_TEXTURE_SIZE:Object = 34076;
  static native public const TEXTURE0:Object = 33984;
  static native public const TEXTURE1:Object = 33985;
  static native public const TEXTURE2:Object = 33986;

  static native public const TEXTURE3:Object = 33987;
  static native public const TEXTURE4:Object = 33988;
  static native public const TEXTURE5:Object = 33989;
  static native public const TEXTURE6:Object = 33990;
  static native public const TEXTURE7:Object = 33991;

  static native public const TEXTURE8:Object = 33992;
  static native public const TEXTURE9:Object = 33993;
  static native public const TEXTURE10:Object = 33994;
  static native public const TEXTURE11:Object = 33995;
  static native public const TEXTURE12:Object = 33996;

  static native public const TEXTURE13:Object = 33997;
  static native public const TEXTURE14:Object = 33998;
  static native public const TEXTURE15:Object = 33999;
  static native public const TEXTURE16:Object = 34000;
  static native public const TEXTURE17:Object = 34001;

  static native public const TEXTURE18:Object = 34002;
  static native public const TEXTURE19:Object = 34003;
  static native public const TEXTURE20:Object = 34004;
  static native public const TEXTURE21:Object = 34005;
  static native public const TEXTURE22:Object = 34006;

  static native public const TEXTURE23:Object = 34007;
  static native public const TEXTURE24:Object = 34008;
  static native public const TEXTURE25:Object = 34009;
  static native public const TEXTURE26:Object = 34010;
  static native public const TEXTURE27:Object = 34011;

  static native public const TEXTURE28:Object = 34012;
  static native public const TEXTURE29:Object = 34013;
  static native public const TEXTURE30:Object = 34014;
  static native public const TEXTURE31:Object = 34015;
  static native public const ACTIVE_TEXTURE:Object = 34016;

  static native public const REPEAT:Object = 10497;
  static native public const CLAMP_TO_EDGE:Object = 33071;
  static native public const MIRRORED_REPEAT:Object = 33648;
  static native public const FLOAT_VEC2:Object = 35664;
  static native public const FLOAT_VEC3:Object = 35665;

  static native public const FLOAT_VEC4:Object = 35666;
  static native public const INT_VEC2:Object = 35667;
  static native public const INT_VEC3:Object = 35668;
  static native public const INT_VEC4:Object = 35669;
  static native public const BOOL:Object = 35670;

  static native public const BOOL_VEC2:Object = 35671;
  static native public const BOOL_VEC3:Object = 35672;
  static native public const BOOL_VEC4:Object = 35673;
  static native public const FLOAT_MAT2:Object = 35674;
  static native public const FLOAT_MAT3:Object = 35675;

  static native public const FLOAT_MAT4:Object = 35676;
  static native public const SAMPLER_2D:Object = 35678;
  static native public const SAMPLER_CUBE:Object = 35680;
  static native public const VERTEX_ATTRIB_ARRAY_ENABLED:Object = 34338;
  static native public const VERTEX_ATTRIB_ARRAY_SIZE:Object = 34339;

  static native public const VERTEX_ATTRIB_ARRAY_STRIDE:Object = 34340;
  static native public const VERTEX_ATTRIB_ARRAY_TYPE:Object = 34341;
  static native public const VERTEX_ATTRIB_ARRAY_NORMALIZED:Object = 34922;
  static native public const VERTEX_ATTRIB_ARRAY_POINTER:Object = 34373;
  static native public const VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:Object = 34975;

  static native public const COMPILE_STATUS:Object = 35713;
  static native public const LOW_FLOAT:Object = 36336;
  static native public const MEDIUM_FLOAT:Object = 36337;
  static native public const HIGH_FLOAT:Object = 36338;
  static native public const LOW_INT:Object = 36339;

  static native public const MEDIUM_INT:Object = 36340;
  static native public const HIGH_INT:Object = 36341;
  static native public const FRAMEBUFFER:Object = 36160;
  static native public const RENDERBUFFER:Object = 36161;
  static native public const RGBA4:Object = 32854;

  static native public const RGB5_A1:Object = 32855;
  static native public const RGB565:Object = 36194;
  static native public const DEPTH_COMPONENT16:Object = 33189;
  static native public const STENCIL_INDEX:Object = 6401;
  static native public const STENCIL_INDEX8:Object = 36168;

  static native public const DEPTH_STENCIL:Object = 34041;
  static native public const RENDERBUFFER_WIDTH:Object = 36162;
  static native public const RENDERBUFFER_HEIGHT:Object = 36163;
  static native public const RENDERBUFFER_INTERNAL_FORMAT:Object = 36164;
  static native public const RENDERBUFFER_RED_SIZE:Object = 36176;

  static native public const RENDERBUFFER_GREEN_SIZE:Object = 36177;
  static native public const RENDERBUFFER_BLUE_SIZE:Object = 36178;
  static native public const RENDERBUFFER_ALPHA_SIZE:Object = 36179;
  static native public const RENDERBUFFER_DEPTH_SIZE:Object = 36180;
  static native public const RENDERBUFFER_STENCIL_SIZE:Object = 36181;

  static native public const FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:Object = 36048;
  static native public const FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:Object = 36049;
  static native public const FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:Object = 36050;
  static native public const FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:Object = 36051;
  static native public const COLOR_ATTACHMENT0:Object = 36064;

  static native public const DEPTH_ATTACHMENT:Object = 36096;
  static native public const STENCIL_ATTACHMENT:Object = 36128;
  static native public const DEPTH_STENCIL_ATTACHMENT:Object = 33306;
  static native public const NONE:Object = 0;
  static native public const FRAMEBUFFER_COMPLETE:Object = 36053;

  static native public const FRAMEBUFFER_INCOMPLETE_ATTACHMENT:Object = 36054;
  static native public const FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:Object = 36055;
  static native public const FRAMEBUFFER_INCOMPLETE_DIMENSIONS:Object = 36057;
  static native public const FRAMEBUFFER_UNSUPPORTED:Object = 36061;
  static native public const FRAMEBUFFER_BINDING:Object = 36006;

  static native public const RENDERBUFFER_BINDING:Object = 36007;
  static native public const MAX_RENDERBUFFER_SIZE:Object = 34024;
  static native public const INVALID_FRAMEBUFFER_OPERATION:Object = 1286;
  static native public const UNPACK_FLIP_Y_WEBGL:Object = 37440;
  static native public const UNPACK_PREMULTIPLY_ALPHA_WEBGL:Object = 37441;

  static native public const CONTEXT_LOST_WEBGL:Object = 37442;
  static native public const UNPACK_COLORSPACE_CONVERSION_WEBGL:Object = 37443;
  static native public const BROWSER_DEFAULT_WEBGL:Object = 37444;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLShader")]
public class randori.webkit.html.canvas.WebGLShader extends Object
{
  native public function WebGLShader():*;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLShaderPrecisionFormat")]
public class randori.webkit.html.canvas.WebGLShaderPrecisionFormat extends Object
{
  native public function WebGLShaderPrecisionFormat():*;

  native public function get rangeMin():uint;
  native public function get rangeMax():uint;
  native public function get precision():uint;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLTexture")]
public class randori.webkit.html.canvas.WebGLTexture extends Object
{
  native public function WebGLTexture():*;
}


[JavaScript(export="false",nativecondition="WEBGL",name="WebGLUniformLocation")]
public class randori.webkit.html.canvas.WebGLUniformLocation extends Object
{
  native public function WebGLUniformLocation():*;
}


[JavaScript(export="false",nativecondition="SHADOW_DOM",name="HTMLContentElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('content')")]
public class randori.webkit.html.shadow.HTMLContentElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLContentElement():*;
  native public function get select():String;
  native public function set select(value:String):void;
  native public function get resetStyleInheritance():Boolean;
  native public function set resetStyleInheritance(value:Boolean):void;

  native public function getDistributedNodes():randori.webkit.dom.NodeList;
}


[JavaScript(export="false",nativecondition="SHADOW_DOM",name="HTMLShadowElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('shadow')")]
public class randori.webkit.html.shadow.HTMLShadowElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLShadowElement():*;
  native public function get resetStyleInheritance():Boolean;
  native public function set resetStyleInheritance(value:Boolean):void;
  native public function get olderShadowRoot():randori.webkit.dom.ShadowRoot;
}


[JavaScript(export="false",nativecondition="VIDEO_TRACK",name="TextTrack")]
public class randori.webkit.html.track.TextTrack extends Object
{

  native public function TextTrack():*;
  native public function get kind():String;
  native public function get label():String;
  native public function get language():String;
  native public function get mode():String;

  native public function set mode(value:String):void;
  native public function get cues():randori.webkit.html.track.TextTrackCueList;
  native public function get activeCues():randori.webkit.html.track.TextTrackCueList;
  native public function get oncuechange():Function;
  native public function set oncuechange(value:Function):void;

  native public function addCue(cue:randori.webkit.html.track.TextTrackCue):void;
  native public function removeCue(cue:randori.webkit.html.track.TextTrackCue):void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",nativecondition="VIDEO_TRACK",name="TextTrackCue")]
public class randori.webkit.html.track.TextTrackCue extends Object
{

  native public function TextTrackCue(startTime:Number,endTime:Number,text:String):*;
  native public function get track():randori.webkit.html.track.TextTrack;
  native public function get id():String;
  native public function set id(value:String):void;
  native public function get startTime():Number;

  native public function set startTime(value:Number):void;
  native public function get endTime():Number;
  native public function set endTime(value:Number):void;
  native public function get pauseOnExit():Boolean;
  native public function set pauseOnExit(value:Boolean):void;

  native public function get vertical():String;
  native public function set vertical(value:String):void;
  native public function get snapToLines():Boolean;
  native public function set snapToLines(value:Boolean):void;
  native public function get line():uint;

  native public function set line(value:uint):void;
  native public function get position():uint;
  native public function set position(value:uint):void;
  native public function get size():uint;
  native public function set size(value:uint):void;

  native public function get align():String;
  native public function set align(value:String):void;
  native public function get text():String;
  native public function set text(value:String):void;
  native public function getCueAsHTML():randori.webkit.dom.DocumentFragment;

  native public function get onenter():Function;
  native public function set onenter(value:Function):void;
  native public function get onexit():Function;
  native public function set onexit(value:Function):void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;

  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",nativecondition="VIDEO_TRACK",name="TextTrackCueList")]
public dynamic class randori.webkit.html.track.TextTrackCueList extends Object
{
  native public function TextTrackCueList():*;
  native public function get length():uint;
  native public function getCueById(id:String):randori.webkit.html.track.TextTrackCue;
}


[JavaScript(export="false",nativecondition="VIDEO_TRACK",name="TextTrackList")]
public dynamic class randori.webkit.html.track.TextTrackList extends Object
{

  native public function TextTrackList():*;
  native public function get length():uint;
  native public function get onaddtrack():Function;
  native public function set onaddtrack(value:Function):void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;

  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",nativecondition="VIDEO_TRACK",name="TextTrackRegion")]
public class randori.webkit.html.track.TextTrackRegion extends Object
{
  native public function TextTrackRegion():*;
  native public function get track():randori.webkit.html.track.TextTrack;
  native public function get id():String;

  native public function set id(value:String):void;
  native public function get width():Number;
  native public function set width(value:Number):void;
  native public function get height():uint;
  native public function set height(value:uint):void;

  native public function get regionAnchorX():Number;
  native public function set regionAnchorX(value:Number):void;
  native public function get regionAnchorY():Number;
  native public function set regionAnchorY(value:Number):void;
  native public function get viewportAnchorX():Number;

  native public function set viewportAnchorX(value:Number):void;
  native public function get viewportAnchorY():Number;
  native public function set viewportAnchorY(value:Number):void;
  native public function get scroll():String;
  native public function set scroll(value:String):void;
}


[JavaScript(export="false",nativecondition="VIDEO_TRACK",name="TrackEvent")]
public class randori.webkit.html.track.TrackEvent extends randori.webkit.dom.DomEvent
{

  native public function TrackEvent():*;
  native public function get track():Object;
}


[JavaScript(export="false",name="DOMTokenList")]
public dynamic class randori.webkit.html.DOMTokenList extends Object
{
  native public function DOMTokenList():*;
  native public function get length():uint;
  native public function contains(token:String):Boolean;

  native public function add(... rest):void;
  native public function remove(... rest):void;
  native public function toggle(token:String,force:Boolean = false):Boolean;
  native public function toString():String;
}


[JavaScript(export="false",name="DOMSettableTokenList")]
public class randori.webkit.html.DOMSettableTokenList extends randori.webkit.html.DOMTokenList
{
  native public function DOMSettableTokenList():*;

  native public function get value():String;
  native public function set value(value:String):void;
}


[JavaScript(export="false",name="FormData")]
public class randori.webkit.html.FormData extends Object
{
  native public function FormData():*;
  native public function append(name:String = "",value:String = "",filename:String = ""):void;
}


[JavaScript(export="false",name="HTMLAllCollection")]
public dynamic class randori.webkit.html.HTMLAllCollection extends Object
{
  native public function HTMLAllCollection():*;

  native public function get length():uint;
  native public function tags(name:String):randori.webkit.dom.NodeList;
}


[JavaScript(export="false",name="HTMLAnchorElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('a')")]
public class randori.webkit.html.HTMLAnchorElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLAnchorElement():*;
  native public function get charset():String;
  native public function set charset(value:String):void;

  native public function get coords():String;
  native public function set coords(value:String):void;
  native public function get download():String;
  native public function set download(value:String):void;
  native public function get href():String;

  native public function set href(value:String):void;
  native public function get hreflang():String;
  native public function set hreflang(value:String):void;
  native public function get name():String;
  native public function set name(value:String):void;

  native public function get ping():String;
  native public function set ping(value:String):void;
  native public function get rel():String;
  native public function set rel(value:String):void;
  native public function get rev():String;

  native public function set rev(value:String):void;
  native public function get shape():String;
  native public function set shape(value:String):void;
  native public function get target():String;
  native public function set target(value:String):void;

  native public function get type():String;
  native public function set type(value:String):void;
  native public function get hash():String;
  native public function set hash(value:String):void;
  native public function get host():String;

  native public function set host(value:String):void;
  native public function get hostname():String;
  native public function set hostname(value:String):void;
  native public function get pathname():String;
  native public function set pathname(value:String):void;

  native public function get port():String;
  native public function set port(value:String):void;
  native public function get protocol():String;
  native public function set protocol(value:String):void;
  native public function get search():String;

  native public function set search(value:String):void;
  native public function get origin():String;
  native public function get text():String;
  native public function toString():String;
}


[JavaScript(export="false",name="HTMLAppletElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('applet')")]
public class randori.webkit.html.HTMLAppletElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLAppletElement():*;

  native public function get align():String;
  native public function set align(value:String):void;
  native public function get alt():String;
  native public function set alt(value:String):void;
  native public function get archive():String;

  native public function set archive(value:String):void;
  native public function get code():String;
  native public function set code(value:String):void;
  native public function get codeBase():String;
  native public function set codeBase(value:String):void;

  native public function get height():String;
  native public function set height(value:String):void;
  native public function get hspace():String;
  native public function set hspace(value:String):void;
  native public function get name():String;

  native public function set name(value:String):void;
  native public function get object():String;
  native public function set object(value:String):void;
  native public function get vspace():String;
  native public function set vspace(value:String):void;

  native public function get width():String;
  native public function set width(value:String):void;
}


[JavaScript(export="false",name="HTMLAreaElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('area')")]
public class randori.webkit.html.HTMLAreaElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLAreaElement():*;
  native public function get alt():String;
  native public function set alt(value:String):void;

  native public function get coords():String;
  native public function set coords(value:String):void;
  native public function get href():String;
  native public function set href(value:String):void;
  native public function get noHref():Boolean;

  native public function set noHref(value:Boolean):void;
  native public function get ping():String;
  native public function set ping(value:String):void;
  native public function get shape():String;
  native public function set shape(value:String):void;

  native public function get target():String;
  native public function set target(value:String):void;
  native public function get hash():String;
  native public function get host():String;
  native public function get hostname():String;

  native public function get pathname():String;
  native public function get port():String;
  native public function get protocol():String;
  native public function get search():String;
}


[JavaScript(export="false",nativecondition="VIDEO",name="HTMLMediaElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('media')")]
public class randori.webkit.html.HTMLMediaElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLMediaElement():*;

  native public function get error():randori.webkit.html.MediaError;
  native public function get src():String;
  native public function set src(value:String):void;
  native public function get currentSrc():String;
  native public function get networkState():uint;

  native public function get preload():String;
  native public function set preload(value:String):void;
  native public function get buffered():randori.webkit.html.TimeRanges;
  native public function load():void;
  native public function canPlayType(type:String = ""):String;

  native public function get readyState():uint;
  native public function get seeking():Boolean;
  native public function get currentTime():Number;
  native public function set currentTime(value:Number):void;
  native public function get initialTime():Number;

  native public function get startTime():Number;
  native public function get duration():Number;
  native public function get paused():Boolean;
  native public function get defaultPlaybackRate():Number;
  native public function set defaultPlaybackRate(value:Number):void;

  native public function get playbackRate():Number;
  native public function set playbackRate(value:Number):void;
  native public function get played():randori.webkit.html.TimeRanges;
  native public function get seekable():randori.webkit.html.TimeRanges;
  native public function get ended():Boolean;

  native public function get autoplay():Boolean;
  native public function set autoplay(value:Boolean):void;
  native public function get loop():Boolean;
  native public function set loop(value:Boolean):void;
  native public function play():void;

  native public function pause():void;
  native public function get controls():Boolean;
  native public function set controls(value:Boolean):void;
  native public function get volume():Number;
  native public function set volume(value:Number):void;

  native public function get muted():Boolean;
  native public function set muted(value:Boolean):void;
  native public function get defaultMuted():Boolean;
  native public function set defaultMuted(value:Boolean):void;
  native public function get mediaGroup():String;

  native public function set mediaGroup(value:String):void;
  native public function get controller():randori.webkit.html.MediaController;
  native public function set controller(value:randori.webkit.html.MediaController):void;
  static native public const NETWORK_EMPTY:uint = 0;
  static native public const NETWORK_IDLE:uint = 1;

  static native public const NETWORK_LOADING:uint = 2;
  static native public const NETWORK_NO_SOURCE:uint = 3;
  static native public const HAVE_NOTHING:uint = 0;
  static native public const HAVE_METADATA:uint = 1;
  static native public const HAVE_CURRENT_DATA:uint = 2;

  static native public const HAVE_FUTURE_DATA:uint = 3;
  static native public const HAVE_ENOUGH_DATA:uint = 4;
}


[JavaScript(export="false",nativecondition="VIDEO",name="HTMLAudioElement")]
public class randori.webkit.html.HTMLAudioElement extends randori.webkit.html.HTMLMediaElement
{
  native public function HTMLAudioElement():*;
}


[JavaScript(export="false",name="HTMLBRElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('br')")]
public class randori.webkit.html.HTMLBRElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLBRElement():*;
  native public function get clear():String;

  native public function set clear(value:String):void;
}


[JavaScript(export="false",name="HTMLBaseElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('base')")]
public class randori.webkit.html.HTMLBaseElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLBaseElement():*;
  native public function get href():String;
  native public function set href(value:String):void;
  native public function get target():String;

  native public function set target(value:String):void;
}


[JavaScript(export="false",name="HTMLBaseFontElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('basefont')")]
public class randori.webkit.html.HTMLBaseFontElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLBaseFontElement():*;
  native public function get color():String;
  native public function set color(value:String):void;
  native public function get face():String;

  native public function set face(value:String):void;
  native public function get size():uint;
  native public function set size(value:uint):void;
}


[JavaScript(export="false",name="HTMLBodyElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('body')")]
public class randori.webkit.html.HTMLBodyElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLBodyElement():*;
  native public function get aLink():String;

  native public function set aLink(value:String):void;
  native public function get background():String;
  native public function set background(value:String):void;
  native public function get bgColor():String;
  native public function set bgColor(value:String):void;

  native public function get link():String;
  native public function set link(value:String):void;
  native public function get text():String;
  native public function set text(value:String):void;
  native public function get vLink():String;

  native public function set vLink(value:String):void;
  native public function get onbeforeunload():Function;
  native public function set onbeforeunload(value:Function):void;
  native public function get onhashchange():Function;
  native public function set onhashchange(value:Function):void;

  native public function get onmessage():Function;
  native public function set onmessage(value:Function):void;
  native public function get onoffline():Function;
  native public function set onoffline(value:Function):void;
  native public function get ononline():Function;

  native public function set ononline(value:Function):void;
  native public function get onpopstate():Function;
  native public function set onpopstate(value:Function):void;
  native public function get onresize():Function;
  native public function set onresize(value:Function):void;

  native public function get onstorage():Function;
  native public function set onstorage(value:Function):void;
  native public function get onunload():Function;
  native public function set onunload(value:Function):void;
  native public function get onorientationchange():Function;

  native public function set onorientationchange(value:Function):void;
}


[JavaScript(export="false",name="HTMLButtonElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('button')")]
public class randori.webkit.html.HTMLButtonElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLButtonElement():*;
  native public function get autofocus():Boolean;
  native public function set autofocus(value:Boolean):void;
  native public function get disabled():Boolean;

  native public function set disabled(value:Boolean):void;
  native public function get form():randori.webkit.html.HTMLFormElement;
  native public function get formAction():String;
  native public function set formAction(value:String):void;
  native public function get formEnctype():String;

  native public function set formEnctype(value:String):void;
  native public function get formMethod():String;
  native public function set formMethod(value:String):void;
  native public function get formNoValidate():Boolean;
  native public function set formNoValidate(value:Boolean):void;

  native public function get formTarget():String;
  native public function set formTarget(value:String):void;
  native public function get name():String;
  native public function set name(value:String):void;
  native public function get type():String;

  native public function set type(value:String):void;
  native public function get value():String;
  native public function set value(value:String):void;
  native public function get willValidate():Boolean;
  native public function get validity():randori.webkit.html.ValidityState;

  native public function get validationMessage():String;
  native public function checkValidity():Boolean;
  native public function setCustomValidity(error:String):void;
  native public function get labels():randori.webkit.dom.NodeList;
}


[JavaScript(export="false",name="HTMLCanvasElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('canvas')")]
public class randori.webkit.html.HTMLCanvasElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLCanvasElement():*;

  native public function get width():uint;
  native public function set width(value:uint):void;
  native public function get height():uint;
  native public function set height(value:uint):void;
  native public function toDataURL(type:String = ""):String;

  native public function getContext(contextId:String = ""):*;
}


[JavaScript(export="false",name="HTMLCollection")]
public dynamic class randori.webkit.html.HTMLCollection extends Object
{
  native public function HTMLCollection():*;
  native public function get length():uint;
}


[JavaScript(export="false",name="HTMLDListElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('dl')")]
public class randori.webkit.html.HTMLDListElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLDListElement():*;
  native public function get compact():Boolean;

  native public function set compact(value:Boolean):void;
}


[JavaScript(export="false",nativecondition="DATALIST_ELEMENT",name="HTMLDataListElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('datalist')")]
public class randori.webkit.html.HTMLDataListElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLDataListElement():*;
  native public function get options():randori.webkit.html.HTMLCollection;
}


[JavaScript(export="false",nativecondition="DIALOG_ELEMENT",name="HTMLDialogElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('dialog')")]
public class randori.webkit.html.HTMLDialogElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLDialogElement():*;
  native public function get open():Boolean;

  native public function set open(value:Boolean):void;
  native public function close():void;
  native public function show():void;
  native public function showModal():void;
}


[JavaScript(export="false",name="HTMLDirectoryElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('directory')")]
public class randori.webkit.html.HTMLDirectoryElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLDirectoryElement():*;

  native public function get compact():Boolean;
  native public function set compact(value:Boolean):void;
}


[JavaScript(export="false",name="HTMLDocument")]
public class randori.webkit.html.HTMLDocument extends randori.webkit.dom.Document
{
  native public function HTMLDocument():*;
  native public function open():void;
  native public function close():void;

  native public function write(text:String = ""):void;
  native public function writeln(text:String = ""):void;
  native public function get embeds():randori.webkit.html.HTMLCollection;
  native public function get plugins():randori.webkit.html.HTMLCollection;
  native public function get scripts():randori.webkit.html.HTMLCollection;

  native public function get all():randori.webkit.html.HTMLAllCollection;
  native public function set all(value:randori.webkit.html.HTMLAllCollection):void;
  native public function clear():void;
  native public function captureEvents():void;
  native public function releaseEvents():void;

  native public function get width():uint;
  native public function get height():uint;
  native public function get dir():String;
  native public function set dir(value:String):void;
  native public function get designMode():String;

  native public function set designMode(value:String):void;
  native public function get activeElement():randori.webkit.dom.Element;
  native public function hasFocus():Boolean;
  native public function get bgColor():String;
  native public function set bgColor(value:String):void;

  native public function get fgColor():String;
  native public function set fgColor(value:String):void;
  native public function get alinkColor():String;
  native public function set alinkColor(value:String):void;
  native public function get linkColor():String;

  native public function set linkColor(value:String):void;
  native public function get vlinkColor():String;
  native public function set vlinkColor(value:String):void;
}


[JavaScript(export="false",name="HTMLEmbedElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('embed')")]
public class randori.webkit.html.HTMLEmbedElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLEmbedElement():*;
  native public function get align():String;

  native public function set align(value:String):void;
  native public function get height():String;
  native public function set height(value:String):void;
  native public function get name():String;
  native public function set name(value:String):void;

  native public function get src():String;
  native public function set src(value:String):void;
  native public function get type():String;
  native public function set type(value:String):void;
  native public function get width():String;

  native public function set width(value:String):void;
}


[JavaScript(export="false",name="HTMLFieldSetElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('fieldset')")]
public class randori.webkit.html.HTMLFieldSetElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLFieldSetElement():*;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;
  native public function get form():randori.webkit.html.HTMLFormElement;

  native public function get name():String;
  native public function set name(value:String):void;
  native public function get type():String;
  native public function get elements():randori.webkit.html.HTMLCollection;
  native public function get willValidate():Boolean;

  native public function get validity():randori.webkit.html.ValidityState;
  native public function get validationMessage():String;
  native public function checkValidity():Boolean;
  native public function setCustomValidity(error:String):void;
}


[JavaScript(export="false",name="HTMLFontElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('font')")]
public class randori.webkit.html.HTMLFontElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLFontElement():*;

  native public function get color():String;
  native public function set color(value:String):void;
  native public function get face():String;
  native public function set face(value:String):void;
  native public function get size():String;

  native public function set size(value:String):void;
}


[JavaScript(export="false",name="HTMLFormControlsCollection")]
public class randori.webkit.html.HTMLFormControlsCollection extends randori.webkit.html.HTMLCollection
{
  native public function HTMLFormControlsCollection():*;
}


[JavaScript(export="false",name="HTMLFormElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('form')")]
public class randori.webkit.html.HTMLFormElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLFormElement():*;
  native public function get acceptCharset():String;
  native public function set acceptCharset(value:String):void;

  native public function get action():String;
  native public function set action(value:String):void;
  native public function get autocomplete():String;
  native public function set autocomplete(value:String):void;
  native public function get enctype():String;

  native public function set enctype(value:String):void;
  native public function get encoding():String;
  native public function set encoding(value:String):void;
  native public function get method():String;
  native public function set method(value:String):void;

  native public function get name():String;
  native public function set name(value:String):void;
  native public function get noValidate():Boolean;
  native public function set noValidate(value:Boolean):void;
  native public function get target():String;

  native public function set target(value:String):void;
  native public function get elements():randori.webkit.html.HTMLCollection;
  native public function get length():uint;
  native public function submit():void;
  native public function reset():void;

  native public function checkValidity():Boolean;
}


[JavaScript(export="false",name="HTMLFrameElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('frame')")]
public class randori.webkit.html.HTMLFrameElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLFrameElement():*;
  native public function get frameBorder():String;
  native public function set frameBorder(value:String):void;
  native public function get longDesc():String;

  native public function set longDesc(value:String):void;
  native public function get marginHeight():String;
  native public function set marginHeight(value:String):void;
  native public function get marginWidth():String;
  native public function set marginWidth(value:String):void;

  native public function get name():String;
  native public function set name(value:String):void;
  native public function get noResize():Boolean;
  native public function set noResize(value:Boolean):void;
  native public function get scrolling():String;

  native public function set scrolling(value:String):void;
  native public function get src():String;
  native public function set src(value:String):void;
  native public function get contentDocument():randori.webkit.dom.Document;
  native public function get contentWindow():randori.webkit.page.Window;

  native public function get location():String;
  native public function set location(value:String):void;
  native public function get width():uint;
  native public function get height():uint;
}


[JavaScript(export="false",name="HTMLFrameSetElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('frameset')")]
public class randori.webkit.html.HTMLFrameSetElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLFrameSetElement():*;

  native public function get cols():String;
  native public function set cols(value:String):void;
  native public function get rows():String;
  native public function set rows(value:String):void;
  native public function get onbeforeunload():Function;

  native public function set onbeforeunload(value:Function):void;
  native public function get onhashchange():Function;
  native public function set onhashchange(value:Function):void;
  native public function get onmessage():Function;
  native public function set onmessage(value:Function):void;

  native public function get onoffline():Function;
  native public function set onoffline(value:Function):void;
  native public function get ononline():Function;
  native public function set ononline(value:Function):void;
  native public function get onpopstate():Function;

  native public function set onpopstate(value:Function):void;
  native public function get onresize():Function;
  native public function set onresize(value:Function):void;
  native public function get onstorage():Function;
  native public function set onstorage(value:Function):void;

  native public function get onunload():Function;
  native public function set onunload(value:Function):void;
  native public function get onorientationchange():Function;
  native public function set onorientationchange(value:Function):void;
}


[JavaScript(export="false",name="HTMLHRElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('hr')")]
public class randori.webkit.html.HTMLHRElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLHRElement():*;

  native public function get align():String;
  native public function set align(value:String):void;
  native public function get noShade():Boolean;
  native public function set noShade(value:Boolean):void;
  native public function get size():String;

  native public function set size(value:String):void;
  native public function get width():String;
  native public function set width(value:String):void;
}


[JavaScript(export="false",name="HTMLHeadElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('head')")]
public class randori.webkit.html.HTMLHeadElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLHeadElement():*;
  native public function get profile():String;

  native public function set profile(value:String):void;
}


[JavaScript(export="false",name="HTMLHeadingElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('heading')")]
public class randori.webkit.html.HTMLHeadingElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLHeadingElement():*;
  native public function get align():String;
  native public function set align(value:String):void;
}


[JavaScript(export="false",name="HTMLHtmlElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('html')")]
public class randori.webkit.html.HTMLHtmlElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLHtmlElement():*;

  native public function get version():String;
  native public function set version(value:String):void;
  native public function get manifest():String;
  native public function set manifest(value:String):void;
}


[JavaScript(export="false",name="HTMLIFrameElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('iframe')")]
public class randori.webkit.html.HTMLIFrameElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLIFrameElement():*;

  native public function get align():String;
  native public function set align(value:String):void;
  native public function get frameBorder():String;
  native public function set frameBorder(value:String):void;
  native public function get height():String;

  native public function set height(value:String):void;
  native public function get longDesc():String;
  native public function set longDesc(value:String):void;
  native public function get marginHeight():String;
  native public function set marginHeight(value:String):void;

  native public function get marginWidth():String;
  native public function set marginWidth(value:String):void;
  native public function get name():String;
  native public function set name(value:String):void;
  native public function get sandbox():String;

  native public function set sandbox(value:String):void;
  native public function get seamless():Boolean;
  native public function set seamless(value:Boolean):void;
  native public function get scrolling():String;
  native public function set scrolling(value:String):void;

  native public function get src():String;
  native public function set src(value:String):void;
  native public function get srcdoc():String;
  native public function set srcdoc(value:String):void;
  native public function get width():String;

  native public function set width(value:String):void;
  native public function get contentDocument():randori.webkit.dom.Document;
  native public function get contentWindow():randori.webkit.page.Window;
}


[JavaScript(export="false",name="HTMLImageElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('img')")]
public class randori.webkit.html.HTMLImageElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLImageElement():*;
  native public function get name():String;

  native public function set name(value:String):void;
  native public function get align():String;
  native public function set align(value:String):void;
  native public function get alt():String;
  native public function set alt(value:String):void;

  native public function get border():String;
  native public function set border(value:String):void;
  native public function get crossOrigin():String;
  native public function set crossOrigin(value:String):void;
  native public function get height():uint;

  native public function set height(value:uint):void;
  native public function get hspace():uint;
  native public function set hspace(value:uint):void;
  native public function get isMap():Boolean;
  native public function set isMap(value:Boolean):void;

  native public function get longDesc():String;
  native public function set longDesc(value:String):void;
  native public function get src():String;
  native public function set src(value:String):void;
  native public function get useMap():String;

  native public function set useMap(value:String):void;
  native public function get vspace():uint;
  native public function set vspace(value:uint):void;
  native public function get width():uint;
  native public function set width(value:uint):void;

  native public function get complete():Boolean;
  native public function get lowsrc():String;
  native public function set lowsrc(value:String):void;
  native public function get naturalHeight():uint;
  native public function get naturalWidth():uint;

  native public function get x():uint;
  native public function get y():uint;
}


[JavaScript(export="false",name="HTMLInputElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('input')")]
public class randori.webkit.html.HTMLInputElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLInputElement():*;
  native public function get accept():String;
  native public function set accept(value:String):void;

  native public function get alt():String;
  native public function set alt(value:String):void;
  native public function get autocomplete():String;
  native public function set autocomplete(value:String):void;
  native public function get autofocus():Boolean;

  native public function set autofocus(value:Boolean):void;
  native public function get defaultChecked():Boolean;
  native public function set defaultChecked(value:Boolean):void;
  native public function get checked():Boolean;
  native public function set checked(value:Boolean):void;

  native public function get dirName():String;
  native public function set dirName(value:String):void;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;
  native public function get form():randori.webkit.html.HTMLFormElement;

  native public function get files():randori.webkit.fileapi.FileList;
  native public function set files(value:randori.webkit.fileapi.FileList):void;
  native public function get formAction():String;
  native public function set formAction(value:String):void;
  native public function get formEnctype():String;

  native public function set formEnctype(value:String):void;
  native public function get formMethod():String;
  native public function set formMethod(value:String):void;
  native public function get formNoValidate():Boolean;
  native public function set formNoValidate(value:Boolean):void;

  native public function get formTarget():String;
  native public function set formTarget(value:String):void;
  native public function get height():uint;
  native public function set height(value:uint):void;
  native public function get indeterminate():Boolean;

  native public function set indeterminate(value:Boolean):void;
  native public function get list():randori.webkit.html.HTMLElement;
  native public function get max():String;
  native public function set max(value:String):void;
  native public function get maxLength():uint;

  native public function set maxLength(value:uint):void;
  native public function get min():String;
  native public function set min(value:String):void;
  native public function get multiple():Boolean;
  native public function set multiple(value:Boolean):void;

  native public function get name():String;
  native public function set name(value:String):void;
  native public function get pattern():String;
  native public function set pattern(value:String):void;
  native public function get placeholder():String;

  native public function set placeholder(value:String):void;
  [JavaScriptProperty(name="readOnly")]
  native public function get readOnly_():Boolean;
  native public function set readOnly_(value:Boolean):void;
  native public function get required():Boolean;
  native public function set required(value:Boolean):void;

  native public function get size():uint;
  native public function set size(value:uint):void;
  native public function get src():String;
  native public function set src(value:String):void;
  native public function get step():String;

  native public function set step(value:String):void;
  native public function get type():String;
  native public function set type(value:String):void;
  native public function get defaultValue():String;
  native public function set defaultValue(value:String):void;

  native public function get value():String;
  native public function set value(value:String):void;
  native public function get valueAsDate():Object;
  native public function set valueAsDate(value:Object):void;
  native public function get valueAsNumber():Number;

  native public function set valueAsNumber(value:Number):void;
  native public function stepUp(n:uint = 0):void;
  native public function stepDown(n:uint = 0):void;
  native public function get width():uint;
  native public function set width(value:uint):void;

  native public function get willValidate():Boolean;
  native public function get validity():randori.webkit.html.ValidityState;
  native public function get validationMessage():String;
  native public function checkValidity():Boolean;
  native public function setCustomValidity(error:String):void;

  native public function get labels():randori.webkit.dom.NodeList;
  native public function select():void;
  native public function get selectionStart():uint;
  native public function set selectionStart(value:uint):void;
  native public function get selectionEnd():uint;

  native public function set selectionEnd(value:uint):void;
  native public function get selectionDirection():String;
  native public function set selectionDirection(value:String):void;
  native public function setRangeText(replacement:String,start:uint,end:uint,selectionMode:String = null):void;
  native public function setSelectionRange(start:uint = null,end:uint = null,direction:String = ""):void;

  native public function get align():String;
  native public function set align(value:String):void;
  native public function get useMap():String;
  native public function set useMap(value:String):void;
  native public function get incremental():Boolean;

  native public function set incremental(value:Boolean):void;
  native public function get capture():String;
  native public function set capture(value:String):void;
}


[JavaScript(export="false",name="HTMLKeygenElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('keygen')")]
public class randori.webkit.html.HTMLKeygenElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLKeygenElement():*;
  native public function get autofocus():Boolean;

  native public function set autofocus(value:Boolean):void;
  native public function get challenge():String;
  native public function set challenge(value:String):void;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;

  native public function get form():randori.webkit.html.HTMLFormElement;
  native public function get keytype():String;
  native public function set keytype(value:String):void;
  native public function get name():String;
  native public function set name(value:String):void;

  native public function get type():String;
  native public function get willValidate():Boolean;
  native public function get validity():randori.webkit.html.ValidityState;
  native public function get validationMessage():String;
  native public function checkValidity():Boolean;

  native public function setCustomValidity(error:String):void;
  native public function get labels():randori.webkit.dom.NodeList;
}


[JavaScript(export="false",name="HTMLLIElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('li')")]
public class randori.webkit.html.HTMLLIElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLLIElement():*;
  native public function get type():String;
  native public function set type(value:String):void;

  native public function get value():uint;
  native public function set value(value:uint):void;
}


[JavaScript(export="false",name="HTMLLabelElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('label')")]
public class randori.webkit.html.HTMLLabelElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLLabelElement():*;
  native public function get form():randori.webkit.html.HTMLFormElement;
  native public function get htmlFor():String;

  native public function set htmlFor(value:String):void;
  native public function get control():randori.webkit.html.HTMLElement;
}


[JavaScript(export="false",name="HTMLLegendElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('legend')")]
public class randori.webkit.html.HTMLLegendElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLLegendElement():*;
  native public function get form():randori.webkit.html.HTMLFormElement;
  native public function get align():String;

  native public function set align(value:String):void;
}


[JavaScript(export="false",name="HTMLMapElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('map')")]
public class randori.webkit.html.HTMLMapElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLMapElement():*;
  native public function get areas():randori.webkit.html.HTMLCollection;
  native public function get name():String;
  native public function set name(value:String):void;
}


[JavaScript(export="false",name="HTMLMarqueeElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('marquee')")]
public class randori.webkit.html.HTMLMarqueeElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLMarqueeElement():*;
  native public function start():void;
  native public function stop():void;
  native public function get behavior():String;
  native public function set behavior(value:String):void;

  native public function get bgColor():String;
  native public function set bgColor(value:String):void;
  native public function get direction():String;
  native public function set direction(value:String):void;
  native public function get height():String;

  native public function set height(value:String):void;
  native public function get hspace():uint;
  native public function set hspace(value:uint):void;
  native public function get loop():uint;
  native public function set loop(value:uint):void;

  native public function get scrollAmount():uint;
  native public function set scrollAmount(value:uint):void;
  native public function get scrollDelay():uint;
  native public function set scrollDelay(value:uint):void;
  native public function get trueSpeed():Boolean;

  native public function set trueSpeed(value:Boolean):void;
  native public function get vspace():uint;
  native public function set vspace(value:uint):void;
  native public function get width():String;
  native public function set width(value:String):void;
}


[JavaScript(export="false",name="HTMLMenuElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('menu')")]
public class randori.webkit.html.HTMLMenuElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLMenuElement():*;
  native public function get compact():Boolean;
  native public function set compact(value:Boolean):void;
}


[JavaScript(export="false",name="HTMLMetaElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('meta')")]
public class randori.webkit.html.HTMLMetaElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLMetaElement():*;
  native public function get content():String;

  native public function set content(value:String):void;
  native public function get httpEquiv():String;
  native public function set httpEquiv(value:String):void;
  native public function get name():String;
  native public function set name(value:String):void;

  native public function get scheme():String;
  native public function set scheme(value:String):void;
}


[JavaScript(export="false",name="HTMLModElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('tbody')")]
public class randori.webkit.html.HTMLModElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLModElement():*;
  native public function get cite():String;
  native public function set cite(value:String):void;

  native public function get dateTime():String;
  native public function set dateTime(value:String):void;
}


[JavaScript(export="false",name="HTMLOListElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('ol')")]
public class randori.webkit.html.HTMLOListElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLOListElement():*;
  native public function get compact():Boolean;
  native public function set compact(value:Boolean):void;

  native public function get start():uint;
  native public function set start(value:uint):void;
  native public function get reversed():Boolean;
  native public function set reversed(value:Boolean):void;
  native public function get type():String;

  native public function set type(value:String):void;
}


[JavaScript(export="false",name="HTMLObjectElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('object')")]
public class randori.webkit.html.HTMLObjectElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLObjectElement():*;
  native public function get form():randori.webkit.html.HTMLFormElement;
  native public function get code():String;
  native public function set code(value:String):void;

  native public function get align():String;
  native public function set align(value:String):void;
  native public function get archive():String;
  native public function set archive(value:String):void;
  native public function get border():String;

  native public function set border(value:String):void;
  native public function get codeBase():String;
  native public function set codeBase(value:String):void;
  native public function get codeType():String;
  native public function set codeType(value:String):void;

  native public function get data():String;
  native public function set data(value:String):void;
  native public function get declare():Boolean;
  native public function set declare(value:Boolean):void;
  native public function get height():String;

  native public function set height(value:String):void;
  native public function get hspace():uint;
  native public function set hspace(value:uint):void;
  native public function get name():String;
  native public function set name(value:String):void;

  native public function get standby():String;
  native public function set standby(value:String):void;
  native public function get type():String;
  native public function set type(value:String):void;
  native public function get useMap():String;

  native public function set useMap(value:String):void;
  native public function get vspace():uint;
  native public function set vspace(value:uint):void;
  native public function get width():String;
  native public function set width(value:String):void;

  native public function get willValidate():Boolean;
  native public function get validity():randori.webkit.html.ValidityState;
  native public function get validationMessage():String;
  native public function checkValidity():Boolean;
  native public function setCustomValidity(error:String):void;

  native public function get contentDocument():randori.webkit.dom.Document;
}


[JavaScript(export="false",name="HTMLOptGroupElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('optgroup')")]
public class randori.webkit.html.HTMLOptGroupElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLOptGroupElement():*;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;
  native public function get label():String;

  native public function set label(value:String):void;
}


[JavaScript(export="false",name="HTMLOptionElement")]
[JavaScriptConstructor(factoryMethod="Option")]
public class randori.webkit.html.HTMLOptionElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLOptionElement(data:String = null,value:String = null,defaultSelected:Boolean = null,selected:Boolean = null):*;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;
  native public function get form():randori.webkit.html.HTMLFormElement;

  native public function get label():String;
  native public function set label(value:String):void;
  native public function get defaultSelected():Boolean;
  native public function set defaultSelected(value:Boolean):void;
  native public function get selected():Boolean;

  native public function set selected(value:Boolean):void;
  native public function get value():String;
  native public function set value(value:String):void;
  native public function get text():String;
  native public function set text(value:String):void;

  native public function get index():uint;
}


[JavaScript(export="false",name="HTMLOptionsCollection")]
public class randori.webkit.html.HTMLOptionsCollection extends randori.webkit.html.HTMLCollection
{
  native public function HTMLOptionsCollection():*;
  native public function get selectedIndex():uint;
  native public function set selectedIndex(value:uint):void;
  native public function add(option:randori.webkit.html.HTMLOptionElement = null,index:uint = 0):void;

  native public function remove(index:uint = null):void;
}


[JavaScript(export="false",name="HTMLOutputElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('output')")]
public class randori.webkit.html.HTMLOutputElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLOutputElement():*;
  native public function get htmlFor():randori.webkit.html.DOMSettableTokenList;
  native public function get form():randori.webkit.html.HTMLFormElement;
  native public function get name():String;

  native public function set name(value:String):void;
  native public function get type():String;
  native public function get defaultValue():String;
  native public function set defaultValue(value:String):void;
  native public function get value():String;

  native public function set value(value:String):void;
  native public function get willValidate():Boolean;
  native public function get validity():randori.webkit.html.ValidityState;
  native public function get validationMessage():String;
  native public function checkValidity():Boolean;

  native public function setCustomValidity(error:String):void;
  native public function get labels():randori.webkit.dom.NodeList;
}


[JavaScript(export="false",name="HTMLParagraphElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('p')")]
public class randori.webkit.html.HTMLParagraphElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLParagraphElement():*;
  native public function get align():String;
  native public function set align(value:String):void;
}


[JavaScript(export="false",name="HTMLParamElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('param')")]
public class randori.webkit.html.HTMLParamElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLParamElement():*;
  native public function get name():String;
  native public function set name(value:String):void;
  native public function get type():String;
  native public function set type(value:String):void;

  native public function get value():String;
  native public function set value(value:String):void;
  native public function get valueType():String;
  native public function set valueType(value:String):void;
}


[JavaScript(export="false",name="HTMLPreElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('pre')")]
public class randori.webkit.html.HTMLPreElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLPreElement():*;

  native public function get width():uint;
  native public function set width(value:uint):void;
  native public function get wrap():Boolean;
  native public function set wrap(value:Boolean):void;
}


[JavaScript(export="false",nativecondition="MICRODATA",name="HTMLPropertiesCollection")]
public class randori.webkit.html.HTMLPropertiesCollection extends randori.webkit.html.HTMLCollection
{
  native public function HTMLPropertiesCollection():*;

  native public function get names():randori.webkit.dom.DOMStringList;
}


[JavaScript(export="false",name="HTMLQuoteElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('quote')")]
public class randori.webkit.html.HTMLQuoteElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLQuoteElement():*;
  native public function get cite():String;
  native public function set cite(value:String):void;
}


[JavaScript(export="false",name="HTMLScriptElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('script')")]
public class randori.webkit.html.HTMLScriptElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLScriptElement():*;

  native public function get text():String;
  native public function set text(value:String):void;
  native public function get htmlFor():String;
  native public function set htmlFor(value:String):void;
  native public function get event():String;

  native public function set event(value:String):void;
  native public function get charset():String;
  native public function set charset(value:String):void;
  native public function get async():Boolean;
  native public function set async(value:Boolean):void;

  native public function get defer():Boolean;
  native public function set defer(value:Boolean):void;
  native public function get src():String;
  native public function set src(value:String):void;
  native public function get type():String;

  native public function set type(value:String):void;
  native public function get crossOrigin():String;
  native public function set crossOrigin(value:String):void;
  native public function get nonce():String;
  native public function set nonce(value:String):void;
}


[JavaScript(export="false",name="HTMLSelectElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('select')")]
public dynamic class randori.webkit.html.HTMLSelectElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLSelectElement():*;
  native public function get autofocus():Boolean;
  native public function set autofocus(value:Boolean):void;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;

  native public function get form():randori.webkit.html.HTMLFormElement;
  native public function get multiple():Boolean;
  native public function set multiple(value:Boolean):void;
  native public function get name():String;
  native public function set name(value:String):void;

  native public function get required():Boolean;
  native public function set required(value:Boolean):void;
  native public function get size():uint;
  native public function set size(value:uint):void;
  native public function get type():String;

  native public function get options():randori.webkit.html.HTMLOptionsCollection;
  native public function get length():uint;
  native public function set length(value:uint):void;
  native public function add(element:randori.webkit.html.HTMLElement = null,before:randori.webkit.html.HTMLElement = null):void;
  native public function get selectedOptions():randori.webkit.html.HTMLCollection;

  native public function get selectedIndex():uint;
  native public function set selectedIndex(value:uint):void;
  native public function get value():String;
  native public function set value(value:String):void;
  native public function get willValidate():Boolean;

  native public function get validity():randori.webkit.html.ValidityState;
  native public function get validationMessage():String;
  native public function checkValidity():Boolean;
  native public function setCustomValidity(error:String):void;
  native public function get labels():randori.webkit.dom.NodeList;
}


[JavaScript(export="false",nativecondition="VIDEO",name="HTMLSourceElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('source')")]
public class randori.webkit.html.HTMLSourceElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLSourceElement():*;
  native public function get src():String;
  native public function set src(value:String):void;
  native public function get type():String;
  native public function set type(value:String):void;

  native public function get media():String;
  native public function set media(value:String):void;
}


[JavaScript(export="false",name="HTMLSpanElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('span')")]
public class randori.webkit.html.HTMLSpanElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLSpanElement():*;
}


[JavaScript(export="false",name="HTMLStyleElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('style')")]
public class randori.webkit.html.HTMLStyleElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLStyleElement():*;
  native public function get disabled():Boolean;

  native public function set disabled(value:Boolean):void;
  native public function get scoped():Boolean;
  native public function set scoped(value:Boolean):void;
  native public function get media():String;
  native public function set media(value:String):void;

  native public function get type():String;
  native public function set type(value:String):void;
  native public function get sheet():randori.webkit.css.StyleSheet;
}


[JavaScript(export="false",name="HTMLTableCaptionElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('caption')")]
public class randori.webkit.html.HTMLTableCaptionElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLTableCaptionElement():*;
  native public function get align():String;

  native public function set align(value:String):void;
}


[JavaScript(export="false",name="HTMLTableCellElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('td')")]
public class randori.webkit.html.HTMLTableCellElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLTableCellElement():*;
  native public function get cellIndex():uint;
  native public function get abbr():String;
  native public function set abbr(value:String):void;

  native public function get align():String;
  native public function set align(value:String):void;
  native public function get axis():String;
  native public function set axis(value:String):void;
  native public function get bgColor():String;

  native public function set bgColor(value:String):void;
  native public function get ch():String;
  native public function set ch(value:String):void;
  native public function get chOff():String;
  native public function set chOff(value:String):void;

  native public function get colSpan():uint;
  native public function set colSpan(value:uint):void;
  native public function get headers():String;
  native public function set headers(value:String):void;
  native public function get height():String;

  native public function set height(value:String):void;
  native public function get noWrap():Boolean;
  native public function set noWrap(value:Boolean):void;
  native public function get rowSpan():uint;
  native public function set rowSpan(value:uint):void;

  native public function get scope():String;
  native public function set scope(value:String):void;
  native public function get vAlign():String;
  native public function set vAlign(value:String):void;
  native public function get width():String;

  native public function set width(value:String):void;
}


[JavaScript(export="false",name="HTMLTableColElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('col')")]
public class randori.webkit.html.HTMLTableColElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLTableColElement():*;
  native public function get align():String;
  native public function set align(value:String):void;
  native public function get ch():String;

  native public function set ch(value:String):void;
  native public function get chOff():String;
  native public function set chOff(value:String):void;
  native public function get span():uint;
  native public function set span(value:uint):void;

  native public function get vAlign():String;
  native public function set vAlign(value:String):void;
  native public function get width():String;
  native public function set width(value:String):void;
}


[JavaScript(export="false",name="HTMLTableElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('table')")]
public class randori.webkit.html.HTMLTableElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLTableElement():*;

  native public function get caption():randori.webkit.html.HTMLTableCaptionElement;
  native public function set caption(value:randori.webkit.html.HTMLTableCaptionElement):void;
  native public function get tHead():randori.webkit.html.HTMLTableSectionElement;
  native public function set tHead(value:randori.webkit.html.HTMLTableSectionElement):void;
  native public function get tFoot():randori.webkit.html.HTMLTableSectionElement;

  native public function set tFoot(value:randori.webkit.html.HTMLTableSectionElement):void;
  native public function get rows():randori.webkit.html.HTMLCollection;
  native public function get tBodies():randori.webkit.html.HTMLCollection;
  native public function get align():String;
  native public function set align(value:String):void;

  native public function get bgColor():String;
  native public function set bgColor(value:String):void;
  native public function get border():String;
  native public function set border(value:String):void;
  native public function get cellPadding():String;

  native public function set cellPadding(value:String):void;
  native public function get cellSpacing():String;
  native public function set cellSpacing(value:String):void;
  native public function get frame():String;
  native public function set frame(value:String):void;

  native public function get rules():String;
  native public function set rules(value:String):void;
  native public function get summary():String;
  native public function set summary(value:String):void;
  native public function get width():String;

  native public function set width(value:String):void;
  native public function createTHead():randori.webkit.html.HTMLElement;
  native public function deleteTHead():void;
  native public function createTFoot():randori.webkit.html.HTMLElement;
  native public function deleteTFoot():void;

  native public function createTBody():randori.webkit.html.HTMLElement;
  native public function createCaption():randori.webkit.html.HTMLElement;
  native public function deleteCaption():void;
  native public function insertRow(index:uint = null):randori.webkit.html.HTMLElement;
  native public function deleteRow(index:uint = null):void;
}


[JavaScript(export="false",name="HTMLTableRowElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('tr')")]
public class randori.webkit.html.HTMLTableRowElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLTableRowElement():*;
  native public function get rowIndex():uint;
  native public function get sectionRowIndex():uint;
  native public function get cells():randori.webkit.html.HTMLCollection;
  native public function get align():String;

  native public function set align(value:String):void;
  native public function get bgColor():String;
  native public function set bgColor(value:String):void;
  native public function get ch():String;
  native public function set ch(value:String):void;

  native public function get chOff():String;
  native public function set chOff(value:String):void;
  native public function get vAlign():String;
  native public function set vAlign(value:String):void;
  native public function insertCell(index:uint = null):randori.webkit.html.HTMLElement;

  native public function deleteCell(index:uint = null):void;
}


[JavaScript(export="false",name="HTMLTableSectionElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('tbody')")]
public class randori.webkit.html.HTMLTableSectionElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLTableSectionElement():*;
  native public function get align():String;
  native public function set align(value:String):void;
  native public function get ch():String;

  native public function set ch(value:String):void;
  native public function get chOff():String;
  native public function set chOff(value:String):void;
  native public function get vAlign():String;
  native public function set vAlign(value:String):void;

  native public function get rows():randori.webkit.html.HTMLCollection;
  native public function insertRow(index:uint = null):randori.webkit.html.HTMLElement;
  native public function deleteRow(index:uint = null):void;
}


[JavaScript(export="false",nativecondition="TEMPLATE_ELEMENT",name="HTMLTemplateElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('template')")]
public class randori.webkit.html.HTMLTemplateElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLTemplateElement():*;
  native public function get content():randori.webkit.dom.DocumentFragment;
}


[JavaScript(export="false",name="HTMLTextAreaElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('textarea')")]
public class randori.webkit.html.HTMLTextAreaElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLTextAreaElement():*;
  native public function get autofocus():Boolean;
  native public function set autofocus(value:Boolean):void;
  native public function get cols():uint;
  native public function set cols(value:uint):void;

  native public function get dirName():String;
  native public function set dirName(value:String):void;
  native public function get disabled():Boolean;
  native public function set disabled(value:Boolean):void;
  native public function get form():randori.webkit.html.HTMLFormElement;

  native public function get maxLength():uint;
  native public function set maxLength(value:uint):void;
  native public function get name():String;
  native public function set name(value:String):void;
  native public function get placeholder():String;

  native public function set placeholder(value:String):void;
  [JavaScriptProperty(name="readOnly")]
  native public function get readOnly_():Boolean;
  native public function set readOnly_(value:Boolean):void;
  native public function get required():Boolean;
  native public function set required(value:Boolean):void;

  native public function get rows():uint;
  native public function set rows(value:uint):void;
  native public function get wrap():String;
  native public function set wrap(value:String):void;
  native public function get type():String;

  native public function get defaultValue():String;
  native public function set defaultValue(value:String):void;
  native public function get value():String;
  native public function set value(value:String):void;
  native public function get textLength():uint;

  native public function get willValidate():Boolean;
  native public function get validity():randori.webkit.html.ValidityState;
  native public function get validationMessage():String;
  native public function checkValidity():Boolean;
  native public function setCustomValidity(error:String):void;

  native public function get labels():randori.webkit.dom.NodeList;
  native public function select():void;
  native public function get selectionStart():uint;
  native public function set selectionStart(value:uint):void;
  native public function get selectionEnd():uint;

  native public function set selectionEnd(value:uint):void;
  native public function get selectionDirection():String;
  native public function set selectionDirection(value:String):void;
  native public function setRangeText(replacement:String,start:uint,end:uint,selectionMode:String = null):void;
  native public function setSelectionRange(start:uint = null,end:uint = null,direction:String = ""):void;
}


[JavaScript(export="false",name="HTMLTitleElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('title')")]
public class randori.webkit.html.HTMLTitleElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLTitleElement():*;
  native public function get text():String;
  native public function set text(value:String):void;
}


[JavaScript(export="false",nativecondition="VIDEO_TRACK",name="HTMLTrackElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('track')")]
public class randori.webkit.html.HTMLTrackElement extends randori.webkit.html.HTMLElement
{
  native public function HTMLTrackElement():*;
  native public function get kind():String;

  native public function set kind(value:String):void;
  native public function get src():String;
  native public function set src(value:String):void;
  native public function get srclang():String;
  native public function set srclang(value:String):void;

  native public function get label():String;
  native public function set label(value:String):void;
  [JavaScriptProperty(name="default")]
  native public function get default_():Boolean;
  native public function set default_(value:Boolean):void;
  native public function get readyState():uint;

  native public function get track():randori.webkit.html.track.TextTrack;
  static native public const NONE:uint = 0;
  static native public const LOADING:uint = 1;
  static native public const LOADED:uint = 2;
  static native public const ERROR:uint = 3;
}


[JavaScript(export="false",name="HTMLUListElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('ul')")]
public class randori.webkit.html.HTMLUListElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLUListElement():*;
  native public function get compact():Boolean;
  native public function set compact(value:Boolean):void;
  native public function get type():String;
  native public function set type(value:String):void;
}


[JavaScript(export="false",name="HTMLUnknownElement")]
[JavaScriptConstructor(factoryMethod="document.createElement('unknown')")]
public class randori.webkit.html.HTMLUnknownElement extends randori.webkit.html.HTMLElement
{

  native public function HTMLUnknownElement():*;
}


[JavaScript(export="false",nativecondition="VIDEO",name="HTMLVideoElement")]
public class randori.webkit.html.HTMLVideoElement extends randori.webkit.html.HTMLMediaElement
{
  native public function HTMLVideoElement():*;
  native public function get width():uint;
  native public function set width(value:uint):void;
  native public function get height():uint;

  native public function set height(value:uint):void;
  native public function get videoWidth():uint;
  native public function get videoHeight():uint;
  native public function get poster():String;
  native public function set poster(value:String):void;
}


[JavaScript(export="false",name="ImageData")]
public class randori.webkit.html.ImageData extends Object
{

  native public function ImageData():*;
  native public function get width():uint;
  native public function get height():uint;
}


[JavaScript(export="false",nativecondition="VIDEO",name="MediaController")]
public class randori.webkit.html.MediaController extends Object
{
  native public function MediaController():*;
  native public function get buffered():randori.webkit.html.TimeRanges;

  native public function get seekable():randori.webkit.html.TimeRanges;
  native public function get duration():Number;
  native public function get currentTime():Number;
  native public function set currentTime(value:Number):void;
  native public function get paused():Boolean;

  native public function get played():randori.webkit.html.TimeRanges;
  native public function get playbackState():String;
  native public function play():void;
  native public function pause():void;
  native public function unpause():void;

  native public function get defaultPlaybackRate():Number;
  native public function set defaultPlaybackRate(value:Number):void;
  native public function get playbackRate():Number;
  native public function set playbackRate(value:Number):void;
  native public function get volume():Number;

  native public function set volume(value:Number):void;
  native public function get muted():Boolean;
  native public function set muted(value:Boolean):void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;

  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",name="MediaError")]
public class randori.webkit.html.MediaError extends Object
{
  native public function MediaError():*;
  native public function get code():uint;
  static native public const MEDIA_ERR_ABORTED:uint = 1;
  static native public const MEDIA_ERR_NETWORK:uint = 2;

  static native public const MEDIA_ERR_DECODE:uint = 3;
  static native public const MEDIA_ERR_SRC_NOT_SUPPORTED:uint = 4;
}


[JavaScript(export="false",name="MediaKeyError")]
public class randori.webkit.html.MediaKeyError extends Object
{
  native public function MediaKeyError():*;
  native public function get code():uint;
  native public function get systemCode():uint;

  static native public const MEDIA_KEYERR_UNKNOWN:uint = 1;
  static native public const MEDIA_KEYERR_CLIENT:uint = 2;
  static native public const MEDIA_KEYERR_SERVICE:uint = 3;
  static native public const MEDIA_KEYERR_OUTPUT:uint = 4;
  static native public const MEDIA_KEYERR_HARDWARECHANGE:uint = 5;

  static native public const MEDIA_KEYERR_DOMAIN:uint = 6;
}


[JavaScript(export="false",nativecondition="ENCRYPTED_MEDIA",name="MediaKeyEvent")]
public class randori.webkit.html.MediaKeyEvent extends randori.webkit.dom.DomEvent
{
  native public function MediaKeyEvent():*;
  native public function get keySystem():String;
  native public function get sessionId():String;
  native public function get initData():Object;

  native public function get message():Object;
  native public function get defaultURL():String;
  native public function get errorCode():randori.webkit.html.MediaKeyError;
  native public function get systemCode():uint;
}


[JavaScript(export="false",name="TextMetrics")]
public class randori.webkit.html.TextMetrics extends Object
{
  native public function TextMetrics():*;

  native public function get width():Number;
}


[JavaScript(export="false",nativecondition="VIDEO",name="TimeRanges")]
public class randori.webkit.html.TimeRanges extends Object
{
  native public function TimeRanges():*;
  native public function get length():uint;
  native public function start(index:uint):Number;
  native public function end(index:uint):Number;
}


[JavaScript(export="false",nativecondition="BLOB",name="URL")]
public class randori.webkit.html.URL extends Object
{

  native public function URL():*;
  native public function createObjectURL(blob:randori.webkit.fileapi.Blob):String;
  native public function revokeObjectURL(url:String):void;
}


[JavaScript(export="false",omitconstructor="true",name="DOMApplicationCache")]
public class randori.webkit.loader.appcache.DOMApplicationCache extends Object
{
  native public function DOMApplicationCache():*;
  native public function get status():uint;

  native public function update():void;
  native public function swapCache():void;
  native public function abort():void;
  native public function get onchecking():Function;
  native public function set onchecking(value:Function):void;

  native public function get onerror():Function;
  native public function set onerror(value:Function):void;
  native public function get onnoupdate():Function;
  native public function set onnoupdate(value:Function):void;
  native public function get ondownloading():Function;

  native public function set ondownloading(value:Function):void;
  native public function get onprogress():Function;
  native public function set onprogress(value:Function):void;
  native public function get onupdateready():Function;
  native public function set onupdateready(value:Function):void;

  native public function get oncached():Function;
  native public function set oncached(value:Function):void;
  native public function get onobsolete():Function;
  native public function set onobsolete(value:Function):void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;

  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
  static native public const UNCACHED:uint = 0;
  static native public const IDLE:uint = 1;
  static native public const CHECKING:uint = 2;

  static native public const DOWNLOADING:uint = 3;
  static native public const UPDATEREADY:uint = 4;
  static native public const OBSOLETE:uint = 5;
}


[JavaScript(export="false",name="MediaKeyMessageEvent")]
public class randori.webkit.modules.encryptedmedia.MediaKeyMessageEvent extends randori.webkit.dom.DomEvent
{
  native public function MediaKeyMessageEvent():*;
  native public function get message():Object;

  native public function get destinationURL():String;
}


[JavaScript(export="false",name="MediaKeyNeededEvent")]
public class randori.webkit.modules.encryptedmedia.MediaKeyNeededEvent extends randori.webkit.dom.DomEvent
{
  native public function MediaKeyNeededEvent():*;
  native public function get initData():Object;
}


[JavaScript(export="false",name="MediaKeys")]
public class randori.webkit.modules.encryptedmedia.MediaKeys extends Object
{
  native public function MediaKeys():*;
  native public function createSession(type:String = "",initData:Object = null):randori.webkit.modules.encryptedmedia.MediaKeySession;

  native public function get keySystem():String;
}


[JavaScript(export="false",nativecondition="PROXIMITY_EVENTS",name="DeviceProximityEvent")]
public class randori.webkit.modules.proximity.DeviceProximityEvent extends randori.webkit.dom.DomEvent
{
  native public function DeviceProximityEvent():*;
  native public function get value():Number;
  native public function get min():Number;
  native public function get max():Number;
}


[JavaScript(export="false",omitconstructor="true",name="BarInfo")]
public class randori.webkit.page.BarInfo extends Object
{

  native public function BarInfo():*;
  native public function get visible():Boolean;
}


[JavaScript(export="false",omitconstructor="true",name="Console")]
public class randori.webkit.page.Console extends Object
{
  native public function Console():*;
  native public function debug(... rest):void;
  native public function error(... rest):void;

  native public function info(... rest):void;
  native public function log(... rest):void;
  native public function warn(... rest):void;
  native public function dir(... rest):void;
  native public function dirxml(... rest):void;

  native public function table(... rest):void;
  [JavaScriptMethod(name="trace")]
  native public function trace_(... rest):void;
  native public function assert(condition:Boolean,... rest):void;
  native public function count(... rest):void;
  native public function markTimeline(... rest):void;

  native public function time(title:String):void;
  native public function timeEnd(title:String):void;
  native public function timeStamp(... rest):void;
  native public function group(... rest):void;
  native public function groupCollapsed(... rest):void;

  native public function groupEnd():void;
  native public function clear(... rest):void;
  native public function get memory():randori.webkit.page.MemoryInfo;
}


[JavaScript(export="false",omitconstructor="true",name="Crypto")]
public class randori.webkit.page.Crypto extends Object
{
  native public function Crypto():*;
  native public function getRandomValues(array:randori.webkit.html.canvas.ArrayBufferView):randori.webkit.html.canvas.ArrayBufferView;
}


[JavaScript(export="false",name="EventSource")]
public class randori.webkit.page.EventSource extends Object
{

  native public function EventSource(url:String,eventSourceInit:Object = null):*;
  [JavaScriptProperty(name="URL")]
  native public function get URL_():String;
  native public function get url():String;
  native public function get withCredentials():Boolean;
  native public function get readyState():uint;

  native public function get onopen():Function;
  native public function set onopen(value:Function):void;
  native public function get onmessage():Function;
  native public function set onmessage(value:Function):void;
  native public function get onerror():Function;

  native public function set onerror(value:Function):void;
  native public function close():void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;

  static native public const CONNECTING:uint = 0;
  static native public const OPEN:uint = 1;
  static native public const CLOSED:uint = 2;
}


[JavaScript(export="false",omitconstructor="true",name="History")]
public class randori.webkit.page.History extends Object
{
  native public function History():*;
  native public function get length():uint;

  native public function get state():Object;
  native public function back():void;
  native public function forward():void;
  native public function go(distance:uint = null):void;
  native public function pushState(data:*,title:String,url:String = ""):void;

  native public function replaceState(data:*,title:String,url:String = ""):void;
}


[JavaScript(export="false",omitconstructor="true",name="Location")]
public class randori.webkit.page.Location extends Object
{
  native public function Location():*;
  native public function get href():String;
  native public function set href(value:String):void;
  native public function assign(url:String = ""):void;

  native public function replace(url:String = ""):void;
  native public function reload():void;
  native public function get protocol():String;
  native public function set protocol(value:String):void;
  native public function get host():String;

  native public function set host(value:String):void;
  native public function get hostname():String;
  native public function set hostname(value:String):void;
  native public function get port():String;
  native public function set port(value:String):void;

  native public function get pathname():String;
  native public function set pathname(value:String):void;
  native public function get search():String;
  native public function set search(value:String):void;
  native public function get hash():String;

  native public function set hash(value:String):void;
  native public function get origin():String;
  native public function get ancestorOrigins():randori.webkit.dom.DOMStringList;
  native public function toString():String;
}


[JavaScript(export="false",omitconstructor="true",name="Navigator")]
public class randori.webkit.page.Navigator extends Object
{
  native public function Navigator():*;

  native public function get appCodeName():String;
  native public function get appName():String;
  native public function get appVersion():String;
  native public function get language():String;
  native public function get userAgent():String;

  native public function get platform():String;
  native public function get plugins():Object;
  native public function get mimeTypes():Object;
  native public function get product():String;
  native public function get productSub():String;

  native public function get vendor():String;
  native public function get vendorSub():String;
  native public function get cookieEnabled():Boolean;
  native public function javaEnabled():Boolean;
  native public function get onLine():Boolean;

  native public function getStorageUpdates():void;
}


[JavaScript(export="false",omitconstructor="true",name="Screen")]
public class randori.webkit.page.Screen extends Object
{
  native public function Screen():*;
  native public function get height():uint;
  native public function get width():uint;
  native public function get colorDepth():uint;

  native public function get pixelDepth():uint;
  native public function get availLeft():uint;
  native public function get availTop():uint;
  native public function get availHeight():uint;
  native public function get availWidth():uint;
}


[JavaScript(export="false",name="Selection")]
public class randori.webkit.page.Selection extends Object
{

  native public function Selection():*;
  native public function get anchorNode():randori.webkit.dom.Node;
  native public function get anchorOffset():uint;
  native public function get focusNode():randori.webkit.dom.Node;
  native public function get focusOffset():uint;

  native public function get isCollapsed():Boolean;
  native public function get rangeCount():uint;
  native public function collapse(node:randori.webkit.dom.Node = null,index:uint = null):void;
  native public function collapseToEnd():void;
  native public function collapseToStart():void;

  native public function deleteFromDocument():void;
  native public function containsNode(node:randori.webkit.dom.Node = null,allowPartial:Boolean = null):Boolean;
  native public function selectAllChildren(node:randori.webkit.dom.Node = null):void;
  native public function extend(node:randori.webkit.dom.Node = null,offset:uint = null):void;
  native public function getRangeAt(index:uint = null):randori.webkit.dom.Range;

  native public function removeAllRanges():void;
  native public function addRange(range:randori.webkit.dom.Range = null):void;
  native public function toString():String;
  native public function get baseNode():randori.webkit.dom.Node;
  native public function get baseOffset():uint;

  native public function get extentNode():randori.webkit.dom.Node;
  native public function get extentOffset():uint;
  native public function get type():String;
  native public function modify(alter:String = "",direction:String = "",granularity:String = ""):void;
  native public function setBaseAndExtent(baseNode:randori.webkit.dom.Node = null,baseOffset:uint = null,extentNode:randori.webkit.dom.Node = null,extentOffset:uint = null):void;

  native public function setPosition(node:randori.webkit.dom.Node = null,offset:uint = null):void;
  native public function empty():void;
}


[JavaScript(export="false",nativecondition="INPUT_SPEECH",name="SpeechInputEvent")]
public class randori.webkit.page.SpeechInputEvent extends randori.webkit.dom.DomEvent
{
  native public function SpeechInputEvent():*;
  native public function get results():randori.webkit.page.SpeechInputResultList;
}


[JavaScript(export="false",name="MimeType")]
public class randori.webkit.plugins.MimeType extends Object
{
  native public function MimeType():*;

  native public function get type():String;
  native public function get suffixes():String;
  native public function get description():String;
  native public function get enabledPlugin():randori.webkit.plugins.Plugin;
}


[JavaScript(export="false",name="Plugin")]
public dynamic class randori.webkit.plugins.Plugin extends Object
{
  native public function Plugin():*;

  native public function get name():String;
  native public function get filename():String;
  native public function get description():String;
  native public function get length():uint;
}


[JavaScript(export="false",name="Storage")]
public class randori.webkit.storage.Storage extends Object
{
  native public function Storage():*;

  native public function get length():uint;
  native public function key(index:uint):String;
  native public function getItem(key:String):String;
  native public function setItem(key:String,data:String):void;
  native public function removeItem(key:String):void;

  native public function clear():void;
}


[JavaScript(export="false",name="StorageEvent")]
public class randori.webkit.storage.StorageEvent extends randori.webkit.dom.DomEvent
{
  native public function StorageEvent():*;
  native public function get key():String;
  native public function get oldValue():String;
  native public function get newValue():String;

  native public function get url():String;
  native public function get storageArea():randori.webkit.storage.Storage;
  native public function initStorageEvent(typeArg:String = "",canBubbleArg:Boolean = null,cancelableArg:Boolean = null,keyArg:String = "",oldValueArg:String = "",newValueArg:String = "",urlArg:String = "",storageAreaArg:randori.webkit.storage.Storage = null):void;
}


[JavaScript(export="false",nativecondition="SVG",name="SVGZoomEvent")]
public class randori.webkit.svg.SVGZoomEvent extends randori.webkit.dom.UIEvent
{
  native public function SVGZoomEvent():*;
  native public function get zoomRectScreen():randori.webkit.svg.SVGRect;

  native public function get previousScale():Number;
  native public function get previousTranslate():randori.webkit.svg.SVGPoint;
  native public function get newScale():Number;
  native public function get newTranslate():randori.webkit.svg.SVGPoint;
}


[JavaScript(export="false",nativecondition="WORKERS",name="AbstractWorker")]
public class randori.webkit.workers.AbstractWorker extends Object
{
  native public function AbstractWorker():*;

  native public function get onerror():Function;
  native public function set onerror(value:Function):void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",nativecondition="SHARED_WORKERS",name="SharedWorker")]
public class randori.webkit.workers.SharedWorker extends randori.webkit.workers.AbstractWorker
{

  native public function SharedWorker(scriptURL:String,name:String = null):*;
  native public function get port():randori.webkit.dom.MessagePort;
}


[JavaScript(export="false",nativecondition="WORKERS",name="Worker")]
public class randori.webkit.workers.Worker extends randori.webkit.workers.AbstractWorker
{
  native public function Worker(scriptUrl:String):*;
  native public function get onmessage():Function;
  native public function set onmessage(value:Function):void;

  native public function postMessage(message:Object,messagePorts:Array = null):void;
  native public function terminate():void;
}


[JavaScript(export="false",name="DOMParser")]
public class randori.webkit.xml.DOMParser extends Object
{
  native public function DOMParser():*;
  native public function parseFromString(str:String = "",contentType:String = ""):randori.webkit.dom.Document;
}


[JavaScript(export="false",name="XMLHttpRequestProgressEvent")]
public class randori.webkit.xml.XMLHttpRequestProgressEvent extends randori.webkit.dom.ProgressEvent
{
  native public function XMLHttpRequestProgressEvent():*;

  native public function get position():Number;
  native public function get totalSize():Number;
}


[JavaScript(export="false",name="XMLHttpRequestUpload")]
public class randori.webkit.xml.XMLHttpRequestUpload extends Object
{
  native public function XMLHttpRequestUpload():*;
  native public function get onabort():Function;
  native public function set onabort(value:Function):void;

  native public function get onerror():Function;
  native public function set onerror(value:Function):void;
  native public function get onload():Function;
  native public function set onload(value:Function):void;
  native public function get onloadend():Function;

  native public function set onloadend(value:Function):void;
  native public function get onloadstart():Function;
  native public function set onloadstart(value:Function):void;
  native public function get onprogress():Function;
  native public function set onprogress(value:Function):void;

  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",name="XMLSerializer")]
public class randori.webkit.xml.XMLSerializer extends Object
{
  native public function XMLSerializer():*;
  native public function serializeToString(node:randori.webkit.dom.Node = null):String;
}


[JavaScript(export="false",name="XPathEvaluator")]
public class randori.webkit.xml.XPathEvaluator extends Object
{

  native public function XPathEvaluator():*;
  native public function createExpression(expression:String = "",resolver:randori.webkit.xml.XPathNSResolver = null):randori.webkit.xml.XPathExpression;
  native public function createNSResolver(nodeResolver:randori.webkit.dom.Node = null):randori.webkit.xml.XPathNSResolver;
  native public function evaluate(expression:String = "",contextNode:randori.webkit.dom.Node = null,resolver:randori.webkit.xml.XPathNSResolver = null,type:uint = null,inResult:randori.webkit.xml.XPathResult = null):randori.webkit.xml.XPathResult;
}


[JavaScript(export="false",name="XPathResult")]
public class randori.webkit.xml.XPathResult extends Object
{
  native public function XPathResult():*;

  native public function get resultType():uint;
  native public function get numberValue():Number;
  native public function get stringValue():String;
  native public function get booleanValue():Boolean;
  native public function get singleNodeValue():randori.webkit.dom.Node;

  native public function get invalidIteratorState():Boolean;
  native public function get snapshotLength():uint;
  native public function iterateNext():randori.webkit.dom.Node;
  native public function snapshotItem(index:uint = null):randori.webkit.dom.Node;
  static native public const ANY_TYPE:uint = 0;

  static native public const NUMBER_TYPE:uint = 1;
  static native public const STRING_TYPE:uint = 2;
  static native public const BOOLEAN_TYPE:uint = 3;
  static native public const UNORDERED_NODE_ITERATOR_TYPE:uint = 4;
  static native public const ORDERED_NODE_ITERATOR_TYPE:uint = 5;

  static native public const UNORDERED_NODE_SNAPSHOT_TYPE:uint = 6;
  static native public const ORDERED_NODE_SNAPSHOT_TYPE:uint = 7;
  static native public const ANY_UNORDERED_NODE_TYPE:uint = 8;
  static native public const FIRST_ORDERED_NODE_TYPE:uint = 9;
}


[JavaScript(export="false",nativecondition="XSLT",name="XSLTProcessor")]
public class randori.webkit.xml.XSLTProcessor extends Object
{
  native public function XSLTProcessor():*;

  native public function importStylesheet(stylesheet:randori.webkit.dom.Node = null):void;
  native public function transformToFragment(source:randori.webkit.dom.Node = null,docVal:randori.webkit.dom.Document = null):randori.webkit.dom.DocumentFragment;
  native public function transformToDocument(source:randori.webkit.dom.Node = null):randori.webkit.dom.Document;
  native public function setParameter(namespaceURI:String,localName:String,value:String):void;
  native public function getParameter(namespaceURI:String,localName:String):String;

  native public function removeParameter(namespaceURI:String,localName:String):void;
  native public function clearParameters():void;
  native public function reset():void;
}


[JavaScript(export="false",name="Object",mode="json")]
public class guice.reflection.MethodInjectionPoint extends Object
{
  native public function MethodInjectionPoint():*;
  native public var n:String;

  native public var p:Vector.<guice.reflection.InjectionPoint>;
}


public class guice.binding.BindingFactory extends Object
{
  native public function BindingFactory(binder:guice.binding.Binder,typeDefinition:guice.reflection.TypeDefinition):*;
  native private var binder:guice.binding.Binder;
  native private var typeDefinition:guice.reflection.TypeDefinition;
  native private var scope:int;

  native public function to(dependency:Class):guice.binding.AbstractBinding;
  native public function toInstance(instance:Object):guice.binding.AbstractBinding;
  native public function toProvider(providerType:Class):guice.binding.AbstractBinding;
  native public function inScope(scope:int):BindingFactory;
  native private function withDecoration(abstractBinding:guice.binding.AbstractBinding):guice.binding.AbstractBinding;
}


public class guice.binding.AbstractBinding extends Object
{

  native public function AbstractBinding():*;
  native public function provide(injector:guice.Injector):Object;
  native public function getTypeName():String;
  native public function getScope():int;
}


public class guice.binding.InstanceBinding extends guice.binding.AbstractBinding
{
  native public function InstanceBinding(typeDefinition:guice.reflection.TypeDefinition,instance:Object):*;

  native private var typeDefinition:guice.reflection.TypeDefinition;
  native private var instance:Object;
  native public override function getTypeName():String;
  native public override function getScope():int;
  native public override function provide(injector:guice.Injector):Object;
}


public class guice.binding.TypeBinding extends guice.binding.AbstractBinding
{

  native public function TypeBinding(typeDefinition:guice.reflection.TypeDefinition,dependencyDefinition:guice.reflection.TypeDefinition):*;
  native private var typeDefinition:guice.reflection.TypeDefinition;
  native private var dependencyDefinition:guice.reflection.TypeDefinition;
  native public override function getTypeName():String;
  native public override function getScope():int;

  native public override function provide(injector:guice.Injector):Object;
}


public class guice.binding.ProviderBinding extends guice.binding.AbstractBinding
{
  native public function ProviderBinding(typeDefinition:guice.reflection.TypeDefinition,providerTypeDefinition:guice.reflection.TypeDefinition):*;
  native private var typeDefinition:guice.reflection.TypeDefinition;
  native private var providerTypeDefinition:guice.reflection.TypeDefinition;
  native private var provider:guice.binding.provider.AbstractProvider;

  native public override function getTypeName():String;
  native public override function getScope():int;
  native public override function provide(injector:guice.Injector):Object;
}


[JavaScript(export="false",omitconstructor="true",name="MediaQueryListListener")]
public class randori.webkit.css.MediaQueryListListener extends Object
{
  native public function MediaQueryListListener():*;
  native public function queryChanged(list:randori.webkit.css.MediaQueryList = null):void;
}


[JavaScript(export="false",nativecondition="DATA_TRANSFER_ITEMS",name="DataTransferItemList")]
public dynamic class randori.webkit.dom.DataTransferItemList extends Object
{

  native public function DataTransferItemList():*;
  native public function get length():uint;
  native public function clear():void;
  native public function add(data:String = "",type:String = ""):void;
}


[JavaScript(export="false",name="MessagePort")]
public class randori.webkit.dom.MessagePort extends Object
{
  native public function MessagePort():*;

  native public function postMessage(message:*,messagePorts:Array = null):void;
  native public function start():void;
  native public function close():void;
  native public function get onmessage():Function;
  native public function set onmessage(value:Function):void;

  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",name="MutationRecord")]
public class randori.webkit.dom.MutationRecord extends Object
{
  native public function MutationRecord():*;
  native public function get type():String;

  native public function get target():randori.webkit.dom.Node;
  native public function get addedNodes():randori.webkit.dom.NodeList;
  native public function get removedNodes():randori.webkit.dom.NodeList;
  native public function get previousSibling():randori.webkit.dom.Node;
  native public function get nextSibling():randori.webkit.dom.Node;

  native public function get attributeName():String;
  native public function get attributeNamespace():String;
  native public function get oldValue():String;
}


[JavaScript(export="false",name="NodeIterator")]
public class randori.webkit.dom.NodeIterator extends Object
{
  native public function NodeIterator():*;
  native public function get root():randori.webkit.dom.Node;

  native public function get whatToShow():uint;
  native public function get filter():randori.webkit.dom.NodeFilter;
  native public function get expandEntityReferences():Boolean;
  native public function get referenceNode():randori.webkit.dom.Node;
  native public function get pointerBeforeReferenceNode():Boolean;

  native public function nextNode():randori.webkit.dom.Node;
  native public function previousNode():randori.webkit.dom.Node;
  native public function detach():void;
}


[JavaScript(export="false",nativecondition="SHADOW_DOM",name="ShadowRoot")]
public class randori.webkit.dom.ShadowRoot extends randori.webkit.dom.DocumentFragment
{
  native public function ShadowRoot():*;
  native public function get activeElement():randori.webkit.dom.Element;

  native public function get applyAuthorStyles():Boolean;
  native public function set applyAuthorStyles(value:Boolean):void;
  native public function get resetStyleInheritance():Boolean;
  native public function set resetStyleInheritance(value:Boolean):void;
  native public function get innerHTML():String;

  native public function set innerHTML(value:String):void;
  native public function getSelection():randori.webkit.page.Selection;
  native public function getElementById(elementId:String = ""):randori.webkit.dom.Element;
  native public function getElementsByClassName(className:String = ""):randori.webkit.dom.NodeList;
  native public function getElementsByTagName(tagName:String = ""):randori.webkit.dom.NodeList;

  native public function getElementsByTagNameNS(namespaceURI:String = "",localName:String = ""):randori.webkit.dom.NodeList;
  native public function elementFromPoint(x:uint = null,y:uint = null):randori.webkit.dom.Element;
}


[JavaScript(export="false",name="TreeWalker")]
public class randori.webkit.dom.TreeWalker extends Object
{
  native public function TreeWalker():*;
  native public function get root():randori.webkit.dom.Node;
  native public function get whatToShow():uint;

  native public function get filter():randori.webkit.dom.NodeFilter;
  native public function get expandEntityReferences():Boolean;
  native public function get currentNode():randori.webkit.dom.Node;
  native public function set currentNode(value:randori.webkit.dom.Node):void;
  native public function parentNode():randori.webkit.dom.Node;

  native public function firstChild():randori.webkit.dom.Node;
  native public function lastChild():randori.webkit.dom.Node;
  native public function previousSibling():randori.webkit.dom.Node;
  native public function nextSibling():randori.webkit.dom.Node;
  native public function previousNode():randori.webkit.dom.Node;

  native public function nextNode():randori.webkit.dom.Node;
}


[JavaScript(export="false",nativecondition="WEBGL",omitconstructor="true",name="WebGLContextAttributes")]
public class randori.webkit.html.canvas.WebGLContextAttributes extends Object
{
  native public function WebGLContextAttributes():*;
  native public function get alpha():Boolean;
  native public function set alpha(value:Boolean):void;
  native public function get depth():Boolean;

  native public function set depth(value:Boolean):void;
  native public function get stencil():Boolean;
  native public function set stencil(value:Boolean):void;
  native public function get antialias():Boolean;
  native public function set antialias(value:Boolean):void;

  native public function get premultipliedAlpha():Boolean;
  native public function set premultipliedAlpha(value:Boolean):void;
  native public function get preserveDrawingBuffer():Boolean;
  native public function set preserveDrawingBuffer(value:Boolean):void;
}


[JavaScript(export="false",nativecondition="MICRODATA",omitconstructor="true",name="MicroDataItemValue")]
public class randori.webkit.html.MicroDataItemValue extends Object
{
  native public function MicroDataItemValue():*;
}


[JavaScript(export="false",omitconstructor="true",name="ValidityState")]
public class randori.webkit.html.ValidityState extends Object
{

  native public function ValidityState():*;
  native public function get valueMissing():Boolean;
  native public function get typeMismatch():Boolean;
  native public function get patternMismatch():Boolean;
  native public function get tooLong():Boolean;

  native public function get rangeUnderflow():Boolean;
  native public function get rangeOverflow():Boolean;
  native public function get stepMismatch():Boolean;
  native public function get badInput():Boolean;
  native public function get customError():Boolean;

  native public function get valid():Boolean;
}


[JavaScript(export="false",name="MediaKeySession")]
public class randori.webkit.modules.encryptedmedia.MediaKeySession extends Object
{
  native public function MediaKeySession():*;
  native public function get error():randori.webkit.html.MediaKeyError;
  native public function get keySystem():String;
  native public function get sessionId():String;

  native public function update(key:Object):void;
  native public function close():void;
  native public function addEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function removeEventListener(type:String,listener:Function,useCapture:Boolean = false):void;
  native public function dispatchEvent(evt:randori.webkit.dom.DomEvent):Boolean;
}


[JavaScript(export="false",omitconstructor="true",name="MemoryInfo")]
public class randori.webkit.page.MemoryInfo extends Object
{

  native public function MemoryInfo():*;
  native public function get totalJSHeapSize():uint;
  native public function get usedJSHeapSize():uint;
  native public function get jsHeapSizeLimit():uint;
}


[JavaScript(export="false",nativecondition="CSP_NEXT",omitconstructor="true",name="SecurityPolicy")]
public class randori.webkit.page.SecurityPolicy extends Object
{
  native public function SecurityPolicy():*;

  native public function get allowsEval():Boolean;
  native public function get allowsInlineScript():Boolean;
  native public function get allowsInlineStyle():Boolean;
  native public function get isActive():Boolean;
  native public function get reportURIs():randori.webkit.dom.DOMStringList;

  native public function allowsConnectionTo(url:String):Boolean;
  native public function allowsFontFrom(url:String):Boolean;
  native public function allowsFormAction(url:String):Boolean;
  native public function allowsFrameFrom(url:String):Boolean;
  native public function allowsImageFrom(url:String):Boolean;

  native public function allowsMediaFrom(url:String):Boolean;
  native public function allowsObjectFrom(url:String):Boolean;
  native public function allowsPluginType(type:String):Boolean;
  native public function allowsScriptFrom(url:String):Boolean;
  native public function allowsStyleFrom(url:String):Boolean;
}


[JavaScript(export="false",nativecondition="INPUT_SPEECH",name="SpeechInputResultList")]
public dynamic class randori.webkit.page.SpeechInputResultList extends Object
{

  native public function SpeechInputResultList():*;
  native public function get length():uint;
}


[JavaScript(export="false",nativecondition="SVG",name="SVGPoint")]
public class randori.webkit.svg.SVGPoint extends Object
{
  native public function SVGPoint():*;
  native public function get x():Number;
  native public function set x(value:Number):void;

  native public function get y():Number;
  native public function set y(value:Number):void;
  native public function matrixTransform(matrix:randori.webkit.svg.SVGMatrix):SVGPoint;
}


[JavaScript(export="false",nativecondition="SVG",name="SVGRect")]
public class randori.webkit.svg.SVGRect extends Object
{
  native public function SVGRect():*;
  native public function get x():Number;

  native public function set x(value:Number):void;
  native public function get y():Number;
  native public function set y(value:Number):void;
  native public function get width():Number;
  native public function set width(value:Number):void;

  native public function get height():Number;
  native public function set height(value:Number):void;
}


[JavaScript(export="false",name="XPathExpression")]
public class randori.webkit.xml.XPathExpression extends Object
{
  native public function XPathExpression():*;
  native public function evaluate(contextNode:randori.webkit.dom.Node = null,type:uint = null,inResult:randori.webkit.xml.XPathResult = null):randori.webkit.xml.XPathResult;
}


[JavaScript(export="false",omitconstructor="true",name="XPathNSResolver")]
public class randori.webkit.xml.XPathNSResolver extends Object
{
  native public function XPathNSResolver():*;

  native public function lookupNamespaceURI(prefix:String = ""):String;
}


public class guice.binding.decorator.ContextDecorator extends guice.binding.AbstractBinding
{
  native public function ContextDecorator(sourceBinding:guice.binding.AbstractBinding):*;
  native private var sourceBinding:guice.binding.AbstractBinding;
  native private var instance:Object;
  native public override function getTypeName():String;

  native public override function getScope():int;
  native public override function provide(injector:guice.Injector):Object;
}


public class guice.binding.decorator.SingletonDecorator extends guice.binding.decorator.ContextDecorator
{
  native public function SingletonDecorator(sourceBinding:guice.binding.AbstractBinding):*;
  native public override function getScope():int;
}


[JavaScript(export="false",nativecondition="SVG",name="SVGMatrix")]
public class randori.webkit.svg.SVGMatrix extends Object
{
  native public function SVGMatrix():*;

  native public function get a():Number;
  native public function set a(value:Number):void;
  native public function get b():Number;
  native public function set b(value:Number):void;
  native public function get c():Number;

  native public function set c(value:Number):void;
  native public function get d():Number;
  native public function set d(value:Number):void;
  native public function get e():Number;
  native public function set e(value:Number):void;

  native public function get f():Number;
  native public function set f(value:Number):void;
  native public function multiply(secondMatrix:SVGMatrix):SVGMatrix;
  native public function inverse():SVGMatrix;
  native public function translate(x:Number,y:Number):SVGMatrix;

  native public function scale(scaleFactor:Number):SVGMatrix;
  native public function scaleNonUniform(scaleFactorX:Number,scaleFactorY:Number):SVGMatrix;
  native public function rotate(angle:Number):SVGMatrix;
  native public function rotateFromVector(x:Number,y:Number):SVGMatrix;
  native public function flipX():SVGMatrix;

  native public function flipY():SVGMatrix;
  native public function skewX(angle:Number):SVGMatrix;
  native public function skewY(angle:Number):SVGMatrix;
}

