<idea-plugin version="2" url="http://randoriframework.com">
    <name>Randori Compiler</name>
    <version>0.2.4</version>
    <idea-version since-build="123.169"/>

    <vendor>Teoti Graphix, LLC</vendor>
    <category>Framework integration</category>

    <description><![CDATA[
    <p>The Randori Framework is a tool that helps in making LARGE Javascript application development manageable.</p>
    <p>It consists of an Actionscript cross-compiler and a client-side JavaScript framework.</p>
    <p>Please visit <strong>http://randoriframework.com</strong> for more information.</p>
    ]]></description>


    <depends>JavaScript</depends>
    <depends>com.intellij.css</depends>
    <depends>com.intellij.flex</depends>

    <change-notes>
        <![CDATA[
         <h3>0.2.4 changes:</h3>
            <ul>
                <li>[plugin-enhancement] "New Randori File" menu is now bundled into one dialog.</li>
                <li>[plugin-enhancement] all Randori specific menu items are only available when a Randori project is active.</li>
                <li>[plugin-feature] Randori specific CSS code completions.</li>
                <li>[compiler-feature] incremental compilation implemented.</li>
            </ul>
         <h3>0.2.3 changes:</h3>
            <ul>
                <li>[plugin-bug] fixed runtime exception when builtin.swc was not found in SDK.</li>
            </ul>
         <h3>0.2.2 changes:</h3>
            <ul>
                <li>[compiler-bug] fixed bug with function call and JavaScript(name) transform.</li>
                <li>[compiler-bug] fixed issue with global static function not reducing correctly.</li>
            </ul>
         <h3>0.2.1 changes:</h3>
            <ul>
                <li>[compiler-bug] getClassDependencies() now tracks Type arguments as dependencies.</li>
                <li>[compiler-bug] Array literal variable error.</li>
                <li>[plugin-feature] Build on file save.</li>
                <li>[plugin-enhancement] Added Behavior, Mediator and Context templates.</li>
                <li>[compiler-feature] Private constructors cancel build.</li>
            </ul>
         <h3>0.2.0 changes:</h3>
            <ul>
                <li>Plugin alpha release.</li>
            </ul>
        ]]>
    </change-notes>

    <application-components>
        <component>
            <implementation-class>randori.plugin.components.RandoriApplicationComponent</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>randori.plugin.compiler.RandoriCompilerLoader</implementation-class>
        </component>
        <component>
            <implementation-class>randori.plugin.components.RandoriProjectComponent</implementation-class>
        </component>
        <component>
            <implementation-class>randori.plugin.runner.RandoriServerComponent</implementation-class>
        </component>
    </project-components>

    <module-components>
        <component>
            <implementation-class>randori.plugin.components.RandoriModuleComponent</implementation-class>
        </component>
    </module-components>

    <actions>
        <action id="Randori.NewClass" class="randori.plugin.action.NewRandoriClassAction"
                text="Randori File" description="Create new Randori file">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewGroup1"/>
        </action>

        <action id="RandoriPlugin.Parse" class="randori.plugin.action.ParseAction"
                text="Parse Randori"
                description="Parse Randori files for errors">
            <add-to-group group-id="BuildMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="shift ctrl P"/>
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">

        <projectStructureDetector implementation="randori.plugin.projectStructure.detection.RandoriProjectStructureDetector"/>

        <fileTypeFactory implementation="randori.plugin.components.RandoriApplicationComponent"/>
        <library.type implementation="randori.plugin.library.RandoriLibraryType"/>

        <filetype.decompiler filetype="RBL" implementationClass="randori.plugin.compiled.RblFileDecompiler"/>
        <filetype.stubBuilder filetype="RBL" implementationClass="randori.plugin.compiled.RblFileStubBuilder"/>
        <fileType.fileViewProviderFactory filetype="RBL"
                                          implementationClass="randori.plugin.compiled.RblFileViewProviderFactory"/>
        <syntaxHighlighter key="RBL" factoryClass="randori.plugin.compiled.RblSyntaxHighlighterProvider"/>
        <codeInsight.lineMarkerProvider language="Decompiled RBL"
                                        implementationClass="randori.plugin.compiled.DecompiledRblLineMarkerProvider"/>
        <lang.parserDefinition language="Decompiled RBL"
                               implementationClass="randori.plugin.compiled.DecompiledRblParserDefinition"/>
        <structureViewBuilder key="RBL" factoryClass="randori.plugin.compiled.RblStructureViewBuilderProvider"/>

        <completion.contributor language="CSS" implementationClass="randori.plugin.lang.css.RandoriCSSSCompletionContributor" id="randoriCSS"/>

        <fileTemplateGroup implementation="randori.plugin.action.RandoriTemplatesFactory"/>

        <sdkType implementation="randori.plugin.roots.RandoriSdkType"/>

        <moduleType id="RANDORI_MODULE"
                    implementationClass="randori.plugin.module.RandoriModuleType"
                    classpathProvider="true"/>

        <moduleConfigurationEditorProvider implementation="randori.plugin.module.RandoriModuleEditorsProvider"/>

        <configurationType implementation="randori.plugin.runner.RandoriRunnerConfigurationType"/>

        <toolWindow id="Randori Problems" anchor="bottom" icon="/icons/randori13x13.png"
                    factoryClass="randori.plugin.ui.ProblemsToolWindowFactory"/>

        <dom.fileDescription implementation="randori.plugin.xml.FalconConfigDomFileDescription"/>

        <projectService
                serviceImplementation="randori.plugin.service.RandoriProjectPreferences"/>
        <projectService
                serviceImplementation="randori.plugin.service.ProblemsService"/>

        <projectService serviceInterface="randori.plugin.configuration.RandoriCompilerModel"
                        serviceImplementation="randori.plugin.configuration.RandoriCompilerModel"/>

        <projectConfigurable instance="randori.plugin.configuration.RandoriCompilerConfigurable" id="Randori compiler"
                             displayName="Randori Compiler" parentId="project.propCompiler"/>

        <standardResourceProvider implementation="randori.plugin.lang.RandoriResourceProvider"/>

    </extensions>

</idea-plugin>
